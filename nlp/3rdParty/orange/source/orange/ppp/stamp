(dp0
S'TComputeDomainContingency_ImputeWithClassifier'
p1
(i__main__
ClassDefinition
p2
(dp3
S'extended'
p4
I1
sS'imported'
p5
I0
sS'name'
p6
g1
sS'parent'
p7
S'TComputeDomainContingency'
p8
sS'abstract'
p9
I00
sS'components'
p10
(lp11
sS'properties'
p12
(lp13
(S'TLearner'
p14
S'learnerForDiscrete'
p15
g15
S'constructs a classifier for imputation of discrete values'
p16
I0
I0
I00
Ntp17
a(S'TLearner'
p18
S'learnerForContinuous'
p19
g19
S'constructs a classifier for imputation of continuous values'
p20
I0
I0
I00
Ntp21
a(S'bool'
p22
S'classIsOuter'
p23
g23
S'tells whether the class is the outer variable in contingencies'
p24
I0
I0
I01
Ntp25
asS'constants'
p26
(dp27
sbsS'TRuleDataStoppingCriteria_NoPositives'
p28
(i__main__
ClassDefinition
p29
(dp30
g4
I1
sg5
I0
sg6
g28
sg7
S'TRuleDataStoppingCriteria'
p31
sg9
I00
sg10
(lp32
sg12
(lp33
sg26
(dp34
sbsS'TLearner_Python'
p35
(i__main__
ClassDefinition
p36
(dp37
g4
I1
sg5
I0
sg6
g35
sg7
S'TLearner'
p38
sg9
I00
sg10
(lp39
sg12
(lp40
(S'int'
p41
S'needs'
p42
g42
S'the kind of data that learner needs'
p43
I01
I0
I01
Ntp44
asg26
(dp45
sbsS'TConditionalProbabilityEstimator_FromDistribution'
p46
(i__main__
ClassDefinition
p47
(dp48
g4
I1
sg5
I0
sg6
g46
sg7
S'TConditionalProbabilityEstimator'
p49
sg9
I00
sg10
(lp50
sg12
(lp51
(S'TContingency'
p52
S'probabilities'
p53
g53
S'Contingency that stores conditional probabilities'
p54
I0
I0
I00
Ntp55
a(S'bool'
p56
S'supportsDiscrete'
p57
g57
S'can estimate probabilities of discrete attributes'
p58
I01
I0
I01
Ntp59
a(S'bool'
p60
S'supportsContinuous'
p61
g61
S'can estimate probabilities of continuous attributes'
p62
I01
I0
I01
Ntp63
asg26
(dp64
sbsS'TFeatureInducer'
p65
(i__main__
ClassDefinition
p66
(dp67
g4
I1
sg5
I0
sg6
g65
sg7
S'TOrange'
p68
sg9
I01
sg10
(lp69
sg12
(lp70
sg26
(dp71
sbsS'TIMByRowsConstructor'
p72
(i__main__
ClassDefinition
p73
(dp74
g4
I1
sg5
I0
sg6
g72
sg7
S'TOrange'
p75
sg9
I01
sg10
(lp76
sg12
(lp77
sg26
(dp78
sbsS'TFilteredGenerator'
p79
(i__main__
ClassDefinition
p80
(dp81
g4
I1
sg5
I0
sg6
g79
sg7
S'TAdapterGenerator'
p82
sg9
I00
sg10
(lp83
sg12
(lp84
(S'TFilter'
p85
S'filter'
p86
g86
S'decides which examples are skipped'
p87
I0
I0
I00
Ntp88
a(S'TDomain'
p89
S'domain'
p90
g90
S'domain'
p91
I0
I0
I00
Ntp92
a(S'int'
p93
S'version'
p94
g94
S'unique version identifier'
p95
I01
I0
I01
Ntp96
asg26
(dp97
sbsS'TExamplesDistance_Maximal'
p98
(i__main__
ClassDefinition
p99
(dp100
g4
I1
sg5
I0
sg6
g98
sg7
S'TExamplesDistance_Normalized'
p101
sg9
I00
sg10
(lp102
sg12
(lp103
(S'TAttributedFloatList'
p104
S'normalizers'
p105
g105
S'normalizing factors for attributes'
p106
I0
I0
I00
Ntp107
a(S'TAttributedFloatList'
p108
S'bases'
p109
g109
S'lowest values for attributes'
p110
I0
I0
I00
Ntp111
a(S'TAttributedFloatList'
p112
S'averages'
p113
g113
S'average values for continuous attribute values'
p114
I0
I0
I00
Ntp115
a(S'TAttributedFloatList'
p116
S'variances'
p117
g117
S'variations for continuous attribute values'
p118
I0
I0
I00
Ntp119
a(S'int'
p120
S'domainVersion'
p121
g121
S'version of domain on which the ranges were computed'
p122
I0
I0
I01
Ntp123
a(S'bool'
p124
S'normalize'
p125
g125
S'tells whether to normalize distances between attributes'
p126
I0
I0
I01
Ntp127
a(S'bool'
p128
S'ignoreUnknowns'
p129
g129
S'if true (default: false) unknown values are ignored in computation'
p130
I0
I0
I01
Ntp131
asg26
(dp132
sbsS'TSubsetsGenerator_withRestrictions_iterator'
p133
(i__main__
ClassDefinition
p134
(dp135
g4
I1
sg5
I0
sg6
g133
sg7
S'TSubsetsGenerator_iterator'
p136
sg9
I00
sg10
(lp137
sg12
(lp138
(S'TSubsetsGenerator_iterator'
p139
S'subGenerator_iterator'
p140
g140
S'subset generator'
p141
I0
I0
I00
Ntp142
a(S'TVarList'
p143
S'required'
p144
g144
S'set of required attributes'
p145
I0
I0
I00
Ntp146
a(S'TVarList'
p147
S'forbidden'
p148
g148
S'set of forbidden attributes'
p149
I0
I0
I00
Ntp150
a(S'TVarListList'
p151
S'forbiddenSubSubsets'
p152
g152
S'set of forbidden subsets (attributes that must not occur together)'
p153
I0
I0
I00
Ntp154
a(S'TVarList'
p155
S'varList'
p156
g156
S'a set of attributes from which subsets are generated'
p157
I0
I0
I00
Ntp158
asg26
(dp159
sbsS'TPreprocessor_discretize'
p160
(i__main__
ClassDefinition
p161
(dp162
g4
I1
sg5
I0
sg6
g160
sg7
S'TPreprocessor'
p163
sg9
I00
sg10
(lp164
sg12
(lp165
(S'TVarList'
p166
S'attributes'
p167
g167
S'attributes to be discretized (all, if not defined or empty)'
p168
I0
I0
I00
Ntp169
a(S'bool'
p170
S'discretizeClass'
p171
g171
S'also discretize the class attribute (default: false)'
p172
I0
I0
I01
Ntp173
a(S'TDiscretization'
p174
S'method'
p175
g175
S'discretization method'
p176
I0
I0
I00
Ntp177
asg26
(dp178
sbsS'TProgressCallback_Python'
p179
(i__main__
ClassDefinition
p180
(dp181
g4
I1
sg5
I0
sg6
g179
sg7
S'TProgressCallback'
p182
sg9
I00
sg10
(lp183
sg12
(lp184
sg26
(dp185
sbsS'TAssociationRulesSparseInducer'
p186
(i__main__
ClassDefinition
p187
(dp188
g4
I1
sg5
I0
sg6
g186
sg7
S'TOrange'
p189
sg9
I00
sg10
(lp190
sg12
(lp191
(S'int'
p192
S'maxItemSets'
p193
g193
S'maximal number of itemsets (increase if you want)'
p194
I0
I0
I01
Ntp195
a(S'float'
p196
S'confidence'
p197
g197
S'required confidence'
p198
I0
I0
I01
Ntp199
a(S'float'
p200
S'support'
p201
g201
S'required support'
p202
I0
I0
I01
Ntp203
a(S'bool'
p204
S'storeExamples'
p205
g205
S'stores examples corresponding to rules'
p206
I0
I0
I01
Ntp207
asg26
(dp208
sbsS'TFilter_sameExample'
p209
(i__main__
ClassDefinition
p210
(dp211
g4
I1
sg5
I0
sg6
g209
sg7
S'TFilter'
p212
sg9
I00
sg10
(lp213
sg12
(lp214
(S'TExample'
p215
S'example'
p216
g216
S'example with which examples are compared'
p217
I0
I0
I00
Ntp218
a(S'bool'
p219
S'negate'
p220
g220
S'if true, filter output should be negated.'
p221
I0
I0
I01
Ntp222
a(S'TDomain'
p223
S'domain'
p224
g224
S'domain to which the examples are converted (if needed)'
p225
I0
I0
I00
Ntp226
asg26
(dp227
sbsS'TRuleClassifierConstructor'
p228
(i__main__
ClassDefinition
p229
(dp230
g4
I1
sg5
I0
sg6
g228
sg7
S'TOrange'
p231
sg9
I01
sg10
(lp232
sg12
(lp233
sg26
(dp234
sbsS'TMakeRandomIndicesMultiple'
p235
(i__main__
ClassDefinition
p236
(dp237
g4
I1
sg5
I0
sg6
g235
sg7
S'TMakeRandomIndices'
p238
sg9
I00
sg10
(lp239
sg12
(lp240
(S'int'
p241
S'stratified'
p242
g242
S' requests stratified distributions'
p243
I0
I0
I01
S'MakeRandomIndices_Stratification'
p244
tp245
a(S'int'
p246
S'randseed'
p247
g247
S'a seed for random generator'
p248
I0
I0
I01
Ntp249
a(S'TRandomGenerator'
p250
S'randomGenerator'
p251
g251
S'a random generator'
p252
I0
I0
I00
Ntp253
asg26
(dp254
sbsS'TLearnerFD'
p255
(i__main__
ClassDefinition
p256
(dp257
g4
I1
sg5
I0
sg6
g255
sg7
S'TLearner'
p258
sg9
I00
sg10
(lp259
sg12
(lp260
(S'TDomain'
p261
S'domain'
p262
g262
S'domain'
p263
I0
I0
I00
Ntp264
ag44
asg26
(dp265
sbsS'TMapIntValue'
p266
(i__main__
ClassDefinition
p267
(dp268
g4
I1
sg5
I0
sg6
g266
sg7
S'TTransformValue'
p269
sg9
I00
sg10
(lp270
sg12
(lp271
(S'TIntList'
p272
S'mapping'
p273
g273
S'a lookup table'
p274
I0
I0
I00
Ntp275
a(S'TTransformValue'
p276
S'subTransform'
p277
g277
S'transformation executed prior to this'
p278
I0
I0
I00
Ntp279
asg26
(dp280
sbsS'TEVDistGetter_Standard'
p281
(i__main__
ClassDefinition
p282
(dp283
g4
I1
sg5
I0
sg6
g281
sg7
S'TEVDistGetter'
p284
sg9
I00
sg10
(lp285
sg12
(lp286
(S'TEVDistList'
p287
S'dists'
p288
g288
S'EVC distribution (sorted by rule length, 0 = for rules without conditions)'
p289
I0
I0
I00
Ntp290
asg26
(dp291
sbsS'TFeatureByIM'
p292
(i__main__
ClassDefinition
p293
(dp294
g4
I1
sg5
I0
sg6
g292
sg7
S'TFeatureInducer'
p295
sg9
I00
sg10
(lp296
sg12
(lp297
(S'TIMConstructor'
p298
S'IMconstructor'
p299
g299
S'incompatibility matrix constructor'
p300
I0
I0
I00
Ntp301
a(S'TClustersFromIM'
p302
S'clustersFromIM'
p303
g303
S'clustering algorithm'
p304
I0
I0
I00
Ntp305
a(S'int'
p306
S'completion'
p307
g307
S' decides how to determine the class for points not covered by any cluster'
p308
I0
I0
I01
S'FeatureByIM_Completion'
p309
tp310
asg26
(dp311
S'Completion'
p312
(lp313
(S'NoCompletion'
p314
S'completion_no'
p315
tp316
a(S'CompletionByDefault'
p317
S'completion_default'
p318
tp319
a(S'CompletionByBayes'
p320
S'completion_bayes'
p321
tp322
assbsS'TRuleBeamRefiner'
p323
(i__main__
ClassDefinition
p324
(dp325
g4
I1
sg5
I0
sg6
g323
sg7
S'TOrange'
p326
sg9
I01
sg10
(lp327
sg12
(lp328
sg26
(dp329
sbsS'TSubsetsGenerator_iterator'
p330
(i__main__
ClassDefinition
p331
(dp332
g4
I1
sg5
I0
sg6
g330
sg7
S'TOrange'
p333
sg9
I01
sg10
(lp334
sg12
(lp335
g158
asg26
(dp336
sbsS'TEquiDistDiscretizer'
p337
(i__main__
ClassDefinition
p338
(dp339
g4
I1
sg5
I0
sg6
g337
sg7
S'TDiscretizer'
p340
sg9
I00
sg10
(lp341
sg12
(lp342
(S'int'
p343
S'numberOfIntervals'
p344
g344
S'number of intervals'
p345
I0
I0
I01
Ntp346
a(S'float'
p347
S'firstCut'
p348
g348
S'the first cut-off point'
p349
I0
I0
I01
Ntp350
a(S'float'
p351
S'step'
p352
g352
S'step (width of interval)'
p353
I0
I0
I01
Ntp354
ag279
asg26
(dp355
sbsS'TFindNearest_BruteForce'
p356
(i__main__
ClassDefinition
p357
(dp358
g4
I1
sg5
I0
sg6
g356
sg7
S'TFindNearest'
p359
sg9
I00
sg10
(lp360
sg12
(lp361
(S'TExamplesDistance'
p362
S'distance'
p363
g363
S'metrics'
p364
I0
I0
I00
Ntp365
a(S'TExampleGenerator'
p366
S'examples'
p367
g367
S'a list of stored examples'
p368
I0
I0
I00
Ntp369
a(S'int'
p370
S'weightID'
p371
g371
S'weight to use when counting examples'
p372
I0
I0
I01
Ntp373
a(S'int'
p374
S'distanceID'
p375
g375
S'id of meta attribute where the distance should be stored (0 = no storing)'
p376
I0
I0
I01
Ntp377
a(S'bool'
p378
S'includeSame'
p379
g379
S'tells whether to include examples that are same as the reference example'
p380
I0
I0
I01
Ntp381
asg26
(dp382
sbsS'TRuleBeamInitializer'
p383
(i__main__
ClassDefinition
p384
(dp385
g4
I1
sg5
I0
sg6
g383
sg7
S'TOrange'
p386
sg9
I01
sg10
(lp387
sg12
(lp388
sg26
(dp389
sbsS'TMeasureAttribute_relevance'
p390
(i__main__
ClassDefinition
p391
(dp392
g4
I1
sg5
I0
sg6
g390
sg7
S'TMeasureAttributeFromProbabilities'
p393
sg9
I00
sg10
(lp394
sg12
(lp395
(S'TProbabilityEstimatorConstructor'
p396
S'estimatorConstructor'
p397
g397
S'probability estimator (none by default)'
p398
I0
I0
I00
Ntp399
a(S'TConditionalProbabilityEstimatorConstructor'
p400
S'conditionalEstimatorConstructor'
p401
g401
S'conditional probability estimator (none by default)'
p402
I0
I0
I00
Ntp403
a(S'int'
p404
S'unknownsTreatment'
p405
g405
S' treatment of unknown values'
p406
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p407
tp408
a(S'int'
p409
S'needs'
p410
g410
S' describes what kind of data is needed for computation'
p411
I0
I0
I01
S'MeasureAttribute_Needs'
p412
tp413
a(S'bool'
p414
S'handlesDiscrete'
p415
g415
S'tells whether the measure can handle discrete attributes'
p416
I0
I0
I01
Ntp417
a(S'bool'
p418
S'handlesContinuous'
p419
g419
S'tells whether the measure can handle continuous attributes'
p420
I0
I0
I01
Ntp421
a(S'bool'
p422
S'computesThresholds'
p423
g423
S'tells whether the measure can compute threshold functions/maxima for continuous attributes'
p424
I0
I0
I01
Ntp425
asg26
(dp426
sbsS'TBayesLearner'
p427
(i__main__
ClassDefinition
p428
(dp429
g4
I1
sg5
I0
sg6
g427
sg7
S'TLearner'
p430
sg9
I00
sg10
(lp431
sg12
(lp432
(S'TProbabilityEstimatorConstructor'
p433
S'estimatorConstructor'
p434
g434
S'constructs a probability estimator for P(C)'
p435
I0
I0
I00
Ntp436
a(S'TConditionalProbabilityEstimatorConstructor'
p437
S'conditionalEstimatorConstructor'
p438
g438
S'constructs a probability estimator for P(C|A) '
p439
I0
I0
I00
Ntp440
a(S'TConditionalProbabilityEstimatorConstructor'
p441
S'conditionalEstimatorConstructorContinuous'
p442
g442
S'constructs a probability estimator for P(C|A) for continuous attributes'
p443
I0
I0
I00
Ntp444
a(S'bool'
p445
S'normalizePredictions'
p446
g446
S'instructs learner to construct a classifier that normalizes probabilities'
p447
I0
I0
I01
Ntp448
a(S'bool'
p449
S'adjustThreshold'
p450
g450
S'adjust probability thresholds (for binary classes only)'
p451
I0
I0
I01
Ntp452
ag44
asg26
(dp453
sbsS'TConditionalProbabilityEstimator'
p454
(i__main__
ClassDefinition
p455
(dp456
g4
I1
sg5
I0
sg6
g454
sg7
S'TOrange'
p457
sg9
I01
sg10
(lp458
sg12
(lp459
g59
ag63
asg26
(dp460
sbsS'TColumnAssessor_Laplace'
p461
(i__main__
ClassDefinition
p462
(dp463
g4
I1
sg5
I0
sg6
g461
sg7
S'TColumnAssessor'
p464
sg9
I00
sg10
(lp465
sg12
(lp466
sg26
(dp467
sbsS'TFilter_compatibleExample'
p468
(i__main__
ClassDefinition
p469
(dp470
g4
I1
sg5
I0
sg6
g468
sg7
S'TFilter'
p471
sg9
I00
sg10
(lp472
sg12
(lp473
(S'TExample'
p474
S'example'
p475
g475
S'example with which examples are compared'
p476
I0
I0
I00
Ntp477
ag222
ag226
asg26
(dp478
sbsS'TRemoveRedundant'
p479
(i__main__
ClassDefinition
p480
(dp481
g4
I1
sg5
I0
sg6
g479
sg7
S'TOrange'
p482
sg9
I01
sg10
(lp483
sg12
(lp484
(S'bool'
p485
S'keepValues'
p486
g486
S'keep an attribute if number values is only smaller, not one'
p487
I0
I0
I01
Ntp488
asg26
(dp489
sbsS'TExamplesDistanceConstructor_Hamming'
p490
(i__main__
ClassDefinition
p491
(dp492
g4
I1
sg5
I0
sg6
g490
sg7
S'TExamplesDistanceConstructor'
p493
sg9
I00
sg10
(lp494
sg12
(lp495
(S'bool'
p496
S'ignoreClass'
p497
g497
S'if true (default), class value is ignored when computing distances'
p498
I0
I0
I01
Ntp499
a(S'bool'
p500
S'ignoreUnknowns'
p501
g501
S'if true (default: false) unknown values are ignored in computation'
p502
I0
I0
I01
Ntp503
a(S'bool'
p504
S'ignoreClass'
p505
g505
S'if true (default), class value is ignored when computing distances'
p506
I0
I0
I01
Ntp507
asg26
(dp508
sbsS'TRuleClassifierConstructor_firstRule'
p509
(i__main__
ClassDefinition
p510
(dp511
g4
I1
sg5
I0
sg6
g509
sg7
S'TRuleClassifierConstructor'
p512
sg9
I00
sg10
(lp513
sg12
(lp514
sg26
(dp515
sbsS'TStopDistributionClustering_noProfit'
p516
(i__main__
ClassDefinition
p517
(dp518
g4
I1
sg5
I0
sg6
g516
sg7
S'TStopDistributionClustering'
p519
sg9
I00
sg10
(lp520
sg12
(lp521
(S'float'
p522
S'minProfitProportion'
p523
g523
S'minimal allowable profit proportion'
p524
I0
I0
I01
Ntp525
asg26
(dp526
sbsS'TColoredIG'
p527
(i__main__
ClassDefinition
p528
(dp529
g4
I1
sg5
I0
sg6
g527
sg7
S'TGeneralExampleClustering'
p530
sg9
I00
sg10
(lp531
sg12
(lp532
(S'TIG'
p533
S'ig'
p534
g534
S'incompatibility graph'
p535
I0
I0
I00
Ntp536
a(S'TIntList'
p537
S'colors'
p538
g538
S'colors (one element corresponding to each ig node)'
p539
I0
I0
I00
Ntp540
asg26
(dp541
sbsS'TMeasureAttribute'
p542
(i__main__
ClassDefinition
p543
(dp544
g4
I1
sg5
I0
sg6
g542
sg7
S'TOrange'
p545
sg9
I00
sg10
(lp546
sg12
(lp547
g413
ag417
ag421
ag425
asg26
(dp548
S'Needs'
p549
(lp550
(S'Contingency_Class'
p551
I0
tp552
a(S'DomainContingency'
p553
I1
tp554
a(S'Generator'
p555
I2
tp556
asS'UnknownsTreatment'
p557
(lp558
(S'IgnoreUnknowns'
p559
I0
tp560
a(S'ReduceByUnknowns'
p561
I1
tp562
a(S'UnknownsToCommon'
p563
I2
tp564
a(S'UnknownsAsValue'
p565
I3
tp566
assbsS'TRuleEvaluator'
p567
(i__main__
ClassDefinition
p568
(dp569
g4
I1
sg5
I0
sg6
g567
sg7
S'TOrange'
p570
sg9
I01
sg10
(lp571
sg12
(lp572
sg26
(dp573
sbsS'TStringVariable'
p574
(i__main__
ClassDefinition
p575
(dp576
g4
I1
sg5
I0
sg6
g574
sg7
S'TVariable'
p577
sg9
I00
sg10
(lp578
sg12
(lp579
(S'string'
p580
S'name'
p581
g581
S"variable's name"
p582
I0
I0
I01
Ntp583
a(S'int'
p584
S'varType'
p585
g585
S' variable type'
p586
I0
I0
I01
S'Variable_Type'
p587
tp588
a(S'bool'
p589
S'ordered'
p590
g590
S'variable values are ordered'
p591
I0
I0
I01
Ntp592
a(S'bool'
p593
S'distributed'
p594
g594
S'variable values are distributions'
p595
I0
I0
I01
Ntp596
a(S'int'
p597
S'defaultMetaId'
p598
g598
S'default (proposed, suggested...) meta id for this variable'
p599
I0
I0
I01
Ntp600
a(S'TRandomGenerator'
p601
S'randomGenerator'
p602
g602
S'random generator for random values (initialized when first needed)'
p603
I0
I0
I00
Ntp604
a(S'TVariable'
p605
S'sourceVariable'
p606
g606
S'The attribute that this attribute is computed from (when applicable)'
p607
I0
I0
I00
Ntp608
a(S'TClassifier'
p609
S'getValueFrom'
p610
g610
S'Function to compute the value from values of other variables'
p611
I0
I0
I00
Ntp612
asg26
(dp613
sbsS'TGraphAsTree'
p614
(i__main__
ClassDefinition
p615
(dp616
g4
I1
sg5
I0
sg6
g614
sg7
S'TGraph'
p617
sg9
I00
sg10
(lp618
sg12
(lp619
(S'int'
p620
S'nVertices'
p621
g621
S'the number of vertices'
p622
I01
I0
I01
Ntp623
a(S'int'
p624
S'nEdgeTypes'
p625
g625
S'the number of edge types'
p626
I01
I0
I01
Ntp627
a(S'bool'
p628
S'directed'
p629
g629
S'directed'
p630
I01
I0
I01
Ntp631
asg26
(dp632
sbsS'TTreeExampleSplitter_IgnoreUnknowns'
p633
(i__main__
ClassDefinition
p634
(dp635
g4
I1
sg5
I0
sg6
g633
sg7
S'TTreeExampleSplitter'
p636
sg9
I00
sg10
(lp637
sg12
(lp638
sg26
(dp639
sbsS'TProbabilityEstimator_FromDistribution'
p640
(i__main__
ClassDefinition
p641
(dp642
g4
I1
sg5
I0
sg6
g640
sg7
S'TProbabilityEstimator'
p643
sg9
I00
sg10
(lp644
sg12
(lp645
(S'TDistribution'
p646
S'probabilities'
p647
g647
S'probabilities'
p648
I0
I0
I00
Ntp649
a(S'bool'
p650
S'supportsDiscrete'
p651
g651
S'can estimate probabilities of discrete attributes'
p652
I01
I0
I01
Ntp653
a(S'bool'
p654
S'supportsContinuous'
p655
g655
S'can estimate probabilities of continuous attributes'
p656
I01
I0
I01
Ntp657
asg26
(dp658
sbsS'TExamplesDistance'
p659
(i__main__
ClassDefinition
p660
(dp661
g4
I1
sg5
I0
sg6
g659
sg7
S'TOrange'
p662
sg9
I01
sg10
(lp663
sg12
(lp664
sg26
(dp665
sbsS'TFileExampleGenerator'
p666
(i__main__
ClassDefinition
p667
(dp668
g4
I1
sg5
I0
sg6
g666
sg7
S'TExampleGenerator'
p669
sg9
I01
sg10
(lp670
sg12
(lp671
(S'string'
p672
S'filename'
p673
g673
S'filename'
p674
I0
I0
I01
Ntp675
a(S'int'
p676
S'startDataPos'
p677
g677
S'starting position of the data in file'
p678
I0
I0
I01
Ntp679
a(S'int'
p680
S'startDataLine'
p681
g681
S'line in the file where the data starts'
p682
I0
I0
I01
Ntp683
ag92
ag96
asg26
(dp684
sbsS'TNormalizeContinuous'
p685
(i__main__
ClassDefinition
p686
(dp687
g4
I1
sg5
I0
sg6
g685
sg7
S'TTransformValue'
p688
sg9
I00
sg10
(lp689
sg12
(lp690
(S'float'
p691
S'average'
p692
g692
S'the average value'
p693
I0
I0
I01
Ntp694
a(S'float'
p695
S'span'
p696
g696
S'the value span'
p697
I0
I0
I01
Ntp698
ag279
asg26
(dp699
sbsS'TContingencyClassAttr'
p700
(i__main__
ClassDefinition
p701
(dp702
g4
I1
sg5
I0
sg6
g700
sg7
S'TContingencyClass'
p703
sg9
I00
sg10
(lp704
sg12
(lp705
(S'TVariable'
p706
S'outerVariable'
p707
g707
S'outer attribute'
p708
I0
I0
I00
Ntp709
a(S'TVariable'
p710
S'innerVariable'
p711
g711
S'inner attribute'
p712
I0
I0
I00
Ntp713
a(S'int'
p714
S'varType'
p715
g715
S' outer attribute type'
p716
I0
I0
I01
S'Variable_Type'
p717
tp718
a(S'TDistribution'
p719
S'outerDistribution'
p720
g720
S'distribution of values of outer attributes'
p721
I0
I0
I00
Ntp722
a(S'TDistribution'
p723
S'innerDistribution'
p724
g724
S'distribution of values of inner attributes'
p725
I0
I0
I00
Ntp726
a(S'TDistribution'
p727
S'innerDistributionUnknown'
p728
g728
S'distribution of inner variable for examples where the outer value was unknown'
p729
I0
I0
I00
Ntp730
asg26
(dp731
sbsS'TMissValuesGenerator'
p732
(i__main__
ClassDefinition
p733
(dp734
g4
I1
sg5
I0
sg6
g732
sg7
S'TChangeExampleGenerator'
p735
sg9
I00
sg10
(lp736
sg12
(lp737
(S'TIntFloatList'
p738
S'replaceProbabilities'
p739
g739
S"probabilities for replacing attributes' values"
p740
I0
I0
I00
Ntp741
a(S'TRandomGenerator'
p742
S'randomGenerator'
p743
g743
S'random generator'
p744
I0
I0
I00
Ntp745
ag92
ag96
asg26
(dp746
sbsS'TLogRegClassifier'
p747
(i__main__
ClassDefinition
p748
(dp749
g4
I1
sg5
I0
sg6
g747
sg7
S'TClassifierFD'
p750
sg9
I00
sg10
(lp751
sg12
(lp752
(S'TDomain'
p753
S'continuizedDomain'
p754
g754
S'if absent, there is no continuous attributes in original domain'
p755
I0
I0
I00
Ntp756
a(S'TEFMDataDescription'
p757
S'dataDescription'
p758
g758
S'Data needed for classification in presence of undefined values'
p759
I0
I0
I00
Ntp760
a(S'TAttributedFloatList'
p761
S'beta'
p762
g762
S'estimated beta coefficients for logistic regression'
p763
I0
I0
I00
Ntp764
a(S'TAttributedFloatList'
p765
S'beta_se'
p766
g766
S'estimated standard errors for beta coefficients'
p767
I0
I0
I00
Ntp768
a(S'TAttributedFloatList'
p769
S'wald_Z'
p770
g770
S'Wald Z statstic for beta coefficients'
p771
I0
I0
I00
Ntp772
a(S'TAttributedFloatList'
p773
S'P'
p774
g774
S'estimated significances for beta coefficients'
p775
I0
I0
I00
Ntp776
a(S'float'
p777
S'likelihood'
p778
g778
S"Likelihood: The likelihood function is the function which specifies the probability of the sample observed on the basis of a known model, as a function of the model's parameters. "
p779
I0
I0
I01
Ntp780
a(S'int'
p781
S'fit_status'
p782
g782
S"Tells how the model fitting ended - either regularly (LogRegFitter.OK), or it was interrupted due to one of beta coefficients escaping towards infinity (LogRegFitter.Infinity) or since the values didn't converge (LogRegFitter.Divergence)."
p783
I0
I0
I01
Ntp784
a(S'TImputer'
p785
S'imputer'
p786
g786
S'if present, it imputes unknown values'
p787
I0
I0
I00
Ntp788
a(S'TDomain'
p789
S'domain'
p790
g790
S'domain'
p791
I0
I0
I00
Ntp792
a(S'TVariable'
p793
S'classVar'
p794
g794
S'class variable'
p795
I0
I0
I00
Ntp796
a(S'bool'
p797
S'computesProbabilities'
p798
g798
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p799
I0
I0
I01
Ntp800
asg26
(dp801
sbsS'TEquiDistDiscretization'
p802
(i__main__
ClassDefinition
p803
(dp804
g4
I1
sg5
I0
sg6
g802
sg7
S'TDiscretization'
p805
sg9
I00
sg10
(lp806
sg12
(lp807
(S'int'
p808
S'numberOfIntervals'
p809
g809
S'number of intervals'
p810
I0
I0
I01
Ntp811
asg26
(dp812
sbsS'TPreprocessor_select'
p813
(i__main__
ClassDefinition
p814
(dp815
g4
I1
sg5
I0
sg6
g813
sg7
S'TPreprocessor'
p816
sg9
I00
sg10
(lp817
sg12
(lp818
(S'TVarList'
p819
S'attributes'
p820
g820
S'tells which attributes to select'
p821
I0
I0
I00
Ntp822
asg26
(dp823
sbsS'TSVMClassifierSparse'
p824
(i__main__
ClassDefinition
p825
(dp826
g4
I1
sg5
I0
sg6
g824
sg7
S'TSVMClassifier'
p827
sg9
I00
sg10
(lp828
sg12
(lp829
(S'bool'
p830
S'useNonMeta'
p831
g831
S'include non meta attributes'
p832
I0
I0
I01
Ntp833
a(S'TIntList'
p834
S'nSV'
p835
g835
S'nSV'
p836
I0
I0
I00
Ntp837
a(S'TFloatList'
p838
S'rho'
p839
g839
S'rho'
p840
I0
I0
I00
Ntp841
a(S'TFloatListList'
p842
S'coef'
p843
g843
S'coef'
p844
I0
I0
I00
Ntp845
a(S'TFloatList'
p846
S'probA'
p847
g847
S'probA - pairwise probability information'
p848
I0
I0
I00
Ntp849
a(S'TFloatList'
p850
S'probB'
p851
g851
S'probB - pairwise probability information'
p852
I0
I0
I00
Ntp853
a(S'TExampleTable'
p854
S'supportVectors'
p855
g855
S'support vectors'
p856
I0
I0
I00
Ntp857
a(S'TExampleTable'
p858
S'examples'
p859
g859
S'examples used to train the classifier'
p860
I0
I0
I00
Ntp861
a(S'TKernelFunc'
p862
S'kernelFunc'
p863
g863
S'custom kernel function'
p864
I0
I0
I00
Ntp865
ag792
ag796
ag800
asg26
(dp866
sbsS'TChangeExampleGenerator'
p867
(i__main__
ClassDefinition
p868
(dp869
g4
I1
sg5
I0
sg6
g867
sg7
S'TAdapterGenerator'
p870
sg9
I01
sg10
(lp871
sg12
(lp872
g92
ag96
asg26
(dp873
sbsS'TIMByRowsByRelief'
p874
(i__main__
ClassDefinition
p875
(dp876
g4
I1
sg5
I0
sg6
g874
sg7
S'TIMByRowsConstructor'
p877
sg9
I00
sg10
(lp878
sg12
(lp879
(S'float'
p880
S'k'
p881
g881
S'number of neighbours'
p882
I0
I0
I01
Ntp883
a(S'float'
p884
S'm'
p885
g885
S'number of reference examples'
p886
I0
I0
I01
Ntp887
a(S'float'
p888
S'kFromColumns'
p889
g889
S'if positive, number of neighbours is #columns*kFromColumns'
p890
I0
I0
I01
Ntp891
a(S'bool'
p892
S'ignoreSameExample'
p893
g893
S'does not put reference example into M'
p894
I0
I0
I01
Ntp895
a(S'bool'
p896
S'convertToBinary'
p897
g897
S'convert to binary class (hit-miss)'
p898
I0
I0
I01
Ntp899
a(S'bool'
p900
S'correctClassFirst'
p901
g901
S'puts the correct class proportion to the first place'
p902
I0
I0
I01
Ntp903
a(S'bool'
p904
S'allExamples'
p905
g905
S'uses all examples for reference examples'
p906
I0
I0
I01
Ntp907
a(S'bool'
p908
S'allSameNeighbours'
p909
g909
S'uses all the examples same to the reference as neighbours'
p910
I0
I0
I01
Ntp911
asg26
(dp912
sbsS'TFindNearestConstructor'
p913
(i__main__
ClassDefinition
p914
(dp915
g4
I1
sg5
I0
sg6
g913
sg7
S'TOrange'
p916
sg9
I01
sg10
(lp917
sg12
(lp918
(S'TExamplesDistanceConstructor'
p919
S'distanceConstructor'
p920
g920
S'metrics'
p921
I0
I0
I00
Ntp922
a(S'bool'
p923
S'includeSame'
p924
g924
S'tells whether to include examples that are same as the reference example'
p925
I0
I0
I01
Ntp926
asg26
(dp927
sbsS'TTableAverager'
p928
(i__main__
ClassDefinition
p929
(dp930
g4
I1
sg5
I0
sg6
g928
sg7
S'TOrange'
p931
sg9
I00
sg10
(lp932
sg12
(lp933
sg26
(dp934
sbsS'TIntervalDiscretizer'
p935
(i__main__
ClassDefinition
p936
(dp937
g4
I1
sg5
I0
sg6
g935
sg7
S'TDiscretizer'
p938
sg9
I00
sg10
(lp939
sg12
(lp940
(S'TFloatList'
p941
S'points'
p942
g942
S'cut-off points'
p943
I0
I0
I00
Ntp944
ag279
asg26
(dp945
sbsS'TItemsetsSparseInducer'
p946
(i__main__
ClassDefinition
p947
(dp948
g4
I1
sg5
I0
sg6
g946
sg7
S'TOrange'
p949
sg9
I00
sg10
(lp950
sg12
(lp951
(S'int'
p952
S'maxItemSets'
p953
g953
S'maximal number of itemsets (increase if you want)'
p954
I0
I0
I01
Ntp955
a(S'float'
p956
S'support'
p957
g957
S'required support'
p958
I0
I0
I01
Ntp959
a(S'bool'
p960
S'storeExamples'
p961
g961
S'stores examples corresponding to itemsets'
p962
I0
I0
I01
Ntp963
asg26
(dp964
sbsS'TDomainContinuizer'
p965
(i__main__
ClassDefinition
p966
(dp967
g4
I1
sg5
I0
sg6
g965
sg7
S'TOrange'
p968
sg9
I00
sg10
(lp969
sg12
(lp970
(S'bool'
p971
S'zeroBased'
p972
g972
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p973
I0
I0
I01
Ntp974
a(S'int'
p975
S'continuousTreatment'
p976
g976
S' 0-leave as they are, 1-divide by span, 1-normalize'
p977
I0
I0
I01
S'DomainContinuizer_MultinomialTreatment'
p978
tp979
a(S'int'
p980
S'multinomialTreatment'
p981
g981
S' 0-lowest value, 1-most frequent (or baseValue), 2-n binary, 3-ignore, 4-error, 5-convert as ordinal, 6-ordinal,normalized'
p982
I0
I0
I01
S'DomainContinuizer_ContinuousTreatment'
p983
tp984
a(S'int'
p985
S'classTreatment'
p986
g986
S' 3-leave as is unless target is given, 4-error if not continuous nor binary nor target given, 5-convert as ordinal (unless target given)'
p987
I0
I0
I01
S'DomainContinuizer_ClassTreatment'
p988
tp989
asg26
(dp990
S'MultinomialTreatment'
p991
(lp992
(S'LowestIsBase'
p993
I0
tp994
a(S'FrequentIsBase'
p995
I1
tp996
a(S'NValues'
p997
I2
tp998
a(S'Ignore'
p999
I3
tp1000
a(S'IgnoreAllDiscrete'
p1001
I4
tp1002
a(S'ReportError'
p1003
I5
tp1004
a(S'AsOrdinal'
p1005
I6
tp1006
a(S'AsNormalizedOrdinal'
p1007
I7
tp1008
asS'ClassTreatment'
p1009
(lp1010
(S'LeaveUnlessTarget'
p1011
S'3'
p1012
tp1013
a(S'ErrorIfCannotHandle'
p1014
S'4'
p1015
tp1016
a(S'AsOrdinal'
p1017
S'5'
p1018
tp1019
asS'ContinuousTreatment'
p1020
(lp1021
(S'Leave'
p1022
I0
tp1023
a(S'NormalizeBySpan'
p1024
I1
tp1025
a(S'NormalizeByVariance'
p1026
I2
tp1027
assbsS'TExamplesDistanceConstructor_Euclidean'
p1028
(i__main__
ClassDefinition
p1029
(dp1030
g4
I1
sg5
I0
sg6
g1028
sg7
S'TExamplesDistanceConstructor_Normalized'
p1031
sg9
I00
sg10
(lp1032
sg12
(lp1033
(S'bool'
p1034
S'normalize'
p1035
g1035
S'tells whether to normalize distances between attributes'
p1036
I0
I0
I01
Ntp1037
a(S'bool'
p1038
S'ignoreUnknowns'
p1039
g1039
S'if true (default: false) unknown values are ignored in computation'
p1040
I0
I0
I01
Ntp1041
ag507
asg26
(dp1042
sbsS'TContingencyAttrAttr'
p1043
(i__main__
ClassDefinition
p1044
(dp1045
g4
I1
sg5
I0
sg6
g1043
sg7
S'TContingency'
p1046
sg9
I00
sg10
(lp1047
sg12
(lp1048
g709
ag713
ag718
ag722
ag726
ag730
asg26
(dp1049
sbsS'TRuleBeamRefiner_Selector'
p1050
(i__main__
ClassDefinition
p1051
(dp1052
g4
I1
sg5
I0
sg6
g1050
sg7
S'TRuleBeamRefiner'
p1053
sg9
I00
sg10
(lp1054
sg12
(lp1055
(S'TDiscretization'
p1056
S'discretization'
p1057
g1057
S'discretization for continuous attributes'
p1058
I0
I0
I00
Ntp1059
asg26
(dp1060
sbsS'TExamplesDistance_Relief'
p1061
(i__main__
ClassDefinition
p1062
(dp1063
g4
I1
sg5
I0
sg6
g1061
sg7
S'TExamplesDistance'
p1064
sg9
I00
sg10
(lp1065
sg12
(lp1066
(S'TDomainDistributions'
p1067
S'distributions'
p1068
g1068
S"distributions of attributes' values"
p1069
I0
I0
I00
Ntp1070
a(S'TAttributedFloatList'
p1071
S'averages'
p1072
g1072
S'average values of attributes'
p1073
I0
I0
I00
Ntp1074
a(S'TAttributedFloatList'
p1075
S'normalizations'
p1076
g1076
S"ranges of attributes' values"
p1077
I0
I0
I00
Ntp1078
a(S'TAttributedFloatList'
p1079
S'bothSpecial'
p1080
g1080
S'distance if both values of both attributes are undefined'
p1081
I0
I0
I00
Ntp1082
asg26
(dp1083
sbsS'TExamplesDistance_Manhattan'
p1084
(i__main__
ClassDefinition
p1085
(dp1086
g4
I1
sg5
I0
sg6
g1084
sg7
S'TExamplesDistance_Normalized'
p1087
sg9
I00
sg10
(lp1088
sg12
(lp1089
g107
ag111
ag115
ag119
ag123
ag127
ag131
asg26
(dp1090
sbsS'TTreeDescender'
p1091
(i__main__
ClassDefinition
p1092
(dp1093
g4
I1
sg5
I0
sg6
g1091
sg7
S'TOrange'
p1094
sg9
I01
sg10
(lp1095
sg12
(lp1096
sg26
(dp1097
sbsS'TIMBlurer'
p1098
(i__main__
ClassDefinition
p1099
(dp1100
g4
I1
sg5
I0
sg6
g1098
sg7
S'TIMByRowsPreprocessor'
p1101
sg9
I00
sg10
(lp1102
sg12
(lp1103
(S'float'
p1104
S'weight'
p1105
g1105
S'weight of neighbours'
p1106
I0
I0
I01
Ntp1107
a(S'float'
p1108
S'origWeight'
p1109
g1109
S'weight of original row'
p1110
I0
I0
I01
Ntp1111
a(S'TFloatList'
p1112
S'attrWeights'
p1113
g1113
S'weights by individual (different) attributes'
p1114
I0
I0
I00
Ntp1115
a(S'bool'
p1116
S'adjustOrigWeight'
p1117
g1117
S'uses 1-weight(s) for weight of original row'
p1118
I0
I0
I01
Ntp1119
a(S'bool'
p1120
S'onlyEmpty'
p1121
g1121
S'blurs only empty cells'
p1122
I0
I0
I01
Ntp1123
asg26
(dp1124
sbsS'TFeatureByMinComplexity'
p1125
(i__main__
ClassDefinition
p1126
(dp1127
g4
I1
sg5
I0
sg6
g1125
sg7
S'TFeatureInducer'
p1128
sg9
I00
sg10
(lp1129
sg12
(lp1130
(S'TColorIG'
p1131
S'colorIG'
p1132
g1132
S'graph coloring algorithm'
p1133
I0
I0
I00
Ntp1134
a(S'int'
p1135
S'completion'
p1136
g1136
S' decides how to determine the class for points not covered by any cluster'
p1137
I0
I0
I01
S'FeatureByMinComplexity_Completion'
p1138
tp1139
asg26
(dp1140
S'Completion'
p1141
(lp1142
(S'NoCompletion'
p1143
S'completion_no'
p1144
tp1145
a(S'CompletionByDefault'
p1146
S'completion_default'
p1147
tp1148
a(S'CompletionByBayes'
p1149
S'completion_bayes'
p1150
tp1151
assbsS'TPreprocessor_dropMissingClasses'
p1152
(i__main__
ClassDefinition
p1153
(dp1154
g4
I1
sg5
I0
sg6
g1152
sg7
S'TPreprocessor'
p1155
sg9
I00
sg10
(lp1156
sg12
(lp1157
sg26
(dp1158
sbsS'TkNNClassifier'
p1159
(i__main__
ClassDefinition
p1160
(dp1161
g4
I1
sg5
I0
sg6
g1159
sg7
S'TClassifierFD'
p1162
sg9
I00
sg10
(lp1163
sg12
(lp1164
(S'TFindNearest'
p1165
S'findNearest'
p1166
g1166
S''
p1167
I0
I0
I00
Ntp1168
a(S'float'
p1169
g881
g881
S'number of neighbours (0 for sqrt of #examples)'
p1170
I0
I0
I01
Ntp1171
a(S'bool'
p1172
S'rankWeight'
p1173
g1173
S'enable weighting by ranks'
p1174
I0
I0
I01
Ntp1175
a(S'int'
p1176
S'weightID'
p1177
g1177
S'id of meta-attribute with weight'
p1178
I0
I0
I01
Ntp1179
a(S'int'
p1180
S'nExamples'
p1181
g1181
S'the number of learning examples '
p1182
I0
I0
I01
Ntp1183
ag792
ag796
ag800
asg26
(dp1184
sbsS'TOrange'
p1185
(i__main__
ClassDefinition
p1186
(dp1187
g4
I1
sg5
I0
sg6
g1185
sg7
Nsg9
I00
sg10
(lp1188
sg12
(lp1189
sg26
(dp1190
sbsS'TRuleValidator'
p1191
(i__main__
ClassDefinition
p1192
(dp1193
g4
I1
sg5
I0
sg6
g1191
sg7
S'TOrange'
p1194
sg9
I01
sg10
(lp1195
sg12
(lp1196
sg26
(dp1197
sbsS'TIMByRowsBySorting'
p1198
(i__main__
ClassDefinition
p1199
(dp1200
g4
I1
sg5
I0
sg6
g1198
sg7
S'TIMByRowsConstructor'
p1201
sg9
I00
sg10
(lp1202
sg12
(lp1203
sg26
(dp1204
sbsS'TRuleBeamInitializer_Python'
p1205
(i__main__
ClassDefinition
p1206
(dp1207
g4
I1
sg5
I0
sg6
g1205
sg7
S'TRuleBeamInitializer'
p1208
sg9
I00
sg10
(lp1209
sg12
(lp1210
sg26
(dp1211
sbsS'TRuleCovererAndRemover_Python'
p1212
(i__main__
ClassDefinition
p1213
(dp1214
g4
I1
sg5
I0
sg6
g1212
sg7
S'TRuleCovererAndRemover'
p1215
sg9
I00
sg10
(lp1216
sg12
(lp1217
sg26
(dp1218
sbsS'TMeasureAttribute_gainRatioA'
p1219
(i__main__
ClassDefinition
p1220
(dp1221
g4
I1
sg5
I0
sg6
g1219
sg7
S'TMeasureAttribute_gainRatio'
p1222
sg9
I00
sg10
(lp1223
sg12
(lp1224
g399
ag403
ag408
ag413
ag417
ag421
ag425
asg26
(dp1225
sbsS'TCartesianClassifier'
p1226
(i__main__
ClassDefinition
p1227
(dp1228
g4
I1
sg5
I0
sg6
g1226
sg7
S'TClassifierFD'
p1229
sg9
I00
sg10
(lp1230
sg12
(lp1231
g792
ag796
ag800
asg26
(dp1232
sbsS'TLinearClassifier'
p1233
(i__main__
ClassDefinition
p1234
(dp1235
g4
I1
sg5
I0
sg6
g1233
sg7
S'TClassifierFD'
p1236
sg9
I00
sg10
(lp1237
sg12
(lp1238
(S'TFloatListList'
p1239
S'weights'
p1240
g1240
S'Computed feature weights'
p1241
I0
I0
I00
Ntp1242
a(S'TExampleTable'
p1243
S'examples'
p1244
g1244
S'Examples used to train the classifier'
p1245
I0
I0
I00
Ntp1246
ag792
ag796
ag800
asg26
(dp1247
sbsS'TRemoveRedundantByInduction'
p1248
(i__main__
ClassDefinition
p1249
(dp1250
g4
I1
sg5
I0
sg6
g1248
sg7
S'TRemoveRedundant'
p1251
sg9
I00
sg10
(lp1252
sg12
(lp1253
(S'TFeatureInducer'
p1254
S'featureReducer'
p1255
g1255
S'feature construction algorithm'
p1256
I0
I0
I00
Ntp1257
a(S'TMeasureAttribute'
p1258
S'measure'
p1259
g1259
S'measure for initial ordering of attributes'
p1260
I0
I0
I00
Ntp1261
a(S'TDiscretization'
p1262
S'discretization'
p1263
g1263
S'discretization method'
p1264
I0
I0
I00
Ntp1265
ag488
asg26
(dp1266
sbsS'TFilter_conjunction'
p1267
(i__main__
ClassDefinition
p1268
(dp1269
g4
I1
sg5
I0
sg6
g1267
sg7
S'TFilter'
p1270
sg9
I00
sg10
(lp1271
sg12
(lp1272
(S'TFilterList'
p1273
S'filters'
p1274
g1274
S'a list of filters;'
p1275
I0
I0
I00
Ntp1276
ag222
ag226
asg26
(dp1277
sbsS'TGraph'
p1278
(i__main__
ClassDefinition
p1279
(dp1280
g4
I1
sg5
I0
sg6
g1278
sg7
S'TOrange'
p1281
sg9
I01
sg10
(lp1282
sg12
(lp1283
g623
ag627
ag631
asg26
(dp1284
sbsS'TStopIMClusteringByAssessor'
p1285
(i__main__
ClassDefinition
p1286
(dp1287
g4
I1
sg5
I0
sg6
g1285
sg7
S'TOrange'
p1288
sg9
I01
sg10
(lp1289
sg12
(lp1290
sg26
(dp1291
sbsS'TClustersFromDistributions'
p1292
(i__main__
ClassDefinition
p1293
(dp1294
g4
I1
sg5
I0
sg6
g1292
sg7
S'TOrange'
p1295
sg9
I01
sg10
(lp1296
sg12
(lp1297
sg26
(dp1298
sbsS'TVariable'
p1299
(i__main__
ClassDefinition
p1300
(dp1301
g4
I1
sg5
I0
sg6
g1299
sg7
S'TOrange'
p1302
sg9
I01
sg10
(lp1303
sg12
(lp1304
g583
ag588
ag592
ag596
ag600
ag604
ag608
ag612
asg26
(dp1305
S'Type'
p1306
(lp1307
(S'None'
p1308
S'(int)TValue::NONE'
p1309
tp1310
a(S'Discrete'
p1311
S'(int)TValue::INTVAR'
p1312
tp1313
a(S'Continuous'
p1314
S'(int)TValue::FLOATVAR'
p1315
tp1316
a(S'Other'
p1317
S'(int)(TValue::FLOATVAR+1)'
p1318
tp1319
a(S'String'
p1320
S'(int)STRINGVAR'
p1321
tp1322
asS'MakeStatus'
p1323
(lp1324
(S'OK'
p1325
I0
tp1326
a(S'MissingValues'
p1327
I1
tp1328
a(S'NoRecognizedValues'
p1329
I2
tp1330
a(S'Incompatible'
p1331
I3
tp1332
a(S'NotFound'
p1333
I4
tp1334
assbsS'TImputerConstructor_average'
p1335
(i__main__
ClassDefinition
p1336
(dp1337
g4
I1
sg5
I0
sg6
g1335
sg7
S'TImputerConstructor'
p1338
sg9
I00
sg10
(lp1339
sg12
(lp1340
(S'bool'
p1341
S'imputeClass'
p1342
g1342
S'tells whether to impute the class value (default: true)'
p1343
I0
I0
I01
Ntp1344
asg26
(dp1345
sbsS'TRuleCovererAndRemover'
p1346
(i__main__
ClassDefinition
p1347
(dp1348
g4
I1
sg5
I0
sg6
g1346
sg7
S'TOrange'
p1349
sg9
I01
sg10
(lp1350
sg12
(lp1351
sg26
(dp1352
sbsS'TExampleTable'
p1353
(i__main__
ClassDefinition
p1354
(dp1355
g4
I1
sg5
I0
sg6
g1353
sg7
S'TExampleGenerator'
p1356
sg9
I00
sg10
(lp1357
sg12
(lp1358
(S'TRandomGenerator'
p1359
S'randomGenerator'
p1360
g1360
S'random generator used by randomExample'
p1361
I0
I0
I00
Ntp1362
a(S'TExampleGenerator'
p1363
S'lock'
p1364
g1364
S'the real owner of examples'
p1365
I01
I0
I00
Ntp1366
a(S'bool'
p1367
S'ownsExamples'
p1368
g1368
S'if false, examples in this table are references to examples in another table'
p1369
I01
I0
I01
Ntp1370
ag92
ag96
asg26
(dp1371
sbsS'TRemoveRedundantByQuality'
p1372
(i__main__
ClassDefinition
p1373
(dp1374
g4
I1
sg5
I0
sg6
g1372
sg7
S'TRemoveRedundant'
p1375
sg9
I00
sg10
(lp1376
sg12
(lp1377
(S'bool'
p1378
S'remeasure'
p1379
g1379
S'reapply the measure after removal'
p1380
I0
I0
I01
Ntp1381
a(S'float'
p1382
S'minQuality'
p1383
g1383
S'minimal acceptable quality'
p1384
I0
I0
I01
Ntp1385
a(S'int'
p1386
S'removeBut'
p1387
g1387
S'the desired number of attributes'
p1388
I0
I0
I01
Ntp1389
a(S'TMeasureAttribute'
p1390
S'measure'
p1391
g1391
S'attribute quality measure'
p1392
I0
I0
I00
Ntp1393
ag488
asg26
(dp1394
sbsS'TGraphAsList'
p1395
(i__main__
ClassDefinition
p1396
(dp1397
g4
I1
sg5
I0
sg6
g1395
sg7
S'TGraph'
p1398
sg9
I00
sg10
(lp1399
sg12
(lp1400
g623
ag627
ag631
asg26
(dp1401
sbsS'TDistanceMapConstructor'
p1402
(i__main__
ClassDefinition
p1403
(dp1404
g4
I1
sg5
I0
sg6
g1402
sg7
S'TOrange'
p1405
sg9
I00
sg10
(lp1406
sg12
(lp1407
(S'TSymMatrix'
p1408
S'distanceMatrix'
p1409
g1409
S'distance matrix'
p1410
I0
I0
I00
Ntp1411
a(S'TIntList'
p1412
S'order'
p1413
g1413
S'order of elements'
p1414
I0
I0
I00
Ntp1415
asg26
(dp1416
sbsS'TTransformValue'
p1417
(i__main__
ClassDefinition
p1418
(dp1419
g4
I1
sg5
I0
sg6
g1417
sg7
S'TOrange'
p1420
sg9
I01
sg10
(lp1421
sg12
(lp1422
g279
asg26
(dp1423
sbsS'TComputeDomainContingency_DomainTransformation'
p1424
(i__main__
ClassDefinition
p1425
(dp1426
g4
I1
sg5
I0
sg6
g1424
sg7
S'TComputeDomainContingency'
p1427
sg9
I00
sg10
(lp1428
sg12
(lp1429
(S'TDomainTransformerConstructor'
p1430
S'domainTransformerConstructor'
p1431
g1431
S'constructs a domain in which each attribute corresponds one of originals'
p1432
I0
I0
I00
Ntp1433
a(S'bool'
p1434
S'resultInOriginalDomain'
p1435
g1435
S'tells whether the resulting DomainContingency should consist of original attributes'
p1436
I0
I0
I01
Ntp1437
ag25
asg26
(dp1438
sbsS'TTreePruner'
p1439
(i__main__
ClassDefinition
p1440
(dp1441
g4
I1
sg5
I0
sg6
g1439
sg7
S'TOrange'
p1442
sg9
I01
sg10
(lp1443
sg12
(lp1444
sg26
(dp1445
sbsS'TImputer_Python'
p1446
(i__main__
ClassDefinition
p1447
(dp1448
g4
I1
sg5
I0
sg6
g1446
sg7
S'TImputer'
p1449
sg9
I00
sg10
(lp1450
sg12
(lp1451
sg26
(dp1452
sbsS'TPreprocessor_addGaussianClassNoise'
p1453
(i__main__
ClassDefinition
p1454
(dp1455
g4
I1
sg5
I0
sg6
g1453
sg7
S'TPreprocessor'
p1456
sg9
I00
sg10
(lp1457
sg12
(lp1458
(S'float'
p1459
S'deviation'
p1460
g1460
S'class deviation'
p1461
I0
I0
I01
Ntp1462
a(S'TRandomGenerator'
p1463
S'randomGenerator'
p1464
g1464
S'random number generator'
p1465
I0
I0
I00
Ntp1466
asg26
(dp1467
sbsS'TRuleEvaluator_Python'
p1468
(i__main__
ClassDefinition
p1469
(dp1470
g4
I1
sg5
I0
sg6
g1468
sg7
S'TRuleEvaluator'
p1471
sg9
I00
sg10
(lp1472
sg12
(lp1473
sg26
(dp1474
sbsS'TIGBySorting'
p1475
(i__main__
ClassDefinition
p1476
(dp1477
g4
I1
sg5
I0
sg6
g1475
sg7
S'TIGConstructor'
p1478
sg9
I00
sg10
(lp1479
sg12
(lp1480
sg26
(dp1481
sbsS'TIMClustering'
p1482
(i__main__
ClassDefinition
p1483
(dp1484
g4
I1
sg5
I0
sg6
g1482
sg7
S'TOrange'
p1485
sg9
I00
sg10
(lp1486
sg12
(lp1487
(S'TIM'
p1488
S'im'
p1489
g1489
S'incompatibilty matrix'
p1490
I0
I0
I00
Ntp1491
a(S'TIntList'
p1492
S'clusters'
p1493
g1493
S'cluster index for each matrix column'
p1494
I0
I0
I00
Ntp1495
a(S'int'
p1496
S'maxCluster'
p1497
g1497
S'the highest cluster index'
p1498
I0
I0
I01
Ntp1499
a(S'float'
p1500
S'quality'
p1501
g1501
S'cluster quality'
p1502
I0
I0
I01
Ntp1503
asg26
(dp1504
sbsS'TProgressCallback'
p1505
(i__main__
ClassDefinition
p1506
(dp1507
g4
I1
sg5
I0
sg6
g1505
sg7
S'TOrange'
p1508
sg9
I01
sg10
(lp1509
sg12
(lp1510
sg26
(dp1511
sbsS'THierarchicalClustering'
p1512
(i__main__
ClassDefinition
p1513
(dp1514
g4
I1
sg5
I0
sg6
g1512
sg7
S'TOrange'
p1515
sg9
I00
sg10
(lp1516
sg12
(lp1517
(S'int'
p1518
S'linkage'
p1519
g1519
S' linkage'
p1520
I0
I0
I01
S'HierarchicalClustering_Linkage'
p1521
tp1522
a(S'bool'
p1523
S'overwriteMatrix'
p1524
g1524
S'if true (default is false) it will use (and destroy) the distance matrix given as argument'
p1525
I0
I0
I01
Ntp1526
a(S'TProgressCallback'
p1527
S'progressCallback'
p1528
g1528
S'progress callback function'
p1529
I0
I0
I00
Ntp1530
asg26
(dp1531
S'Linkage'
p1532
(lp1533
(S'Single'
p1534
I0
tp1535
a(S'Average'
p1536
I1
tp1537
a(S'Complete'
p1538
I2
tp1539
a(S'Ward'
p1540
I3
tp1541
assbsS'TTreeSplitConstructor_Python'
p1542
(i__main__
ClassDefinition
p1543
(dp1544
g4
I1
sg5
I0
sg6
g1542
sg7
S'TTreeSplitConstructor'
p1545
sg9
I00
sg10
(lp1546
sg12
(lp1547
(S'float'
p1548
S'minSubset'
p1549
g1549
S'minimal number of examples in a subset'
p1550
I0
I0
I01
Ntp1551
asg26
(dp1552
sbsS'TKernelFunc_Python'
p1553
(i__main__
ClassDefinition
p1554
(dp1555
g4
I1
sg5
I0
sg6
g1553
sg7
S'TKernelFunc'
p1556
sg9
I00
sg10
(lp1557
sg12
(lp1558
sg26
(dp1559
sbsS'TAdapterGenerator'
p1560
(i__main__
ClassDefinition
p1561
(dp1562
g4
I1
sg5
I0
sg6
g1560
sg7
S'TExampleGenerator'
p1563
sg9
I00
sg10
(lp1564
sg12
(lp1565
g92
ag96
asg26
(dp1566
sbsS'TIMFromExamples'
p1567
(i__main__
ClassDefinition
p1568
(dp1569
g4
I1
sg5
I0
sg6
g1567
sg7
S'TOrange'
p1570
sg9
I01
sg10
(lp1571
sg12
(lp1572
sg26
(dp1573
sbsS'TMakeRandomIndicesCV'
p1574
(i__main__
ClassDefinition
p1575
(dp1576
g4
I1
sg5
I0
sg6
g1574
sg7
S'TMakeRandomIndices'
p1577
sg9
I00
sg10
(lp1578
sg12
(lp1579
(S'int'
p1580
S'folds'
p1581
g1581
S'number of folds'
p1582
I0
I0
I01
Ntp1583
ag245
ag249
ag253
asg26
(dp1584
sbsS'TPreprocessor_removeDuplicates'
p1585
(i__main__
ClassDefinition
p1586
(dp1587
g4
I1
sg5
I0
sg6
g1585
sg7
S'TPreprocessor'
p1588
sg9
I00
sg10
(lp1589
sg12
(lp1590
sg26
(dp1591
sbsS'TTreeExampleSplitter_UnknownsAsBranchSizes'
p1592
(i__main__
ClassDefinition
p1593
(dp1594
g4
I1
sg5
I0
sg6
g1592
sg7
S'TTreeExampleSplitter'
p1595
sg9
I00
sg10
(lp1596
sg12
(lp1597
sg26
(dp1598
sbsS'TExamplesDistanceConstructor_Normalized'
p1599
(i__main__
ClassDefinition
p1600
(dp1601
g4
I1
sg5
I0
sg6
g1599
sg7
S'TExamplesDistanceConstructor'
p1602
sg9
I01
sg10
(lp1603
sg12
(lp1604
g1037
ag1041
ag507
asg26
(dp1605
sbsS'TCostWrapperLearner'
p1606
(i__main__
ClassDefinition
p1607
(dp1608
g4
I1
sg5
I0
sg6
g1606
sg7
S'TLearner'
p1609
sg9
I00
sg10
(lp1610
sg12
(lp1611
(S'TLearner'
p1612
S'basicLearner'
p1613
g1613
S'basic learner'
p1614
I0
I0
I00
Ntp1615
a(S'TCostMatrix'
p1616
S'costMatrix'
p1617
g1617
S'cost matrix'
p1618
I0
I0
I00
Ntp1619
ag44
asg26
(dp1620
sbsNNsS'TPearsonCorrelation'
p1621
(i__main__
ClassDefinition
p1622
(dp1623
g4
I1
sg5
I0
sg6
g1621
sg7
S'TOrange'
p1624
sg9
I00
sg10
(lp1625
sg12
(lp1626
(S'float'
p1627
S'r'
p1628
g1628
S'correlation coefficient'
p1629
I0
I0
I01
Ntp1630
a(S'float'
p1631
S't'
p1632
g1632
S't-statics significance'
p1633
I0
I0
I01
Ntp1634
a(S'int'
p1635
S'df'
p1636
g1636
S'degrees of freedom'
p1637
I0
I0
I01
Ntp1638
a(S'float'
p1639
S'p'
p1640
g1640
S'significance'
p1641
I0
I0
I01
Ntp1642
asg26
(dp1643
sbsS'TDistributionAssessor_Laplace'
p1644
(i__main__
ClassDefinition
p1645
(dp1646
g4
I1
sg5
I0
sg6
g1644
sg7
S'TDistributionAssessor'
p1647
sg9
I00
sg10
(lp1648
sg12
(lp1649
sg26
(dp1650
sbsS'TColumnAssessor_Relief'
p1651
(i__main__
ClassDefinition
p1652
(dp1653
g4
I1
sg5
I0
sg6
g1651
sg7
S'TColumnAssessor'
p1654
sg9
I00
sg10
(lp1655
sg12
(lp1656
sg26
(dp1657
sbsS'TClassifierByLookupTable'
p1658
(i__main__
ClassDefinition
p1659
(dp1660
g4
I1
sg5
I0
sg6
g1658
sg7
S'TClassifier'
p1661
sg9
I01
sg10
(lp1662
sg12
(lp1663
(S'TValueList'
p1664
S'lookupTable'
p1665
g1665
S'a list of class values, one for each attribute value'
p1666
I01
I0
I00
Ntp1667
a(S'TDistributionList'
p1668
S'distributions'
p1669
g1669
S'a list of class distributions, one for each attribute value'
p1670
I01
I0
I00
Ntp1671
ag796
ag800
asg26
(dp1672
sbsS'TRuleBeamFinder'
p1673
(i__main__
ClassDefinition
p1674
(dp1675
g4
I1
sg5
I0
sg6
g1673
sg7
S'TRuleFinder'
p1676
sg9
I00
sg10
(lp1677
sg12
(lp1678
(S'TRuleBeamInitializer'
p1679
S'initializer'
p1680
g1680
g1167
I0
I0
I00
Ntp1681
a(S'TRuleBeamRefiner'
p1682
S'refiner'
p1683
g1683
g1167
I0
I0
I00
Ntp1684
a(S'TRuleBeamCandidateSelector'
p1685
S'candidateSelector'
p1686
g1686
g1167
I0
I0
I00
Ntp1687
a(S'TRuleBeamFilter'
p1688
S'ruleFilter'
p1689
g1689
g1167
I0
I0
I00
Ntp1690
a(S'TRuleValidator'
p1691
S'ruleStoppingValidator'
p1692
g1692
g1167
I0
I0
I00
Ntp1693
a(S'TRuleValidator'
p1694
S'validator'
p1695
g1695
g1167
I0
I0
I00
Ntp1696
a(S'TRuleEvaluator'
p1697
S'evaluator'
p1698
g1698
g1167
I0
I0
I00
Ntp1699
asg26
(dp1700
sbsS'TC45Classifier'
p1701
(i__main__
ClassDefinition
p1702
(dp1703
g4
I1
sg5
I0
sg6
g1701
sg7
S'TClassifierFD'
p1704
sg9
I00
sg10
(lp1705
sg12
(lp1706
(S'TC45TreeNode'
p1707
S'tree'
p1708
g1708
S'tree'
p1709
I0
I0
I00
Ntp1710
ag792
ag796
ag800
asg26
(dp1711
sbsS'TFilter_values'
p1712
(i__main__
ClassDefinition
p1713
(dp1714
g4
I1
sg5
I0
sg6
g1712
sg7
S'TFilter'
p1715
sg9
I00
sg10
(lp1716
sg12
(lp1717
(S'TValueFilterList'
p1718
S'conditions'
p1719
g1719
S'a list of filters'
p1720
I0
I0
I00
Ntp1721
a(S'bool'
p1722
S'conjunction'
p1723
g1723
S'if true, filter computes conjunction, otherwise disjunction'
p1724
I0
I0
I01
Ntp1725
ag222
ag226
asg26
(dp1726
S'Operator'
p1727
(lp1728
(S'None'
p1729
I0
tp1730
a(S'Equal'
p1731
I1
tp1732
a(S'NotEqual'
p1733
I2
tp1734
a(S'Less'
p1735
I3
tp1736
a(S'LessEqual'
p1737
I4
tp1738
a(S'Greater'
p1739
I5
tp1740
a(S'GreaterEqual'
p1741
I6
tp1742
a(S'Between'
p1743
I7
tp1744
a(S'Outside'
p1745
I8
tp1746
a(S'Contains'
p1747
I9
tp1748
a(S'NotContains'
p1749
I10
tp1750
a(S'BeginsWith'
p1751
I11
tp1752
a(S'EndsWith'
p1753
I12
tp1754
a(S'Listed'
p1755
I13
tp1756
assbsS'TRuleClassifier'
p1757
(i__main__
ClassDefinition
p1758
(dp1759
g4
I1
sg5
I0
sg6
g1757
sg7
S'TClassifier'
p1760
sg9
I01
sg10
(lp1761
sg12
(lp1762
(S'TRuleList'
p1763
S'rules'
p1764
g1764
g1167
I0
I0
I00
Ntp1765
a(S'TExampleTable'
p1766
S'examples'
p1767
g1767
g1167
I0
I0
I00
Ntp1768
a(S'int'
p1769
S'weightID'
p1770
g1770
g1167
I0
I0
I01
Ntp1771
ag796
ag800
asg26
(dp1772
sbsS'TMajorityLearner'
p1773
(i__main__
ClassDefinition
p1774
(dp1775
g4
I1
sg5
I0
sg6
g1773
sg7
S'TLearner'
p1776
sg9
I00
sg10
(lp1777
sg12
(lp1778
(S'TProbabilityEstimatorConstructor'
p1779
S'estimatorConstructor'
p1780
g1780
S'constructs probability estimator'
p1781
I0
I0
I00
Ntp1782
a(S'TDistribution'
p1783
S'aprioriDistribution'
p1784
g1784
S'apriori class distribution'
p1785
I0
I0
I00
Ntp1786
ag44
asg26
(dp1787
sbsS'TSVMLearner'
p1788
(i__main__
ClassDefinition
p1789
(dp1790
g4
I1
sg5
I0
sg6
g1788
sg7
S'TLearner'
p1791
sg9
I00
sg10
(lp1792
sg12
(lp1793
(S'int'
p1794
S'svm_type'
p1795
g1795
S'  SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p1796
I0
I0
I01
S'SVMLearner_SVMType'
p1797
tp1798
a(S'int'
p1799
S'kernel_type'
p1800
g1800
S'  kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p1801
I0
I0
I01
S'SVMLearner_Kernel'
p1802
tp1803
a(S'float'
p1804
S'degree'
p1805
g1805
S'polynomial kernel degree'
p1806
I0
I0
I01
Ntp1807
a(S'float'
p1808
S'gamma'
p1809
g1809
S'poly/rbf/sigm parameter'
p1810
I0
I0
I01
Ntp1811
a(S'float'
p1812
S'coef0'
p1813
g1813
S'poly/sigm parameter'
p1814
I0
I0
I01
Ntp1815
a(S'float'
p1816
S'cache_size'
p1817
g1817
S'cache size in MB'
p1818
I0
I0
I01
Ntp1819
a(S'float'
p1820
S'eps'
p1821
g1821
S'stopping criteria'
p1822
I0
I0
I01
Ntp1823
a(S'float'
p1824
S'C'
p1825
g1825
S'for C_SVC and C_SVR'
p1826
I0
I0
I01
Ntp1827
a(S'float'
p1828
S'nu'
p1829
g1829
S'for NU_SVC and ONE_CLASS'
p1830
I0
I0
I01
Ntp1831
a(S'float'
p1832
g1640
g1640
S'for C_SVR'
p1833
I0
I0
I01
Ntp1834
a(S'int'
p1835
S'shrinking'
p1836
g1836
S'shrinking'
p1837
I0
I0
I01
Ntp1838
a(S'int'
p1839
S'probability'
p1840
g1840
S'probability'
p1841
I0
I0
I01
Ntp1842
a(S'bool'
p1843
S'verbose'
p1844
g1844
S'verbose'
p1845
I0
I0
I01
Ntp1846
a(S'TKernelFunc'
p1847
S'kernelFunc'
p1848
g1848
S'custom kernel function'
p1849
I0
I0
I00
Ntp1850
ag44
asg26
(dp1851
S'Kernel'
p1852
(lp1853
(S'Linear'
p1854
S'LINEAR'
p1855
tp1856
a(S'Polynomial'
p1857
S'POLY'
p1858
tp1859
a(S'RBF'
p1860
S'RBF'
p1861
tp1862
a(S'Sigmoid'
p1863
S'SIGMOID'
p1864
tp1865
a(S'Custom'
p1866
S'CUSTOM'
p1867
tp1868
asS'SVMType'
p1869
(lp1870
(S'C_SVC'
p1871
S'C_SVC'
p1872
tp1873
a(S'Nu_SVC'
p1874
S'NU_SVC'
p1875
tp1876
a(S'OneClass'
p1877
S'ONE_CLASS'
p1878
tp1879
a(S'Epsilon_SVR'
p1880
S'EPSILON_SVR'
p1881
tp1882
a(S'Nu_SVR'
p1883
S'NU_SVR'
p1884
tp1885
assbsS'TImputerConstructor_defaults'
p1886
(i__main__
ClassDefinition
p1887
(dp1888
g4
I1
sg5
I0
sg6
g1886
sg7
S'TImputerConstructor'
p1889
sg9
I00
sg10
(lp1890
sg12
(lp1891
(S'TExample'
p1892
S'defaults'
p1893
g1893
S'default values to be imputed instead missing ones'
p1894
I0
I0
I00
Ntp1895
ag1344
asg26
(dp1896
sbsS'TConditionalProbabilityEstimatorConstructor'
p1897
(i__main__
ClassDefinition
p1898
(dp1899
g4
I1
sg5
I0
sg6
g1897
sg7
S'TOrange'
p1900
sg9
I01
sg10
(lp1901
sg12
(lp1902
sg26
(dp1903
sbsS'TPreprocessor_takeMissingClasses'
p1904
(i__main__
ClassDefinition
p1905
(dp1906
g4
I1
sg5
I0
sg6
g1904
sg7
S'TPreprocessor'
p1907
sg9
I00
sg10
(lp1908
sg12
(lp1909
sg26
(dp1910
sbsS'TRuleValidator_LRS'
p1911
(i__main__
ClassDefinition
p1912
(dp1913
g4
I1
sg5
I0
sg6
g1911
sg7
S'TRuleValidator'
p1914
sg9
I00
sg10
(lp1915
sg12
(lp1916
(S'float'
p1917
S'alpha'
p1918
g1918
g1167
I0
I0
I01
Ntp1919
a(S'float'
p1920
S'min_coverage'
p1921
g1921
g1167
I0
I0
I01
Ntp1922
a(S'int'
p1923
S'max_rule_complexity'
p1924
g1924
g1167
I0
I0
I01
Ntp1925
a(S'float'
p1926
S'min_quality'
p1927
g1927
g1167
I0
I0
I01
Ntp1928
asg26
(dp1929
sbsS'TLogRegFitter_Python'
p1930
(i__main__
ClassDefinition
p1931
(dp1932
g4
I1
sg5
I0
sg6
g1930
sg7
S'TLogRegFitter'
p1933
sg9
I00
sg10
(lp1934
sg12
(lp1935
sg26
(dp1936
sbsS'TContDistribution'
p1937
(i__main__
ClassDefinition
p1938
(dp1939
g4
I1
sg5
I0
sg6
g1937
sg7
S'TDistribution'
p1940
sg9
I00
sg10
(lp1941
sg12
(lp1942
(S'TFloatList'
p1943
S'variances'
p1944
g1944
S'variances'
p1945
I0
I0
I00
Ntp1946
a(S'float'
p1947
S'sum'
p1948
g1948
S'weighted sum of elements (i.e. N*average)'
p1949
I01
I0
I01
Ntp1950
a(S'float'
p1951
S'sum2'
p1952
g1952
S'weighted sum of squares of elements'
p1953
I01
I0
I01
Ntp1954
a(S'TVariable'
p1955
S'variable'
p1956
g1956
S'attribute descriptor (optional)'
p1957
I0
I0
I00
Ntp1958
a(S'float'
p1959
S'unknowns'
p1960
g1960
S'number of unknown values'
p1961
I0
I0
I01
Ntp1962
a(S'float'
p1963
S'abs'
p1964
g1964
S'sum of frequencies (not including unknown values!)'
p1965
I0
I0
I01
Ntp1966
a(S'float'
p1967
S'cases'
p1968
g1968
S"number of cases; as abs, but doesn't change at *= and normalize()"
p1969
I0
I0
I01
Ntp1970
a(S'bool'
p1971
S'normalized'
p1972
g1972
S'distribution is normalized'
p1973
I0
I0
I01
Ntp1974
a(S'bool'
p1975
S'supportsDiscrete'
p1976
g1976
S'distribution supports discrete interface'
p1977
I01
I0
I01
Ntp1978
a(S'bool'
p1979
S'supportsContinuous'
p1980
g1980
S'distribution supports continuous interface'
p1981
I01
I0
I01
Ntp1982
a(S'TRandomGenerator'
p1983
S'randomGenerator'
p1984
g1984
S'random generator; initialized when needed, if not given earlier'
p1985
I0
I0
I00
Ntp1986
asg26
(dp1987
sbsS'TTreeDescender_UnknownMergeAsSelector'
p1988
(i__main__
ClassDefinition
p1989
(dp1990
g4
I1
sg5
I0
sg6
g1988
sg7
S'TTreeDescender'
p1991
sg9
I0
sg10
(lp1992
sg12
(lp1993
sg26
(dp1994
sbsS'TContingencyAttrClass'
p1995
(i__main__
ClassDefinition
p1996
(dp1997
g4
I1
sg5
I0
sg6
g1995
sg7
S'TContingencyClass'
p1998
sg9
I00
sg10
(lp1999
sg12
(lp2000
g709
ag713
ag718
ag722
ag726
ag730
asg26
(dp2001
sbsS'TPythonValueSpecial'
p2002
(i__main__
ClassDefinition
p2003
(dp2004
g4
I1
sg5
I0
sg6
g2002
sg7
S'TOrange'
p2005
sg9
I00
sg10
(lp2006
sg12
(lp2007
(S'int'
p2008
S'valueType'
p2009
g2009
S'value type'
p2010
I0
I0
I01
Ntp2011
asg26
(dp2012
sbsS'TProbabilityEstimatorConstructor'
p2013
(i__main__
ClassDefinition
p2014
(dp2015
g4
I1
sg5
I0
sg6
g2013
sg7
S'TOrange'
p2016
sg9
I01
sg10
(lp2017
sg12
(lp2018
sg26
(dp2019
sbsS'TFloatVariable'
p2020
(i__main__
ClassDefinition
p2021
(dp2022
g4
I1
sg5
I0
sg6
g2020
sg7
S'TVariable'
p2023
sg9
I00
sg10
(lp2024
sg12
(lp2025
(S'float'
p2026
S'startValue'
p2027
g2027
S'lowest value'
p2028
I0
I0
I01
Ntp2029
a(S'float'
p2030
S'endValue'
p2031
g2031
S'highest value'
p2032
I0
I0
I01
Ntp2033
a(S'float'
p2034
S'stepValue'
p2035
g2035
S'step'
p2036
I0
I0
I01
Ntp2037
a(S'int'
p2038
S'numberOfDecimals'
p2039
g2039
S'number of digits after decimal point'
p2040
I0
I0
I01
Ntp2041
a(S'bool'
p2042
S'scientificFormat'
p2043
g2043
S'use scientific format in output'
p2044
I0
I0
I01
Ntp2045
a(S'int'
p2046
S'adjustDecimals'
p2047
g2047
S"adjust number of decimals according to the values converted (0 - no, 1 - yes, 2 - yes, but haven't seen any yet)"
p2048
I0
I0
I01
Ntp2049
ag583
ag588
ag592
ag596
ag600
ag604
ag608
ag612
asg26
(dp2050
sbsS'TImputer_random'
p2051
(i__main__
ClassDefinition
p2052
(dp2053
g4
I1
sg5
I0
sg6
g2051
sg7
S'TImputer'
p2054
sg9
I00
sg10
(lp2055
sg12
(lp2056
(S'bool'
p2057
S'imputeClass'
p2058
g2058
S'Tells whether to impute the class values, too (default: true)'
p2059
I0
I0
I01
Ntp2060
a(S'bool'
p2061
S'deterministic'
p2062
g2062
S"tells whether to initialize random by example's CRC (default: false)"
p2063
I0
I0
I01
Ntp2064
a(S'TDistributionList'
p2065
S'distributions'
p2066
g2066
S'probability functions'
p2067
I0
I0
I00
Ntp2068
asg26
(dp2069
sbsS'TFilter_hasMeta'
p2070
(i__main__
ClassDefinition
p2071
(dp2072
g4
I1
sg5
I0
sg6
g2070
sg7
S'TFilter'
p2073
sg9
I00
sg10
(lp2074
sg12
(lp2075
(S'int'
p2076
S'id'
p2077
g2077
S'meta attribute id'
p2078
I0
I0
I01
Ntp2079
ag222
ag226
asg26
(dp2080
sbsS'TProbabilityEstimatorConstructor_kernel'
p2081
(i__main__
ClassDefinition
p2082
(dp2083
g4
I1
sg5
I0
sg6
g2081
sg7
S'TProbabilityEstimatorConstructor'
p2084
sg9
I00
sg10
(lp2085
sg12
(lp2086
(S'float'
p2087
S'minImpact'
p2088
g2088
S'Minimal impact the point must have to be counted'
p2089
I0
I0
I01
Ntp2090
a(S'float'
p2091
S'smoothing'
p2092
g2092
S'Smoothing factor'
p2093
I0
I0
I01
Ntp2094
a(S'int'
p2095
S'nPoints'
p2096
g2096
S'Number of points for curve (negative means the given number of points is inserted in each interval)'
p2097
I0
I0
I01
Ntp2098
asg26
(dp2099
sbsS'TSubsetsGenerator_constant'
p2100
(i__main__
ClassDefinition
p2101
(dp2102
g4
I1
sg5
I0
sg6
g2100
sg7
S'TSubsetsGenerator'
p2103
sg9
I00
sg10
(lp2104
sg12
(lp2105
(S'TVarList'
p2106
S'constant'
p2107
g2107
S'a subset that is returned (once!)'
p2108
I0
I0
I00
Ntp2109
a(S'TVarList'
p2110
S'varList'
p2111
g2111
S'a set of attributes from which subsets are generated'
p2112
I0
I0
I00
Ntp2113
asg26
(dp2114
sbsS'TDefaultClassifier'
p2115
(i__main__
ClassDefinition
p2116
(dp2117
g4
I1
sg5
I0
sg6
g2115
sg7
S'TClassifier'
p2118
sg9
I00
sg10
(lp2119
sg12
(lp2120
(S'TValue'
p2121
S'defaultVal'
p2122
g2122
S'default prediction'
p2123
I0
I0
I01
Ntp2124
a(S'TDistribution'
p2125
S'defaultDistribution'
p2126
g2126
S'default distribution'
p2127
I0
I0
I00
Ntp2128
ag796
ag800
asg26
(dp2129
sbsS'TTreeSplitConstructor_Measure'
p2130
(i__main__
ClassDefinition
p2131
(dp2132
g4
I1
sg5
I0
sg6
g2130
sg7
S'TTreeSplitConstructor'
p2133
sg9
I01
sg10
(lp2134
sg12
(lp2135
(S'TMeasureAttribute'
p2136
S'measure'
p2137
g2137
S'attribute quality measure'
p2138
I0
I0
I00
Ntp2139
a(S'float'
p2140
S'worstAcceptable'
p2141
g2141
S'the worst acceptable quality of the attribute'
p2142
I0
I0
I01
Ntp2143
ag1551
asg26
(dp2144
sbsS'TTreeNode'
p2145
(i__main__
ClassDefinition
p2146
(dp2147
g4
I1
sg5
I0
sg6
g2145
sg7
S'TOrange'
p2148
sg9
I00
sg10
(lp2149
sg12
(lp2150
(S'TClassifier'
p2151
S'nodeClassifier'
p2152
g2152
S'classifies an example'
p2153
I0
I0
I00
Ntp2154
a(S'TDistribution'
p2155
S'distribution'
p2156
g2156
S'distribution of classes in the node'
p2157
I0
I0
I00
Ntp2158
a(S'TDomainContingency'
p2159
S'contingency'
p2160
g2160
S'domain contingency for examples in the node'
p2161
I0
I0
I00
Ntp2162
a(S'TExampleGenerator'
p2163
S'examples'
p2164
g2164
S'learning examples (if stored)'
p2165
I0
I0
I00
Ntp2166
a(S'int'
p2167
S'weightID'
p2168
g2168
S'weightID used to construct this node'
p2169
I0
I0
I01
Ntp2170
a(S'TClassifier'
p2171
S'branchSelector'
p2172
g2172
S'classifier that select a branch for an example'
p2173
I0
I0
I00
Ntp2174
a(S'TTreeNodeList'
p2175
S'branches'
p2176
g2176
S'classifiers presenting the branches'
p2177
I0
I0
I00
Ntp2178
a(S'TStringList'
p2179
S'branchDescriptions'
p2180
g2180
S'descriptions of branches'
p2181
I0
I0
I00
Ntp2182
a(S'TDiscDistribution'
p2183
S'branchSizes'
p2184
g2184
S'numbers of examples in branches'
p2185
I0
I0
I00
Ntp2186
asg26
(dp2187
sbsS'TTransformValue_IsDefined'
p2188
(i__main__
ClassDefinition
p2189
(dp2190
g4
I1
sg5
I0
sg6
g2188
sg7
S'TTransformValue'
p2191
sg9
I00
sg10
(lp2192
sg12
(lp2193
g279
asg26
(dp2194
sbsS'TFilter_hasClassValue'
p2195
(i__main__
ClassDefinition
p2196
(dp2197
g4
I1
sg5
I0
sg6
g2195
sg7
S'TFilter'
p2198
sg9
I00
sg10
(lp2199
sg12
(lp2200
g222
ag226
asg26
(dp2201
sbsS'TStopDistributionClustering_binary'
p2202
(i__main__
ClassDefinition
p2203
(dp2204
g4
I1
sg5
I0
sg6
g2202
sg7
S'TStopDistributionClustering'
p2205
sg9
I00
sg10
(lp2206
sg12
(lp2207
sg26
(dp2208
sbsS'TRuleFinder'
p2209
(i__main__
ClassDefinition
p2210
(dp2211
g4
I1
sg5
I0
sg6
g2209
sg7
S'TOrange'
p2212
sg9
I01
sg10
(lp2213
sg12
(lp2214
g1696
ag1699
asg26
(dp2215
sbsS'TProbabilityEstimatorConstructor_relative'
p2216
(i__main__
ClassDefinition
p2217
(dp2218
g4
I1
sg5
I0
sg6
g2216
sg7
S'TProbabilityEstimatorConstructor'
p2219
sg9
I00
sg10
(lp2220
sg12
(lp2221
sg26
(dp2222
sbsS'TMeasureAttribute_gini'
p2223
(i__main__
ClassDefinition
p2224
(dp2225
g4
I1
sg5
I0
sg6
g2223
sg7
S'TMeasureAttributeFromProbabilities'
p2226
sg9
I00
sg10
(lp2227
sg12
(lp2228
g399
ag403
ag408
ag413
ag417
ag421
ag425
asg26
(dp2229
sbsS'TClassifierByLookupTable2'
p2230
(i__main__
ClassDefinition
p2231
(dp2232
g4
I1
sg5
I0
sg6
g2230
sg7
S'TClassifierByLookupTable'
p2233
sg9
I00
sg10
(lp2234
sg12
(lp2235
(S'TVariable'
p2236
S'variable1'
p2237
g2237
S'the first attribute used for classification'
p2238
I01
I0
I00
Ntp2239
a(S'TVariable'
p2240
S'variable2'
p2241
g2241
S'the second attribute used for classification'
p2242
I01
I0
I00
Ntp2243
a(S'int'
p2244
S'noOfValues1'
p2245
g2245
S'number of values of the first attribute'
p2246
I01
I0
I01
Ntp2247
a(S'int'
p2248
S'noOfValues2'
p2249
g2249
S'number of values of the second attribute'
p2250
I01
I0
I01
Ntp2251
a(S'TEFMDataDescription'
p2252
S'dataDescription'
p2253
g2253
S'data description'
p2254
I0
I0
I00
Ntp2255
ag1667
ag1671
ag796
ag800
asg26
(dp2256
sbsS'TRemoveRedundantOneValue'
p2257
(i__main__
ClassDefinition
p2258
(dp2259
g4
I1
sg5
I0
sg6
g2257
sg7
S'TRemoveRedundant'
p2260
sg9
I00
sg10
(lp2261
sg12
(lp2262
(S'bool'
p2263
S'onData'
p2264
g2264
S'observe the actual number of value on the data (not on attribute definitions)'
p2265
I0
I0
I01
Ntp2266
ag488
asg26
(dp2267
sbsS'TDistributionAssessor_Relief'
p2268
(i__main__
ClassDefinition
p2269
(dp2270
g4
I1
sg5
I0
sg6
g2268
sg7
S'TDistributionAssessor'
p2271
sg9
I00
sg10
(lp2272
sg12
(lp2273
sg26
(dp2274
sbsS'TRuleBeamCandidateSelector'
p2275
(i__main__
ClassDefinition
p2276
(dp2277
g4
I1
sg5
I0
sg6
g2275
sg7
S'TOrange'
p2278
sg9
I01
sg10
(lp2279
sg12
(lp2280
sg26
(dp2281
sbsS'TSubsetsGenerator_minMaxSize'
p2282
(i__main__
ClassDefinition
p2283
(dp2284
g4
I1
sg5
I0
sg6
g2282
sg7
S'TSubsetsGenerator'
p2285
sg9
I00
sg10
(lp2286
sg12
(lp2287
(S'int'
p2288
S'min'
p2289
g2289
S'minimal subset size'
p2290
I0
I0
I01
Ntp2291
a(S'int'
p2292
S'max'
p2293
g2293
S'maximal subset size'
p2294
I0
I0
I01
Ntp2295
ag2113
asg26
(dp2296
sbsS'TContingencyClass'
p2297
(i__main__
ClassDefinition
p2298
(dp2299
g4
I1
sg5
I0
sg6
g2297
sg7
S'TContingency'
p2300
sg9
I01
sg10
(lp2301
sg12
(lp2302
g709
ag713
ag718
ag722
ag726
ag730
asg26
(dp2303
sbsS'TAssociationClassifier'
p2304
(i__main__
ClassDefinition
p2305
(dp2306
g4
I1
sg5
I0
sg6
g2304
sg7
S'TClassifierFD'
p2307
sg9
I00
sg10
(lp2308
sg12
(lp2309
(S'TAssociationRules'
p2310
S'rules'
p2311
g2311
S'association rules'
p2312
I0
I0
I00
Ntp2313
a(S'int'
p2314
S'voteWeight'
p2315
g2315
S'vote weight (s=support, c=confidence, p=product)'
p2316
I0
I0
I01
Ntp2317
ag792
ag796
ag800
asg26
(dp2318
sbsS'TDomainDistributions'
p2319
(i__main__
ClassDefinition
p2320
(dp2321
g4
I1
sg5
I0
sg6
g2319
sg7
S'TOrange'
p2322
sg9
I00
sg10
(lp2323
sg12
(lp2324
sg26
(dp2325
sbsS'TSVMLearnerSparse'
p2326
(i__main__
ClassDefinition
p2327
(dp2328
g4
I1
sg5
I0
sg6
g2326
sg7
S'TSVMLearner'
p2329
sg9
I00
sg10
(lp2330
sg12
(lp2331
(S'bool'
p2332
S'useNonMeta'
p2333
g2333
S'include non meta attributes in the learning process'
p2334
I0
I0
I01
Ntp2335
ag1798
ag1803
ag1807
ag1811
ag1815
ag1819
ag1823
ag1827
ag1831
ag1834
ag1838
ag1842
ag1846
ag1850
ag44
asg26
(dp2336
sbsS'TSubsetsGenerator_constant_iterator'
p2337
(i__main__
ClassDefinition
p2338
(dp2339
g4
I1
sg5
I0
sg6
g2337
sg7
S'TSubsetsGenerator_iterator'
p2340
sg9
I00
sg10
(lp2341
sg12
(lp2342
(S'TVarList'
p2343
S'constant'
p2344
g2344
S'a subset that is returned (once!)'
p2345
I0
I0
I00
Ntp2346
a(S'bool'
p2347
S'moreToCome'
p2348
g2348
g1167
I0
I0
I01
Ntp2349
ag158
asg26
(dp2350
sbsS'TExampleDistConstructor'
p2351
(i__main__
ClassDefinition
p2352
(dp2353
g4
I1
sg5
I0
sg6
g2351
sg7
S'TOrange'
p2354
sg9
I01
sg10
(lp2355
sg12
(lp2356
sg26
(dp2357
sbsS'TIMByIMByRows'
p2358
(i__main__
ClassDefinition
p2359
(dp2360
g4
I1
sg5
I0
sg6
g2358
sg7
S'TIMConstructor'
p2361
sg9
I00
sg10
(lp2362
sg12
(lp2363
(S'bool'
p2364
S'recordRowExamples'
p2365
g2365
S'enables creation of rowExample list'
p2366
I0
I0
I01
Ntp2367
asg26
(dp2368
sbsS'TDiscrete2Continuous'
p2369
(i__main__
ClassDefinition
p2370
(dp2371
g4
I1
sg5
I0
sg6
g2369
sg7
S'TTransformValue'
p2372
sg9
I00
sg10
(lp2373
sg12
(lp2374
(S'int'
p2375
S'value'
p2376
g2376
S'target value'
p2377
I0
I0
I01
Ntp2378
a(S'bool'
p2379
S'invert'
p2380
g2380
S'give 1.0 to values not equal to the target'
p2381
I0
I0
I01
Ntp2382
a(S'bool'
p2383
S'zeroBased'
p2384
g2384
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p2385
I0
I0
I01
Ntp2386
ag279
asg26
(dp2387
sbsS'TColumnAssessor_m'
p2388
(i__main__
ClassDefinition
p2389
(dp2390
g4
I1
sg5
I0
sg6
g2388
sg7
S'TColumnAssessor'
p2391
sg9
I00
sg10
(lp2392
sg12
(lp2393
(S'float'
p2394
g885
g885
S'm for m-estimate'
p2395
I0
I0
I01
Ntp2396
asg26
(dp2397
sbsS'TImputer_defaults'
p2398
(i__main__
ClassDefinition
p2399
(dp2400
g4
I1
sg5
I0
sg6
g2398
sg7
S'TImputer'
p2401
sg9
I00
sg10
(lp2402
sg12
(lp2403
(S'TExample'
p2404
S'defaults'
p2405
g2405
S'values that are to be inserted instead of missing ones'
p2406
I0
I0
I00
Ntp2407
asg26
(dp2408
sbsS'TContingency'
p2409
(i__main__
ClassDefinition
p2410
(dp2411
g4
I1
sg5
I0
sg6
g2409
sg7
S'TOrange'
p2412
sg9
I00
sg10
(lp2413
sg12
(lp2414
g709
ag713
ag718
ag722
ag726
ag730
asg26
(dp2415
sbsS'TStringValue'
p2416
(i__main__
ClassDefinition
p2417
(dp2418
g4
I1
sg5
I0
sg6
g2416
sg7
S'TSomeValue'
p2419
sg9
I00
sg10
(lp2420
sg12
(lp2421
sg26
(dp2422
sbsS'TClassifierGenerator'
p2423
(i__main__
ClassDefinition
p2424
(dp2425
g4
I1
sg5
I0
sg6
g2423
sg7
S'TExampleGenerator'
p2426
sg9
I00
sg10
(lp2427
sg12
(lp2428
(S'TClassifier'
p2429
S'classify'
p2430
g2430
S'classifier'
p2431
I0
I0
I00
Ntp2432
ag92
ag96
asg26
(dp2433
sbsS'TRuleDataStoppingCriteria_Python'
p2434
(i__main__
ClassDefinition
p2435
(dp2436
g4
I1
sg5
I0
sg6
g2434
sg7
S'TRuleDataStoppingCriteria'
p2437
sg9
I00
sg10
(lp2438
sg12
(lp2439
sg26
(dp2440
sbsS'TTreeDescender_UnknownToCommonSelector'
p2441
(i__main__
ClassDefinition
p2442
(dp2443
g4
I1
sg5
I0
sg6
g2441
sg7
g1991
sg9
I0
sg10
(lp2444
sg12
(lp2445
sg26
(dp2446
sbsS'TPreprocessIM'
p2447
(i__main__
ClassDefinition
p2448
(dp2449
g4
I1
sg5
I0
sg6
g2447
sg7
S'TOrange'
p2450
sg9
I01
sg10
(lp2451
sg12
(lp2452
sg26
(dp2453
sbsS'TRuleEvaluator_Laplace'
p2454
(i__main__
ClassDefinition
p2455
(dp2456
g4
I1
sg5
I0
sg6
g2454
sg7
S'TRuleEvaluator'
p2457
sg9
I00
sg10
(lp2458
sg12
(lp2459
sg26
(dp2460
sbsS'TColumnAssessor_N'
p2461
(i__main__
ClassDefinition
p2462
(dp2463
g4
I1
sg5
I0
sg6
g2461
sg7
S'TColumnAssessor'
p2464
sg9
I00
sg10
(lp2465
sg12
(lp2466
sg26
(dp2467
sbsS'TPreprocessor_dropMissing'
p2468
(i__main__
ClassDefinition
p2469
(dp2470
g4
I1
sg5
I0
sg6
g2468
sg7
S'TPreprocessor'
p2471
sg9
I00
sg10
(lp2472
sg12
(lp2473
sg26
(dp2474
sbsS'TExample'
p2475
(i__main__
ClassDefinition
p2476
(dp2477
g4
I1
sg5
I0
sg6
g2475
sg7
S'TOrange'
p2478
sg9
I00
sg10
(lp2479
sg12
(lp2480
(S'TDomain'
p2481
S'domain'
p2482
g2482
S"Example's domain"
p2483
I01
I0
I00
Ntp2484
a(S'int'
p2485
S'id'
p2486
g2486
g1167
I0
I0
I01
Ntp2487
asg26
(dp2488
sbsS'TOrdinal2Continuous'
p2489
(i__main__
ClassDefinition
p2490
(dp2491
g4
I1
sg5
I0
sg6
g2489
sg7
S'TTransformValue'
p2492
sg9
I00
sg10
(lp2493
sg12
(lp2494
(S'float'
p2495
S'factor'
p2496
g2496
S'number of values'
p2497
I0
I0
I01
Ntp2498
ag279
asg26
(dp2499
sbsS'TExampleDistBySorting'
p2500
(i__main__
ClassDefinition
p2501
(dp2502
g4
I1
sg5
I0
sg6
g2500
sg7
S'TExampleDistConstructor'
p2503
sg9
I00
sg10
(lp2504
sg12
(lp2505
sg26
(dp2506
sbsS'TValueFilter_discrete'
p2507
(i__main__
ClassDefinition
p2508
(dp2509
g4
I1
sg5
I0
sg6
g2507
sg7
S'TValueFilter'
p2510
sg9
I00
sg10
(lp2511
sg12
(lp2512
(S'TValueList'
p2513
S'values'
p2514
g2514
S'accepted values'
p2515
I0
I0
I00
Ntp2516
a(S'bool'
p2517
S'negate'
p2518
g2518
S'negate'
p2519
I0
I0
I01
Ntp2520
a(S'int'
p2521
S'position'
p2522
g2522
S"attribute's position in domain"
p2523
I0
I0
I01
Ntp2524
a(S'int'
p2525
S'acceptSpecial'
p2526
g2526
S'tells whether a special value (DK, DC...) is accepted (1), rejected (0) or ignored (-1)'
p2527
I0
I0
I01
Ntp2528
asg26
(dp2529
sbsS'TComputeDomainContingency'
p2530
(i__main__
ClassDefinition
p2531
(dp2532
g4
I1
sg5
I0
sg6
g2530
sg7
S'TOrange'
p2533
sg9
I00
sg10
(lp2534
sg12
(lp2535
g25
asg26
(dp2536
sbsS'TAssociationRulesInducer'
p2537
(i__main__
ClassDefinition
p2538
(dp2539
g4
I1
sg5
I0
sg6
g2537
sg7
S'TOrange'
p2540
sg9
I00
sg10
(lp2541
sg12
(lp2542
(S'int'
p2543
S'maxItemSets'
p2544
g2544
S'maximal number of itemsets (increase if you want)'
p2545
I0
I0
I01
Ntp2546
a(S'float'
p2547
S'confidence'
p2548
g2548
S'required confidence'
p2549
I0
I0
I01
Ntp2550
a(S'float'
p2551
S'support'
p2552
g2552
S'required support'
p2553
I0
I0
I01
Ntp2554
a(S'bool'
p2555
S'classificationRules'
p2556
g2556
S'if true, rules will have the class and only the class attribute on the right-hand side'
p2557
I0
I0
I01
Ntp2558
a(S'bool'
p2559
S'storeExamples'
p2560
g2560
S'if true, each rule is going to have tables with references to examples which match its left side or both sides'
p2561
I0
I0
I01
Ntp2562
asg26
(dp2563
sbsS'TPreprocessor_addMissingClasses'
p2564
(i__main__
ClassDefinition
p2565
(dp2566
g4
I1
sg5
I0
sg6
g2564
sg7
S'TPreprocessor'
p2567
sg9
I00
sg10
(lp2568
sg12
(lp2569
(S'float'
p2570
S'proportion'
p2571
g2571
S'proportion of removed class values'
p2572
I0
I0
I01
Ntp2573
a(S'int'
p2574
S'specialType'
p2575
g2575
S'special value type (1=DC, 2=DK)'
p2576
I0
I0
I01
Ntp2577
a(S'TRandomGenerator'
p2578
S'randomGenerator'
p2579
g2579
S'random number generator'
p2580
I0
I0
I00
Ntp2581
asg26
(dp2582
sbsS'TBasketExampleGenerator'
p2583
(i__main__
ClassDefinition
p2584
(dp2585
g4
I1
sg5
I0
sg6
g2583
sg7
S'TFileExampleGenerator'
p2586
sg9
I00
sg10
(lp2587
sg12
(lp2588
g675
ag679
ag683
ag92
ag96
asg26
(dp2589
sbsS'TRuleEvaluator_Entropy'
p2590
(i__main__
ClassDefinition
p2591
(dp2592
g4
I1
sg5
I0
sg6
g2590
sg7
S'TRuleEvaluator'
p2593
sg9
I00
sg10
(lp2594
sg12
(lp2595
sg26
(dp2596
sbsS'TExamplesDistance_DTW'
p2597
(i__main__
ClassDefinition
p2598
(dp2599
g4
I1
sg5
I0
sg6
g2597
sg7
S'TExamplesDistance_Normalized'
p2600
sg9
I00
sg10
(lp2601
sg12
(lp2602
(S'int'
p2603
S'dtwDistance'
p2604
g2604
S' distance measure between individual attributes (default: square of difference)'
p2605
I0
I0
I01
S'ExamplesDistance_DTW_DistanceType'
p2606
tp2607
ag107
ag111
ag115
ag119
ag123
ag127
ag131
asg26
(dp2608
S'DistanceType'
p2609
(lp2610
(S'Euclidean'
p2611
I0
tp2612
a(S'Derivative'
p2613
I1
tp2614
assbsS'TTreeExampleSplitter_UnknownsToRandom'
p2615
(i__main__
ClassDefinition
p2616
(dp2617
g4
I1
sg5
I0
sg6
g2615
sg7
S'TTreeExampleSplitter'
p2618
sg9
I00
sg10
(lp2619
sg12
(lp2620
sg26
(dp2621
sbsS'TTreeSplitConstructor_Combined'
p2622
(i__main__
ClassDefinition
p2623
(dp2624
g4
I1
sg5
I0
sg6
g2622
sg7
S'TTreeSplitConstructor'
p2625
sg9
I00
sg10
(lp2626
sg12
(lp2627
(S'TTreeSplitConstructor'
p2628
S'discreteSplitConstructor'
p2629
g2629
S'split constructor for discrete attributes'
p2630
I0
I0
I00
Ntp2631
a(S'TTreeSplitConstructor'
p2632
S'continuousSplitConstructor'
p2633
g2633
S'split constructor for continuous attributes'
p2634
I0
I0
I00
Ntp2635
ag1551
asg26
(dp2636
sbsS'TExamplesDistanceConstructor_DTW'
p2637
(i__main__
ClassDefinition
p2638
(dp2639
g4
I1
sg5
I0
sg6
g2637
sg7
S'TExamplesDistanceConstructor_Normalized'
p2640
sg9
I00
sg10
(lp2641
sg12
(lp2642
(S'int'
p2643
S'dtwDistance'
p2644
g2644
S'distance measure between individual attributes (default: square of difference)'
p2645
I0
I0
I01
Ntp2646
ag1037
ag1041
ag507
asg26
(dp2647
sbsS'TStopIMClusteringByAssessor_n'
p2648
(i__main__
ClassDefinition
p2649
(dp2650
g4
I1
sg5
I0
sg6
g2648
sg7
S'TStopIMClusteringByAssessor'
p2651
sg9
I00
sg10
(lp2652
sg12
(lp2653
(S'int'
p2654
S'n'
p2655
g2655
S'number of clusters'
p2656
I0
I0
I01
Ntp2657
asg26
(dp2658
sbsS'TRandomGenerator'
p2659
(i__main__
ClassDefinition
p2660
(dp2661
g4
I1
sg5
I0
sg6
g2659
sg7
S'TOrange'
p2662
sg9
I00
sg10
(lp2663
sg12
(lp2664
(S'int'
p2665
S'initseed'
p2666
g2666
S'initial random seed'
p2667
I0
I0
I01
Ntp2668
a(S'int'
p2669
S'uses'
p2670
g2670
S'#times a number was returned'
p2671
I0
I0
I01
Ntp2672
asg26
(dp2673
sbsS'TPreprocessor_imputeByLearner'
p2674
(i__main__
ClassDefinition
p2675
(dp2676
g4
I1
sg5
I0
sg6
g2674
sg7
S'TPreprocessor'
p2677
sg9
I00
sg10
(lp2678
sg12
(lp2679
(S'TLearner'
p2680
S'learner'
p2681
g2681
S'learner used for inducing a model for imputation'
p2682
I0
I0
I00
Ntp2683
asg26
(dp2684
sbsS'TLogRegLearner'
p2685
(i__main__
ClassDefinition
p2686
(dp2687
g4
I1
sg5
I0
sg6
g2685
sg7
S'TLearner'
p2688
sg9
I00
sg10
(lp2689
sg12
(lp2690
(S'TLogRegFitter'
p2691
S'fitter'
p2692
g2692
S'fits beta coefficients and calculates beta errors.'
p2693
I0
I0
I00
Ntp2694
a(S'TImputerConstructor'
p2695
S'imputerConstructor'
p2696
g2696
S'if present, it constructs an imputer for unknown values'
p2697
I0
I0
I00
Ntp2698
a(S'TDomainContinuizer'
p2699
S'domainContinuizer'
p2700
g2700
S'if present, it constructs continuous domain if needed; if absent, default is used'
p2701
I0
I0
I00
Ntp2702
ag44
asg26
(dp2703
sbsS'TMeasureAttribute_IM'
p2704
(i__main__
ClassDefinition
p2705
(dp2706
g4
I1
sg5
I0
sg6
g2704
sg7
S'TMeasureAttribute'
p2707
sg9
I00
sg10
(lp2708
sg12
(lp2709
(S'TIMConstructor'
p2710
S'IMconstructor'
p2711
g2711
S'incompatibility matrix constructor'
p2712
I0
I0
I00
Ntp2713
a(S'TColumnAssessor'
p2714
S'columnAssessor'
p2715
g2715
S'column quality assessor'
p2716
I0
I0
I00
Ntp2717
ag413
ag417
ag421
ag425
asg26
(dp2718
sbsS'TRuleStoppingCriteria_Python'
p2719
(i__main__
ClassDefinition
p2720
(dp2721
g4
I1
sg5
I0
sg6
g2719
sg7
S'TRuleStoppingCriteria'
p2722
sg9
I00
sg10
(lp2723
sg12
(lp2724
sg26
(dp2725
sbsS'TRemoveUnusedValues'
p2726
(i__main__
ClassDefinition
p2727
(dp2728
g4
I1
sg5
I0
sg6
g2726
sg7
S'TOrange'
p2729
sg9
I00
sg10
(lp2730
sg12
(lp2731
(S'bool'
p2732
S'removeOneValued'
p2733
g2733
S'if true (default is false), one valued attributes are also removed'
p2734
I0
I0
I01
Ntp2735
asg26
(dp2736
sbsS'TExamplesDistance_Normalized'
p2737
(i__main__
ClassDefinition
p2738
(dp2739
g4
I1
sg5
I0
sg6
g2737
sg7
S'TExamplesDistance'
p2740
sg9
I01
sg10
(lp2741
sg12
(lp2742
g107
ag111
ag115
ag119
ag123
ag127
ag131
asg26
(dp2743
sbsS'TDistributionAssessor_Measure'
p2744
(i__main__
ClassDefinition
p2745
(dp2746
g4
I1
sg5
I0
sg6
g2744
sg7
S'TDistributionAssessor'
p2747
sg9
I00
sg10
(lp2748
sg12
(lp2749
(S'TMeasureAttribute'
p2750
S'measure'
p2751
g2751
S'attribute quality measure'
p2752
I0
I0
I00
Ntp2753
asg26
(dp2754
sbsS'TRuleFinder_Python'
p2755
(i__main__
ClassDefinition
p2756
(dp2757
g4
I1
sg5
I0
sg6
g2755
sg7
S'TRuleFinder'
p2758
sg9
I00
sg10
(lp2759
sg12
(lp2760
g1696
ag1699
asg26
(dp2761
sbsS'TTabDelimExampleGenerator'
p2762
(i__main__
ClassDefinition
p2763
(dp2764
g4
I1
sg5
I0
sg6
g2762
sg7
S'TFileExampleGenerator'
p2765
sg9
I00
sg10
(lp2766
sg12
(lp2767
(S'TIntList'
p2768
S'attributeTypes'
p2769
g2769
S'types of attributes (-1 normal, 0 skip, <-1 = meta ID)'
p2770
I0
I0
I00
Ntp2771
a(S'int'
p2772
S'classPos'
p2773
g2773
S'position of the class attribute'
p2774
I0
I0
I01
Ntp2775
a(S'int'
p2776
S'basketPos'
p2777
g2777
S'position of the (virtual) basket attribute'
p2778
I0
I0
I01
Ntp2779
a(S'int'
p2780
S'headerLines'
p2781
g2781
S'number of header lines (3 for .tab, 1 for .txt)'
p2782
I0
I0
I01
Ntp2783
a(S'bool'
p2784
S'csv'
p2785
g2785
S"also allow ',' as a separator"
p2786
I0
I0
I01
Ntp2787
a(S'TBasketFeeder'
p2788
S'basketFeeder'
p2789
g2789
S'takes care of inserting the meta attributes from the basket if need be'
p2790
I0
I0
I00
Ntp2791
ag675
ag679
ag683
ag92
ag96
asg26
(dp2792
sbsS'TkNNLearner'
p2793
(i__main__
ClassDefinition
p2794
(dp2795
g4
I1
sg5
I0
sg6
g2793
sg7
S'TLearner'
p2796
sg9
I00
sg10
(lp2797
sg12
(lp2798
(S'float'
p2799
g881
g881
S'number of neighbours (0 for sqrt of #examples)'
p2800
I0
I0
I01
Ntp2801
a(S'bool'
p2802
S'rankWeight'
p2803
g2803
S'enable weighting by ranks'
p2804
I0
I0
I01
Ntp2805
a(S'TExamplesDistanceConstructor'
p2806
S'distanceConstructor'
p2807
g2807
S'metrics'
p2808
I0
I0
I00
Ntp2809
ag44
asg26
(dp2810
sbsS'TDistributionAssessor_mf'
p2811
(i__main__
ClassDefinition
p2812
(dp2813
g4
I1
sg5
I0
sg6
g2811
sg7
S'TDistributionAssessor'
p2814
sg9
I00
sg10
(lp2815
sg12
(lp2816
(S'float'
p2817
g885
g885
S'm for m-estimate'
p2818
I0
I0
I01
Ntp2819
asg26
(dp2820
sbsS'TEFMDataDescription'
p2821
(i__main__
ClassDefinition
p2822
(dp2823
g4
I1
sg5
I0
sg6
g2821
sg7
S'TOrange'
p2824
sg9
I00
sg10
(lp2825
S'domainDistributions'
p2826
asg12
(lp2827
(S'TDomain'
p2828
S'domain'
p2829
g2829
S'domain'
p2830
I01
I0
I00
Ntp2831
asg26
(dp2832
sbsS'TClassifierFD'
p2833
(i__main__
ClassDefinition
p2834
(dp2835
g4
I1
sg5
I0
sg6
g2833
sg7
S'TClassifier'
p2836
sg9
I00
sg10
(lp2837
sg12
(lp2838
g792
ag796
ag800
asg26
(dp2839
sbsS'TTreeDescender_UnknownToCommonBranch'
p2840
(i__main__
ClassDefinition
p2841
(dp2842
g4
I1
sg5
I0
sg6
g2840
sg7
g1991
sg9
I0
sg10
(lp2843
sg12
(lp2844
sg26
(dp2845
sbsS'TStopIMClusteringByAssessor_binary'
p2846
(i__main__
ClassDefinition
p2847
(dp2848
g4
I1
sg5
I0
sg6
g2846
sg7
S'TStopIMClusteringByAssessor'
p2849
sg9
I00
sg10
(lp2850
sg12
(lp2851
sg26
(dp2852
sbsS'TExamplesDistanceConstructor'
p2853
(i__main__
ClassDefinition
p2854
(dp2855
g4
I1
sg5
I0
sg6
g2853
sg7
S'TOrange'
p2856
sg9
I01
sg10
(lp2857
sg12
(lp2858
g507
asg26
(dp2859
sbsS'TRuleBeamCandidateSelector_Python'
p2860
(i__main__
ClassDefinition
p2861
(dp2862
g4
I1
sg5
I0
sg6
g2860
sg7
S'TRuleBeamCandidateSelector'
p2863
sg9
I00
sg10
(lp2864
sg12
(lp2865
sg26
(dp2866
sbsS'TEntropyDiscretization'
p2867
(i__main__
ClassDefinition
p2868
(dp2869
g4
I1
sg5
I0
sg6
g2867
sg7
S'TDiscretization'
p2870
sg9
I00
sg10
(lp2871
sg12
(lp2872
(S'int'
p2873
S'maxNumberOfIntervals'
p2874
g2874
S'maximal number of intervals; default = 0 (no limits)'
p2875
I0
I0
I01
Ntp2876
a(S'bool'
p2877
S'forceAttribute'
p2878
g2878
S'minimal number of intervals; default = 0 (no limits)'
p2879
I0
I0
I01
Ntp2880
asg26
(dp2881
sbsS'TIMBySorting'
p2882
(i__main__
ClassDefinition
p2883
(dp2884
g4
I1
sg5
I0
sg6
g2882
sg7
S'TIMConstructor'
p2885
sg9
I00
sg10
(lp2886
sg12
(lp2887
g2367
asg26
(dp2888
sbsS'TImputerConstructor_asValue'
p2889
(i__main__
ClassDefinition
p2890
(dp2891
g4
I1
sg5
I0
sg6
g2889
sg7
S'TImputerConstructor'
p2892
sg9
I00
sg10
(lp2893
sg12
(lp2894
g1344
asg26
(dp2895
sbsS'TExampleDistVector'
p2896
(i__main__
ClassDefinition
p2897
(dp2898
g4
I1
sg5
I0
sg6
g2896
sg7
S'TOrange'
p2899
sg9
I00
sg10
(lp2900
sg12
(lp2901
sg26
(dp2902
sbsS'TConditionalProbabilityEstimator_ByRows'
p2903
(i__main__
ClassDefinition
p2904
(dp2905
g4
I1
sg5
I0
sg6
g2903
sg7
S'TConditionalProbabilityEstimator'
p2906
sg9
I00
sg10
(lp2907
sg12
(lp2908
(S'TProbabilityEstimatorList'
p2909
S'estimatorList'
p2910
g2910
S'A list of probability estimators'
p2911
I0
I0
I00
Ntp2912
ag59
ag63
asg26
(dp2913
sbsS'TMeasureAttribute_info'
p2914
(i__main__
ClassDefinition
p2915
(dp2916
g4
I1
sg5
I0
sg6
g2914
sg7
S'TMeasureAttributeFromProbabilities'
p2917
sg9
I00
sg10
(lp2918
sg12
(lp2919
g399
ag403
ag408
ag413
ag417
ag421
ag425
asg26
(dp2920
sbsS'TImputerConstructor_model'
p2921
(i__main__
ClassDefinition
p2922
(dp2923
g4
I1
sg5
I0
sg6
g2921
sg7
S'TImputerConstructor'
p2924
sg9
I00
sg10
(lp2925
sg12
(lp2926
(S'TLearner'
p2927
S'learnerDiscrete'
p2928
g2928
S'learner for discrete attributes'
p2929
I0
I0
I00
Ntp2930
a(S'TLearner'
p2931
S'learnerContinuous'
p2932
g2932
S'learner for continuous attributes'
p2933
I0
I0
I00
Ntp2934
a(S'bool'
p2935
S'useClass'
p2936
g2936
S'tells whether to use class value in imputation (default: false)'
p2937
I0
I0
I01
Ntp2938
ag1344
asg26
(dp2939
sbsS'TFindNearestConstructor_BruteForce'
p2940
(i__main__
ClassDefinition
p2941
(dp2942
g4
I1
sg5
I0
sg6
g2940
sg7
S'TFindNearestConstructor'
p2943
sg9
I00
sg10
(lp2944
sg12
(lp2945
g922
ag926
asg26
(dp2946
sbsS'TImputerConstructor'
p2947
(i__main__
ClassDefinition
p2948
(dp2949
g4
I1
sg5
I0
sg6
g2947
sg7
S'TOrange'
p2950
sg9
I01
sg10
(lp2951
sg12
(lp2952
g1344
asg26
(dp2953
sbsS'TDiscretizer'
p2954
(i__main__
ClassDefinition
p2955
(dp2956
g4
I1
sg5
I0
sg6
g2954
sg7
S'TTransformValue'
p2957
sg9
I01
sg10
(lp2958
sg12
(lp2959
g279
asg26
(dp2960
sbsS'TIMByRowsPreprocessor'
p2961
(i__main__
ClassDefinition
p2962
(dp2963
g4
I1
sg5
I0
sg6
g2961
sg7
S'TOrange'
p2964
sg9
I01
sg10
(lp2965
sg12
(lp2966
sg26
(dp2967
sbsS'TTreeStopCriteria_common'
p2968
(i__main__
ClassDefinition
p2969
(dp2970
g4
I1
sg5
I0
sg6
g2968
sg7
S'TTreeStopCriteria'
p2971
sg9
I00
sg10
(lp2972
sg12
(lp2973
(S'float'
p2974
S'maxMajority'
p2975
g2975
S'a maximal proportion of majority class for division to continue'
p2976
I0
I0
I01
Ntp2977
a(S'float'
p2978
S'minExamples'
p2979
g2979
S'a minimal number of examples for division to continue'
p2980
I0
I0
I01
Ntp2981
asg26
(dp2982
sbsS'TTreeStopCriteria_Python'
p2983
(i__main__
ClassDefinition
p2984
(dp2985
g4
I1
sg5
I0
sg6
g2983
sg7
S'TTreeStopCriteria'
p2986
sg9
I00
sg10
(lp2987
sg12
(lp2988
sg26
(dp2989
sbsS'TIGByIM'
p2990
(i__main__
ClassDefinition
p2991
(dp2992
g4
I1
sg5
I0
sg6
g2990
sg7
S'TIGConstructor'
p2993
sg9
I00
sg10
(lp2994
sg12
(lp2995
(S'TIMConstructor'
p2996
S'IMconstructor'
p2997
g2997
S'IM constructor'
p2998
I0
I0
I00
Ntp2999
asg26
(dp3000
sbsS'TRuleEvaluator_LRS'
p3001
(i__main__
ClassDefinition
p3002
(dp3003
g4
I1
sg5
I0
sg6
g3001
sg7
S'TRuleEvaluator'
p3004
sg9
I00
sg10
(lp3005
sg12
(lp3006
(S'TRuleList'
p3007
S'rules'
p3008
g3008
g1167
I0
I0
I00
Ntp3009
a(S'bool'
p3010
S'storeRules'
p3011
g3011
g1167
I0
I0
I01
Ntp3012
asg26
(dp3013
sbsS'TExampleCluster'
p3014
(i__main__
ClassDefinition
p3015
(dp3016
g4
I1
sg5
I0
sg6
g3014
sg7
S'TOrange'
p3017
sg9
I00
sg10
(lp3018
sg12
(lp3019
(S'TExampleCluster'
p3020
S'left'
p3021
g3021
S"'left' cluster"
p3022
I0
I0
I00
Ntp3023
a(S'TExampleCluster'
p3024
S'right'
p3025
g3025
S"'right' cluster"
p3026
I0
I0
I00
Ntp3027
a(S'float'
p3028
S'distance'
p3029
g3029
S'distance between the two clusters (not defined for leaves)'
p3030
I0
I0
I01
Ntp3031
a(S'TExample'
p3032
S'centroid'
p3033
g3033
S"cluster's centroid (always defined for leaves)"
p3034
I0
I0
I00
Ntp3035
asg26
(dp3036
sbsS'TClassifierByLookupTableN'
p3037
(i__main__
ClassDefinition
p3038
(dp3039
g4
I1
sg5
I0
sg6
g3037
sg7
S'TClassifierByLookupTable'
p3040
sg9
I00
sg10
(lp3041
sg12
(lp3042
(S'TVarList'
p3043
S'variables'
p3044
g3044
S'attributes'
p3045
I01
I0
I00
Ntp3046
a(S'TIntList'
p3047
S'noOfValues'
p3048
g3048
S'number of values for each attribute'
p3049
I01
I0
I00
Ntp3050
a(S'TEFMDataDescription'
p3051
S'dataDescription'
p3052
g3052
S'data description'
p3053
I0
I0
I00
Ntp3054
ag1667
ag1671
ag796
ag800
asg26
(dp3055
sbsS'TP2NN'
p3056
(i__main__
ClassDefinition
p3057
(dp3058
g4
I1
sg5
I0
sg6
g3056
sg7
S'TPNN'
p3059
sg9
I00
sg10
(lp3060
sg12
(lp3061
(S'int'
p3062
S'dimensions'
p3063
g3063
S'the number of dimensions'
p3064
I01
I0
I01
Ntp3065
a(S'TFloatList'
p3066
S'offsets'
p3067
g3067
S'offsets to subtract from the attribute values'
p3068
I0
I0
I00
Ntp3069
a(S'TFloatList'
p3070
S'normalizers'
p3071
g3071
S'number to divide the values by'
p3072
I0
I0
I00
Ntp3073
a(S'TFloatList'
p3074
S'averages'
p3075
g3075
S'numbers to use instead of the missing'
p3076
I0
I0
I00
Ntp3077
a(S'bool'
p3078
S'normalizeExamples'
p3079
g3079
S'if true, attribute values are divided to sum up to 1'
p3080
I0
I0
I01
Ntp3081
a(S'int'
p3082
S'nExamples'
p3083
g3083
S'the number of examples'
p3084
I01
I0
I01
Ntp3085
a(S'int'
p3086
S'law'
p3087
g3087
S'law'
p3088
I0
I0
I01
Ntp3089
ag792
ag796
ag800
asg26
(dp3090
sbsS'TImputerConstruct_Python'
p3091
(i__main__
ClassDefinition
p3092
(dp3093
g4
I1
sg5
I0
sg6
g3091
sg7
S'TImputerConstructor'
p3094
sg9
I00
sg10
(lp3095
sg12
(lp3096
g1344
asg26
(dp3097
sbsS'TSubsetsGenerator_withRestrictions'
p3098
(i__main__
ClassDefinition
p3099
(dp3100
g4
I1
sg5
I0
sg6
g3098
sg7
S'TSubsetsGenerator'
p3101
sg9
I00
sg10
(lp3102
sg12
(lp3103
(S'TSubsetsGenerator'
p3104
S'subGenerator'
p3105
g3105
S'subset generator'
p3106
I0
I0
I00
Ntp3107
a(S'TVarList'
p3108
S'required'
p3109
g3109
S'set of required attributes'
p3110
I0
I0
I00
Ntp3111
a(S'TVarList'
p3112
S'forbidden'
p3113
g3113
S'set of forbidden attributes'
p3114
I0
I0
I00
Ntp3115
a(S'TVarListList'
p3116
S'forbiddenSubSubsets'
p3117
g3117
S'set of forbidden subsets (attributes that must not occur together)'
p3118
I0
I0
I00
Ntp3119
ag2113
asg26
(dp3120
sbsS'TRuleBeamFilter_Python'
p3121
(i__main__
ClassDefinition
p3122
(dp3123
g4
I1
sg5
I0
sg6
g3121
sg7
S'TRuleBeamFilter'
p3124
sg9
I00
sg10
(lp3125
sg12
(lp3126
sg26
(dp3127
sbsS'TTreeExampleSplitter'
p3128
(i__main__
ClassDefinition
p3129
(dp3130
g4
I1
sg5
I0
sg6
g3128
sg7
S'TOrange'
p3131
sg9
I01
sg10
(lp3132
sg12
(lp3133
sg26
(dp3134
sbsS'TSVMClassifier'
p3135
(i__main__
ClassDefinition
p3136
(dp3137
g4
I1
sg5
I0
sg6
g3135
sg7
S'TClassifierFD'
p3138
sg9
I00
sg10
(lp3139
sg12
(lp3140
g837
ag841
ag845
ag849
ag853
ag857
ag861
ag865
ag792
ag796
ag800
asg26
(dp3141
sbsS'TTreeLearner'
p3142
(i__main__
ClassDefinition
p3143
(dp3144
g4
I1
sg5
I0
sg6
g3142
sg7
S'TLearner'
p3145
sg9
I00
sg10
(lp3146
sg12
(lp3147
(S'TTreeSplitConstructor'
p3148
S'split'
p3149
g3149
S'split criterion'
p3150
I0
I0
I00
Ntp3151
a(S'TTreeStopCriteria'
p3152
S'stop'
p3153
g3153
S'stop criterion'
p3154
I0
I0
I00
Ntp3155
a(S'TComputeDomainContingency'
p3156
S'contingencyComputer'
p3157
g3157
S'computes contingency matrix'
p3158
I0
I0
I00
Ntp3159
a(S'TLearner'
p3160
S'nodeLearner'
p3161
g3161
S'node learner'
p3162
I0
I0
I00
Ntp3163
a(S'TTreeExampleSplitter'
p3164
S'exampleSplitter'
p3165
g3165
S'splits examples to branches'
p3166
I0
I0
I00
Ntp3167
a(S'int'
p3168
S'maxDepth'
p3169
g3169
S'maximal tree depth (0 = root only, -1 = no limit)'
p3170
I0
I0
I01
Ntp3171
a(S'bool'
p3172
S'storeExamples'
p3173
g3173
S'if true (default: false), learning examples in nodes are stored'
p3174
I0
I0
I01
Ntp3175
a(S'bool'
p3176
S'storeDistributions'
p3177
g3177
S'if true (default), class distributions of learning examples in nodes are stored'
p3178
I0
I0
I01
Ntp3179
a(S'bool'
p3180
S'storeContingencies'
p3181
g3181
S'if true (default), contingency matrices for examples are stored'
p3182
I0
I0
I01
Ntp3183
a(S'bool'
p3184
S'storeNodeClassifier'
p3185
g3185
S'if true (default), the internal nodes have classifiers; needed for pruning'
p3186
I0
I0
I01
Ntp3187
a(S'TTreeDescender'
p3188
S'descender'
p3189
g3189
S'descends down the tree'
p3190
I0
I0
I00
Ntp3191
ag44
asg26
(dp3192
sbsS'TPreprocessor_shuffle'
p3193
(i__main__
ClassDefinition
p3194
(dp3195
g4
I1
sg5
I0
sg6
g3193
sg7
S'TPreprocessor'
p3196
sg9
I00
sg10
(lp3197
sg12
(lp3198
(S'TVarList'
p3199
S'attributes'
p3200
g3200
S'tells which attributes to shuffle'
p3201
I0
I0
I00
Ntp3202
a(S'TRandomGenerator'
p3203
S'randomGenerator'
p3204
g3204
S'random number generator'
p3205
I0
I0
I00
Ntp3206
asg26
(dp3207
sbsS'TLearner'
p3208
(i__main__
ClassDefinition
p3209
(dp3210
g4
I1
sg5
I0
sg6
g3208
sg7
S'TOrange'
p3211
sg9
I00
sg10
(lp3212
sg12
(lp3213
g44
asg26
(dp3214
sbsS'TRuleClassifier_logit'
p3215
(i__main__
ClassDefinition
p3216
(dp3217
g4
I1
sg5
I0
sg6
g3215
sg7
S'TRuleClassifier'
p3218
sg9
I00
sg10
(lp3219
sg12
(lp3220
(S'TDistribution'
p3221
S'prior'
p3222
g3222
S'prior distribution'
p3223
I0
I0
I00
Ntp3224
a(S'TDomain'
p3225
S'domain'
p3226
g3226
S'Domain'
p3227
I0
I0
I00
Ntp3228
a(S'TFloatList'
p3229
S'ruleBetas'
p3230
g3230
S'Rule betas'
p3231
I0
I0
I00
Ntp3232
a(S'float'
p3233
S'minStep'
p3234
g3234
S'minimal step value'
p3235
I0
I0
I01
Ntp3236
a(S'float'
p3237
S'minSignificance'
p3238
g3238
S'minimum requested significance for betas. '
p3239
I0
I0
I01
Ntp3240
a(S'float'
p3241
S'minBeta'
p3242
g3242
S'minimum beta by rule to be included in the model. '
p3243
I0
I0
I01
Ntp3244
a(S'TClassifier'
p3245
S'priorClassifier'
p3246
g3246
S'prior classifier used if provided'
p3247
I0
I0
I00
Ntp3248
a(S'TRuleList'
p3249
S'prefixRules'
p3250
g3250
S'rules that trigger before logit sum.'
p3251
I0
I0
I00
Ntp3252
ag1765
ag1768
ag1771
ag796
ag800
asg26
(dp3253
sbsS'TStopDistributionClustering'
p3254
(i__main__
ClassDefinition
p3255
(dp3256
g4
I1
sg5
I0
sg6
g3254
sg7
S'TOrange'
p3257
sg9
I01
sg10
(lp3258
sg12
(lp3259
sg26
(dp3260
sbsS'TPythonValue'
p3261
(i__main__
ClassDefinition
p3262
(dp3263
g4
I1
sg5
I0
sg6
g3261
sg7
S'TSomeValue'
p3264
sg9
I00
sg10
(lp3265
sg12
(lp3266
sg26
(dp3267
sbsS'TDistributionAssessor_Kramer'
p3268
(i__main__
ClassDefinition
p3269
(dp3270
g4
I1
sg5
I0
sg6
g3268
sg7
S'TDistributionAssessor'
p3271
sg9
I00
sg10
(lp3272
sg12
(lp3273
sg26
(dp3274
sbsS'TIM'
p3275
(i__main__
ClassDefinition
p3276
(dp3277
g4
I1
sg5
I0
sg6
g3275
sg7
S'TOrange'
p3278
sg9
I00
sg10
(lp3279
sg12
(lp3280
(S'int'
p3281
S'varType'
p3282
g3282
S' class variable type'
p3283
I0
I0
I01
S'Variable_Type'
p3284
tp3285
a(S'TExampleTable'
p3286
S'rowExamples'
p3287
g3287
S'examples with free attributes for each row'
p3288
I0
I0
I00
Ntp3289
asg26
(dp3290
sbsS'TSymMatrix'
p3291
(i__main__
ClassDefinition
p3292
(dp3293
g4
I1
sg5
I0
sg6
g3291
sg7
S'TOrange'
p3294
sg9
I00
sg10
(lp3295
sg12
(lp3296
(S'int'
p3297
S'dim'
p3298
g3298
S'matrix dimension'
p3299
I01
I0
I01
Ntp3300
a(S'int'
p3301
S'matrixType'
p3302
g3302
S' 0 lower, 1 upper, 2 symmetric, 3 lower_filled, 4 upper_filled'
p3303
I0
I0
I01
S'SymMatrix_Shape'
p3304
tp3305
asg26
(dp3306
S'Shape'
p3307
(lp3308
(S'Lower'
p3309
I0
tp3310
a(S'Upper'
p3311
I1
tp3312
a(S'Symmetric'
p3313
I2
tp3314
a(S'LowerFilled'
p3315
I3
tp3316
a(S'UpperFilled'
p3317
I4
tp3318
assbsS'TMeasureAttributeFromProbabilities'
p3319
(i__main__
ClassDefinition
p3320
(dp3321
g4
I1
sg5
I0
sg6
g3319
sg7
S'TMeasureAttribute'
p3322
sg9
I01
sg10
(lp3323
sg12
(lp3324
g399
ag403
ag408
ag413
ag417
ag421
ag425
asg26
(dp3325
sbsS'TClassifierByExampleTable'
p3326
(i__main__
ClassDefinition
p3327
(dp3328
g4
I1
sg5
I0
sg6
g3326
sg7
S'TClassifierFD'
p3329
sg9
I00
sg10
(lp3330
sg12
(lp3331
(S'TExampleTable'
p3332
S'sortedExamples'
p3333
g3333
S'a table of examples'
p3334
I0
I0
I00
Ntp3335
a(S'bool'
p3336
S'containsUnknowns'
p3337
g3337
S'if true, the table contains unknown values'
p3338
I0
I0
I01
Ntp3339
a(S'TClassifier'
p3340
S'classifierForUnknown'
p3341
g3341
S'a classifier for unknown cases'
p3342
I0
I0
I00
Ntp3343
a(S'TEFMDataDescription'
p3344
S'dataDescription'
p3345
g3345
S'data description'
p3346
I0
I0
I00
Ntp3347
ag792
ag796
ag800
asg26
(dp3348
sbsS'TClassifierByLookupTable3'
p3349
(i__main__
ClassDefinition
p3350
(dp3351
g4
I1
sg5
I0
sg6
g3349
sg7
S'TClassifierByLookupTable'
p3352
sg9
I00
sg10
(lp3353
sg12
(lp3354
(S'TVariable'
p3355
S'variable1'
p3356
g3356
S'the first attribute used for classification'
p3357
I01
I0
I00
Ntp3358
a(S'TVariable'
p3359
S'variable2'
p3360
g3360
S'the second attribute used for classification'
p3361
I01
I0
I00
Ntp3362
a(S'TVariable'
p3363
S'variable3'
p3364
g3364
S'the third attribute used for classification'
p3365
I01
I0
I00
Ntp3366
a(S'int'
p3367
S'noOfValues1'
p3368
g3368
S'number of values of the first attribute'
p3369
I01
I0
I01
Ntp3370
a(S'int'
p3371
S'noOfValues2'
p3372
g3372
S'number of values of the second attribute'
p3373
I01
I0
I01
Ntp3374
a(S'int'
p3375
S'noOfValues3'
p3376
g3376
S'number of values of the third attribute'
p3377
I01
I0
I01
Ntp3378
a(S'TEFMDataDescription'
p3379
S'dataDescription'
p3380
g3380
S'data description'
p3381
I0
I0
I00
Ntp3382
ag1667
ag1671
ag796
ag800
asg26
(dp3383
sbsS'TImputerConstructor_maximal'
p3384
(i__main__
ClassDefinition
p3385
(dp3386
g4
I1
sg5
I0
sg6
g3384
sg7
S'TImputerConstructor'
p3387
sg9
I00
sg10
(lp3388
sg12
(lp3389
g1344
asg26
(dp3390
sbsS'TClassifierByLookupTable1'
p3391
(i__main__
ClassDefinition
p3392
(dp3393
g4
I1
sg5
I0
sg6
g3391
sg7
S'TClassifierByLookupTable'
p3394
sg9
I00
sg10
(lp3395
sg12
(lp3396
(S'TVariable'
p3397
S'variable1'
p3398
(g3398
S'variable'
p3399
tp3400
S' attribute used for classification'
p3401
I01
I0
I00
Ntp3402
ag1667
ag1671
ag796
ag800
asg26
(dp3403
sbsS'TValueFilter_string'
p3404
(i__main__
ClassDefinition
p3405
(dp3406
g4
I1
sg5
I0
sg6
g3404
sg7
S'TValueFilter'
p3407
sg9
I00
sg10
(lp3408
sg12
(lp3409
(S'string'
p3410
S'min'
p3411
(g3411
S'ref'
p3412
tp3413
S' reference value (lower bound for interval operators)'
p3414
I0
I0
I01
Ntp3415
a(S'string'
p3416
S'max'
p3417
g3417
S'upper bound for interval operators'
p3418
I0
I0
I01
Ntp3419
a(S'int'
p3420
S'oper'
p3421
g3421
S' operator'
p3422
I0
I0
I01
S'ValueFilter_Operator'
p3423
tp3424
a(S'bool'
p3425
S'caseSensitive'
p3426
g3426
S'if true (default), the operator is case sensitive'
p3427
I0
I0
I01
Ntp3428
ag2524
ag2528
asg26
(dp3429
sbsS'TGraphAsMatrix'
p3430
(i__main__
ClassDefinition
p3431
(dp3432
g4
I1
sg5
I0
sg6
g3430
sg7
S'TGraph'
p3433
sg9
I00
sg10
(lp3434
sg12
(lp3435
g623
ag627
ag631
asg26
(dp3436
sbsS'TFilter_hasSpecial'
p3437
(i__main__
ClassDefinition
p3438
(dp3439
g4
I1
sg5
I0
sg6
g3437
sg7
S'TFilter'
p3440
sg9
I00
sg10
(lp3441
sg12
(lp3442
g222
ag226
asg26
(dp3443
sbsS'TIMByRelief'
p3444
(i__main__
ClassDefinition
p3445
(dp3446
g4
I1
sg5
I0
sg6
g3444
sg7
S'TIMConstructor'
p3447
sg9
I00
sg10
(lp3448
sg12
(lp3449
(S'TExamplesDistance_Relief'
p3450
S'distance'
p3451
g3451
S'distance measure'
p3452
I0
I0
I00
Ntp3453
a(S'float'
p3454
g881
g881
S'number of neighbours'
p3455
I0
I0
I01
Ntp3456
a(S'float'
p3457
g885
g885
S'number of reference examples'
p3458
I0
I0
I01
Ntp3459
a(S'float'
p3460
S'kFromColumns'
p3461
g3461
S'if positive, number of neighbours is #columns*kFromColumns'
p3462
I0
I0
I01
Ntp3463
a(S'bool'
p3464
S'ignoreSameExample'
p3465
g3465
S'does not put reference example into M'
p3466
I0
I0
I01
Ntp3467
a(S'bool'
p3468
S'convertToBinary'
p3469
g3469
S'convert to binary class (hit-miss)'
p3470
I0
I0
I01
Ntp3471
a(S'bool'
p3472
S'correctClassFirst'
p3473
g3473
S'puts the correct class proportion to the first place'
p3474
I0
I0
I01
Ntp3475
a(S'bool'
p3476
S'allExamples'
p3477
g3477
S'uses all examples for reference examples'
p3478
I0
I0
I01
Ntp3479
a(S'bool'
p3480
S'allSameNeighbours'
p3481
g3481
S'uses all the examples same to the reference as neighbours'
p3482
I0
I0
I01
Ntp3483
ag2367
asg26
(dp3484
sbsS'TPreprocessor_addGaussianNoise'
p3485
(i__main__
ClassDefinition
p3486
(dp3487
g4
I1
sg5
I0
sg6
g3485
sg7
S'TPreprocessor'
p3488
sg9
I00
sg10
(lp3489
sg12
(lp3490
(S'TVariableFloatMap'
p3491
S'deviations'
p3492
g3492
S'deviations individual attribute values'
p3493
I0
I0
I00
Ntp3494
a(S'float'
p3495
S'defaultDeviation'
p3496
g3496
S'default deviation'
p3497
I0
I0
I01
Ntp3498
a(S'TRandomGenerator'
p3499
S'randomGenerator'
p3500
g3500
S'random number generator'
p3501
I0
I0
I00
Ntp3502
asg26
(dp3503
sbsS'TRuleStoppingCriteria_NegativeDistribution'
p3504
(i__main__
ClassDefinition
p3505
(dp3506
g4
I1
sg5
I0
sg6
g3504
sg7
S'TRuleStoppingCriteria'
p3507
sg9
I00
sg10
(lp3508
sg12
(lp3509
sg26
(dp3510
sbsS'TTreeSplitConstructor_ExhaustiveBinary'
p3511
(i__main__
ClassDefinition
p3512
(dp3513
g4
I1
sg5
I0
sg6
g3511
sg7
S'TTreeSplitConstructor_Measure'
p3514
sg9
I00
sg10
(lp3515
sg12
(lp3516
g2139
ag2143
ag1551
asg26
(dp3517
sbsS'TMeasureAttribute_relief'
p3518
(i__main__
ClassDefinition
p3519
(dp3520
g4
I1
sg5
I0
sg6
g3518
sg7
S'TMeasureAttribute'
p3521
sg9
I00
sg10
(lp3522
sg12
(lp3523
(S'float'
p3524
g881
g881
S'number of neighbours'
p3525
I0
I0
I01
Ntp3526
a(S'float'
p3527
g885
g885
S'number of reference examples'
p3528
I0
I0
I01
Ntp3529
a(S'bool'
p3530
S'checkCachedData'
p3531
g3531
S'tells whether to check the checksum of the data before reusing the cached neighbours'
p3532
I0
I0
I01
Ntp3533
ag413
ag417
ag421
ag425
asg26
(dp3534
sbsS'TSomeValue'
p3535
(i__main__
ClassDefinition
p3536
(dp3537
g4
I1
sg5
I0
sg6
g3535
sg7
S'TOrange'
p3538
sg9
I01
sg10
(lp3539
sg12
(lp3540
sg26
(dp3541
sbsS'TDiscDistribution'
p3542
(i__main__
ClassDefinition
p3543
(dp3544
g4
I1
sg5
I0
sg6
g3542
sg7
S'TDistribution'
p3545
sg9
I00
sg10
(lp3546
sg12
(lp3547
(S'TFloatList'
p3548
S'variances'
p3549
g3549
S'variances'
p3550
I0
I0
I00
Ntp3551
ag1958
ag1962
ag1966
ag1970
ag1974
ag1978
ag1982
ag1986
asg26
(dp3552
sbsS'TTreeDescender_UnknownMergeAsBranchSizes'
p3553
(i__main__
ClassDefinition
p3554
(dp3555
g4
I1
sg5
I0
sg6
g3553
sg7
g1991
sg9
I0
sg10
(lp3556
sg12
(lp3557
sg26
(dp3558
sbsS'TLogitClassifierState'
p3559
(i__main__
ClassDefinition
p3560
(dp3561
g4
I1
sg5
I0
sg6
g3559
sg7
S'TOrange'
p3562
sg9
I00
sg10
(lp3563
sg12
(lp3564
sg26
(dp3565
sbsS'TColorIG'
p3566
(i__main__
ClassDefinition
p3567
(dp3568
g4
I1
sg5
I0
sg6
g3566
sg7
S'TOrange'
p3569
sg9
I01
sg10
(lp3570
sg12
(lp3571
sg26
(dp3572
sbsS'TFilter_disjunction'
p3573
(i__main__
ClassDefinition
p3574
(dp3575
g4
I1
sg5
I0
sg6
g3573
sg7
S'TFilter'
p3576
sg9
I00
sg10
(lp3577
sg12
(lp3578
(S'TFilterList'
p3579
S'filters'
p3580
g3580
S'a list of filters;'
p3581
I0
I0
I00
Ntp3582
ag222
ag226
asg26
(dp3583
sbsS'TColumnAssessor'
p3584
(i__main__
ClassDefinition
p3585
(dp3586
g4
I1
sg5
I0
sg6
g3584
sg7
S'TOrange'
p3587
sg9
I01
sg10
(lp3588
sg12
(lp3589
sg26
(dp3590
sbsS'TComputeDomainContingency_Preprocessor'
p3591
(i__main__
ClassDefinition
p3592
(dp3593
g4
I1
sg5
I0
sg6
g3591
sg7
S'TComputeDomainContingency'
p3594
sg9
I00
sg10
(lp3595
sg12
(lp3596
(S'TPreprocessor'
p3597
S'preprocessor'
p3598
g3598
S'preprocesses the exmaples (see the manual for restrictions!)'
p3599
I0
I0
I00
Ntp3600
a(S'bool'
p3601
S'resultInOriginalDomain'
p3602
g3602
S'tells whether the resulting DomainContingency should consist of original attributes'
p3603
I0
I0
I01
Ntp3604
ag25
asg26
(dp3605
sbsS'TMeasureAttribute_MSE'
p3606
(i__main__
ClassDefinition
p3607
(dp3608
g4
I1
sg5
I0
sg6
g3606
sg7
S'TMeasureAttribute'
p3609
sg9
I00
sg10
(lp3610
sg12
(lp3611
(S'float'
p3612
g885
g885
S'm for m-estimate'
p3613
I0
I0
I01
Ntp3614
a(S'int'
p3615
S'unknownsTreatment'
p3616
g3616
S' treatment of unknown values'
p3617
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p3618
tp3619
ag413
ag417
ag421
ag425
asg26
(dp3620
sbsS'TMeasureAttribute_gainRatio'
p3621
(i__main__
ClassDefinition
p3622
(dp3623
g4
I1
sg5
I0
sg6
g3621
sg7
S'TMeasureAttributeFromProbabilities'
p3624
sg9
I00
sg10
(lp3625
sg12
(lp3626
g399
ag403
ag408
ag413
ag417
ag421
ag425
asg26
(dp3627
sbsS'TPNN'
p3628
(i__main__
ClassDefinition
p3629
(dp3630
g4
I1
sg5
I0
sg6
g3628
sg7
S'TClassifierFD'
p3631
sg9
I00
sg10
(lp3632
sg12
(lp3633
g3065
ag3069
ag3073
ag3077
ag3081
ag3085
ag3089
ag792
ag796
ag800
asg26
(dp3634
sbsS'TBiModalDiscretizer'
p3635
(i__main__
ClassDefinition
p3636
(dp3637
g4
I1
sg5
I0
sg6
g3635
sg7
S'TDiscretizer'
p3638
sg9
I00
sg10
(lp3639
sg12
(lp3640
(S'float'
p3641
S'low'
p3642
g3642
S'low threshold'
p3643
I0
I0
I01
Ntp3644
a(S'float'
p3645
S'high'
p3646
g3646
S'high threshold'
p3647
I0
I0
I01
Ntp3648
ag279
asg26
(dp3649
sbsS'TProbabilityEstimatorConstructor_Laplace'
p3650
(i__main__
ClassDefinition
p3651
(dp3652
g4
I1
sg5
I0
sg6
g3650
sg7
S'TProbabilityEstimatorConstructor'
p3653
sg9
I00
sg10
(lp3654
sg12
(lp3655
(S'float'
p3656
S'l'
p3657
g3657
S'number of examples added to each class (default: 1)'
p3658
I0
I0
I01
Ntp3659
a(S'bool'
p3660
S'renormalize'
p3661
g3661
S'computes the estimate on the original (not the normalized) distribution'
p3662
I0
I0
I01
Ntp3663
asg26
(dp3664
sbsS'TEnumVariable'
p3665
(i__main__
ClassDefinition
p3666
(dp3667
g4
I1
sg5
I0
sg6
g3665
sg7
S'TVariable'
p3668
sg9
I00
sg10
(lp3669
sg12
(lp3670
(S'TStringList'
p3671
S'values'
p3672
g3672
S"attribute's values"
p3673
I0
I0
I00
Ntp3674
a(S'int'
p3675
S'baseValue'
p3676
g3676
S'the index of the base value'
p3677
I0
I0
I01
Ntp3678
ag583
ag588
ag592
ag596
ag600
ag604
ag608
ag612
asg26
(dp3679
sbsS'TExamplesDistanceConstructor_Manhattan'
p3680
(i__main__
ClassDefinition
p3681
(dp3682
g4
I1
sg5
I0
sg6
g3680
sg7
S'TExamplesDistanceConstructor_Normalized'
p3683
sg9
I00
sg10
(lp3684
sg12
(lp3685
g1037
ag1041
ag507
asg26
(dp3686
sbsS'TC45Learner'
p3687
(i__main__
ClassDefinition
p3688
(dp3689
g4
I1
sg5
I0
sg6
g3687
sg7
S'TLearner'
p3690
sg9
I00
sg10
(lp3691
sg12
(lp3692
(S'bool'
p3693
S'gainRatio'
p3694
(g3694
S'g'
p3695
tp3696
S' use gain ratio (instead of information gain)'
p3697
I0
I0
I01
Ntp3698
a(S'bool'
p3699
S'subset'
p3700
(g3700
S's'
p3701
tp3702
S' use subsetting'
p3703
I0
I0
I01
Ntp3704
a(S'bool'
p3705
S'batch'
p3706
(g3706
S'b'
p3707
tp3708
S' batch'
p3709
I0
I0
I01
Ntp3710
a(S'bool'
p3711
S'probThresh'
p3712
(g3712
g1640
tp3713
S' probability threshold'
p3714
I0
I0
I01
Ntp3715
a(S'int'
p3716
S'minObjs'
p3717
(g3717
g885
tp3718
S' minimal number of objects (examples) in leaves'
p3719
I0
I0
I01
Ntp3720
a(S'int'
p3721
S'window'
p3722
(g3722
S'w'
p3723
tp3724
S' window'
p3725
I0
I0
I01
Ntp3726
a(S'int'
p3727
S'increment'
p3728
(g3728
S'i'
p3729
tp3730
S' increment'
p3731
I0
I0
I01
Ntp3732
a(S'float'
p3733
S'cf'
p3734
(g3734
S'c'
p3735
tp3736
S' cf'
p3737
I0
I0
I01
Ntp3738
a(S'int'
p3739
S'trials'
p3740
(g3740
g1632
tp3741
S' trials'
p3742
I0
I0
I01
Ntp3743
a(S'bool'
p3744
S'prune'
p3745
g3745
S'return pruned tree'
p3746
I0
I0
I01
Ntp3747
a(S'bool'
p3748
S'convertToOrange'
p3749
g3749
S'return TreeClassifier instead of C45TreeClassifier'
p3750
I0
I0
I01
Ntp3751
a(S'bool'
p3752
S'storeExamples'
p3753
g3753
S'stores examples when (if) converting to TreeClassifier'
p3754
I0
I0
I01
Ntp3755
a(S'bool'
p3756
S'storeContingencies'
p3757
g3757
S'stores contingencies when (if) converting to TreeClassifier'
p3758
I0
I0
I01
Ntp3759
ag44
asg26
(dp3760
sbsS'TExamplesDistance_Python'
p3761
(i__main__
ClassDefinition
p3762
(dp3763
g4
I1
sg5
I0
sg6
g3761
sg7
S'TExamplesDistance'
p3764
sg9
I00
sg10
(lp3765
sg12
(lp3766
sg26
(dp3767
sbsS'TTreeStopCriteria'
p3768
(i__main__
ClassDefinition
p3769
(dp3770
g4
I1
sg5
I0
sg6
g3768
sg7
S'TOrange'
p3771
sg9
I00
sg10
(lp3772
sg12
(lp3773
sg26
(dp3774
sbsS'TExamplesDistanceConstructor_Relief'
p3775
(i__main__
ClassDefinition
p3776
(dp3777
g4
I1
sg5
I0
sg6
g3775
sg7
S'TExamplesDistanceConstructor'
p3778
sg9
I00
sg10
(lp3779
sg12
(lp3780
g507
asg26
(dp3781
sbsS'TColumnAssessor_Measure'
p3782
(i__main__
ClassDefinition
p3783
(dp3784
g4
I1
sg5
I0
sg6
g3782
sg7
S'TColumnAssessor'
p3785
sg9
I00
sg10
(lp3786
sg12
(lp3787
(S'TMeasureAttribute'
p3788
S'measure'
p3789
g3789
S'attribute quality measure'
p3790
I0
I0
I00
Ntp3791
asg26
(dp3792
sbsS'TRuleValidator_Python'
p3793
(i__main__
ClassDefinition
p3794
(dp3795
g4
I1
sg5
I0
sg6
g3793
sg7
S'TRuleValidator'
p3796
sg9
I00
sg10
(lp3797
sg12
(lp3798
sg26
(dp3799
sbsS'TSubsetsGenerator_constSize_iterator'
p3800
(i__main__
ClassDefinition
p3801
(dp3802
g4
I1
sg5
I0
sg6
g3800
sg7
S'TSubsetsGenerator_iterator'
p3803
sg9
I00
sg10
(lp3804
sg12
(lp3805
(S'bool'
p3806
S'moreToCome'
p3807
g3807
g1167
I01
I0
I01
Ntp3808
ag158
asg26
(dp3809
sbsS'TRuleClassifier_firstRule'
p3810
(i__main__
ClassDefinition
p3811
(dp3812
g4
I1
sg5
I0
sg6
g3810
sg7
S'TRuleClassifier'
p3813
sg9
I00
sg10
(lp3814
sg12
(lp3815
(S'TDistribution'
p3816
S'prior'
p3817
g3817
S'prior distribution'
p3818
I0
I0
I00
Ntp3819
ag1765
ag1768
ag1771
ag796
ag800
asg26
(dp3820
sbsS'TEVDist'
p3821
(i__main__
ClassDefinition
p3822
(dp3823
g4
I1
sg5
I0
sg6
g3821
sg7
S'TOrange'
p3824
sg9
I00
sg10
(lp3825
sg12
(lp3826
(S'float'
p3827
S'mu'
p3828
g3828
S'mu of Fisher-Tippett distribution'
p3829
I0
I0
I01
Ntp3830
a(S'float'
p3831
S'beta'
p3832
g3832
S'beta of Fisher-Tippett distribution'
p3833
I0
I0
I01
Ntp3834
a(S'TFloatList'
p3835
S'percentiles'
p3836
g3836
S'usually 10 values - 0 = 5th percentile, 1 = 15th percentile, 9 = 95th percentile, change maxPercentile and step for other settings'
p3837
I0
I0
I00
Ntp3838
a(S'float'
p3839
S'maxPercentile'
p3840
g3840
S'maxPercentile Value, default 0.95'
p3841
I0
I0
I01
Ntp3842
a(S'float'
p3843
S'step'
p3844
g3844
S'step of percentiles, default 0.1'
p3845
I0
I0
I01
Ntp3846
asg26
(dp3847
sbsS'TAssociationLearner'
p3848
(i__main__
ClassDefinition
p3849
(dp3850
g4
I1
sg5
I0
sg6
g3848
sg7
S'TLearner'
p3851
sg9
I00
sg10
(lp3852
sg12
(lp3853
(S'float'
p3854
S'confidence'
p3855
g3855
S'required confidence'
p3856
I0
I0
I01
Ntp3857
a(S'float'
p3858
S'support'
p3859
g3859
S'required support'
p3860
I0
I0
I01
Ntp3861
a(S'int'
p3862
S'voteWeight'
p3863
g3863
S'vote weight (s=support, c=confidence, p=product)'
p3864
I0
I0
I01
Ntp3865
a(S'int'
p3866
S'maxItemSets'
p3867
g3867
S'maximal number of itemsets (increase if you want)'
p3868
I0
I0
I01
Ntp3869
ag44
asg26
(dp3870
sbsS'TDistributionAssessor'
p3871
(i__main__
ClassDefinition
p3872
(dp3873
g4
I1
sg5
I0
sg6
g3871
sg7
S'TOrange'
p3874
sg9
I01
sg10
(lp3875
sg12
(lp3876
sg26
(dp3877
sbsS'TClassifierRandomGenerator'
p3878
(i__main__
ClassDefinition
p3879
(dp3880
g4
I1
sg5
I0
sg6
g3878
sg7
S'TExampleGenerator'
p3881
sg9
I00
sg10
(lp3882
sg12
(lp3883
(S'TClassifier'
p3884
S'classify'
p3885
g3885
S'classifier'
p3886
I0
I0
I00
Ntp3887
a(S'int'
p3888
S'noOfEx'
p3889
g3889
S'number of examples'
p3890
I0
I0
I01
Ntp3891
ag92
ag96
asg26
(dp3892
sbsS'TConditionalProbabilityEstimatorConstructor_ByRows'
p3893
(i__main__
ClassDefinition
p3894
(dp3895
g4
I1
sg5
I0
sg6
g3893
sg7
S'TConditionalProbabilityEstimatorConstructor'
p3896
sg9
I00
sg10
(lp3897
sg12
(lp3898
(S'TProbabilityEstimatorConstructor'
p3899
S'estimatorConstructor'
p3900
g3900
S'ProbabilityEstimator to be used '
p3901
I0
I0
I00
Ntp3902
asg26
(dp3903
sbsS'TTreeSplitConstructor'
p3904
(i__main__
ClassDefinition
p3905
(dp3906
g4
I1
sg5
I0
sg6
g3904
sg7
S'TOrange'
p3907
sg9
I01
sg10
(lp3908
sg12
(lp3909
g1551
asg26
(dp3910
sbsS'TSubsetsGenerator_constSize'
p3911
(i__main__
ClassDefinition
p3912
(dp3913
g4
I1
sg5
I0
sg6
g3911
sg7
S'TSubsetsGenerator'
p3914
sg9
I00
sg10
(lp3915
sg12
(lp3916
(S'int'
p3917
S'B'
p3918
g3918
S'subset size'
p3919
I0
I0
I01
Ntp3920
ag2113
asg26
(dp3921
sbsS'TColorIG_MCF'
p3922
(i__main__
ClassDefinition
p3923
(dp3924
g4
I1
sg5
I0
sg6
g3922
sg7
S'TColorIG'
p3925
sg9
I00
sg10
(lp3926
sg12
(lp3927
sg26
(dp3928
sbsS'TBasicAttrStat'
p3929
(i__main__
ClassDefinition
p3930
(dp3931
g4
I1
sg5
I0
sg6
g3929
sg7
S'TOrange'
p3932
sg9
I00
sg10
(lp3933
sg12
(lp3934
(S'float'
p3935
S'sum'
p3936
g3936
S'sum of values'
p3937
I0
I0
I01
Ntp3938
a(S'float'
p3939
S'sum2'
p3940
g3940
S'sum of squares of values'
p3941
I0
I0
I01
Ntp3942
a(S'float'
p3943
g2655
g2655
S'number of examples for which the attribute is defined'
p3944
I0
I0
I01
Ntp3945
a(S'float'
p3946
S'min'
p3947
g3947
S'the lowest value of the attribute'
p3948
I0
I0
I01
Ntp3949
a(S'float'
p3950
S'max'
p3951
g3951
S'the highest value of the attribute'
p3952
I0
I0
I01
Ntp3953
a(S'float'
p3954
S'avg'
p3955
g3955
S'the average value of the attribute'
p3956
I0
I0
I01
Ntp3957
a(S'float'
p3958
S'dev'
p3959
g3959
S'the deviation of the value of the attribute'
p3960
I0
I0
I01
Ntp3961
a(S'TVariable'
p3962
S'variable'
p3963
g3963
S'the attribute to which the data applies'
p3964
I0
I0
I00
Ntp3965
a(S'bool'
p3966
S'holdRecomputation'
p3967
g3967
S'temporarily disables recomputation of avg and dev while adding values'
p3968
I0
I0
I01
Ntp3969
asg26
(dp3970
sbsS'TRuleBeamFilter'
p3971
(i__main__
ClassDefinition
p3972
(dp3973
g4
I1
sg5
I0
sg6
g3971
sg7
S'TOrange'
p3974
sg9
I01
sg10
(lp3975
sg12
(lp3976
sg26
(dp3977
sbsS'TPreprocessor_addClassWeight'
p3978
(i__main__
ClassDefinition
p3979
(dp3980
g4
I1
sg5
I0
sg6
g3978
sg7
S'TPreprocessor'
p3981
sg9
I00
sg10
(lp3982
sg12
(lp3983
(S'TFloatList'
p3984
S'classWeights'
p3985
g3985
S'weights of examples of particular classes'
p3986
I0
I0
I00
Ntp3987
a(S'bool'
p3988
S'equalize'
p3989
g3989
S'reweight examples to equalize class proportions'
p3990
I0
I0
I01
Ntp3991
a(S'TRandomGenerator'
p3992
S'randomGenerator'
p3993
g3993
S'random number generator'
p3994
I0
I0
I00
Ntp3995
asg26
(dp3996
sbsS'TValueFilter_continuous'
p3997
(i__main__
ClassDefinition
p3998
(dp3999
g4
I1
sg5
I0
sg6
g3997
sg7
S'TValueFilter'
p4000
sg9
I00
sg10
(lp4001
sg12
(lp4002
(S'float'
p4003
S'min'
p4004
(g4004
S'ref'
p4005
tp4006
S' reference value (lower bound for interval operators)'
p4007
I0
I0
I01
Ntp4008
a(S'float'
p4009
S'max'
p4010
g4010
S'upper bound for interval operators'
p4011
I0
I0
I01
Ntp4012
a(S'bool'
p4013
S'outside'
p4014
g4014
S'obsolete: if true, the filter accepts the values outside the interval, not inside'
p4015
I0
I0
I01
Ntp4016
a(S'int'
p4017
S'oper'
p4018
g4018
S' operator'
p4019
I0
I0
I01
S'ValueFilter_Operator'
p4020
tp4021
ag2524
ag2528
asg26
(dp4022
sbsS'TAssociationRule'
p4023
(i__main__
ClassDefinition
p4024
(dp4025
g4
I1
sg5
I0
sg6
g4023
sg7
S'TOrange'
p4026
sg9
I00
sg10
(lp4027
sg12
(lp4028
(S'TExample'
p4029
S'left'
p4030
g4030
S'left side of the rule'
p4031
I01
I0
I00
Ntp4032
a(S'TExample'
p4033
S'right'
p4034
g4034
S'right side of the rule'
p4035
I01
I0
I00
Ntp4036
a(S'float'
p4037
S'support'
p4038
g4038
S'support for the rule'
p4039
I0
I0
I01
Ntp4040
a(S'float'
p4041
S'confidence'
p4042
g4042
S'confidence of the rule'
p4043
I0
I0
I01
Ntp4044
a(S'float'
p4045
S'coverage'
p4046
g4046
S"rule's coverage"
p4047
I0
I0
I01
Ntp4048
a(S'float'
p4049
S'strength'
p4050
g4050
S"rule's strength"
p4051
I0
I0
I01
Ntp4052
a(S'float'
p4053
S'lift'
p4054
g4054
S"rule's lift"
p4055
I0
I0
I01
Ntp4056
a(S'float'
p4057
S'leverage'
p4058
g4058
S"rule's leverage"
p4059
I0
I0
I01
Ntp4060
a(S'float'
p4061
S'nAppliesLeft'
p4062
g4062
S"number of examples covered by the rule's left side"
p4063
I0
I0
I01
Ntp4064
a(S'float'
p4065
S'nAppliesRight'
p4066
g4066
S"number of examples covered by the rule's right side"
p4067
I0
I0
I01
Ntp4068
a(S'float'
p4069
S'nAppliesBoth'
p4070
g4070
S'number of examples covered by the rule'
p4071
I0
I0
I01
Ntp4072
a(S'float'
p4073
S'nExamples'
p4074
g4074
S'number of learning examples'
p4075
I0
I0
I01
Ntp4076
a(S'int'
p4077
S'nLeft'
p4078
g4078
S"number of items on the rule's left side"
p4079
I01
I0
I01
Ntp4080
a(S'int'
p4081
S'nRight'
p4082
g4082
S"number of items on the rule's right side"
p4083
I01
I0
I01
Ntp4084
a(S'TExampleTable'
p4085
S'examples'
p4086
g4086
S'examples which the rule was built from'
p4087
I01
I0
I00
Ntp4088
a(S'TIntList'
p4089
S'matchLeft'
p4090
g4090
S'indices of examples that match the left side of the rule'
p4091
I01
I0
I00
Ntp4092
a(S'TIntList'
p4093
S'matchBoth'
p4094
g4094
S'indices to examples that match both sides of the rule'
p4095
I01
I0
I00
Ntp4096
asg26
(dp4097
sbsS'TValueFilter'
p4098
(i__main__
ClassDefinition
p4099
(dp4100
g4
I1
sg5
I0
sg6
g4098
sg7
S'TOrange'
p4101
sg9
I01
sg10
(lp4102
sg12
(lp4103
g2524
ag2528
asg26
(dp4104
S'Operator'
p4105
(lp4106
(S'None'
p4107
I0
tp4108
a(S'Equal'
p4109
I1
tp4110
a(S'NotEqual'
p4111
I2
tp4112
a(S'Less'
p4113
I3
tp4114
a(S'LessEqual'
p4115
I4
tp4116
a(S'Greater'
p4117
I5
tp4118
a(S'GreaterEqual'
p4119
I6
tp4120
a(S'Between'
p4121
I7
tp4122
a(S'Outside'
p4123
I8
tp4124
a(S'Contains'
p4125
I9
tp4126
a(S'NotContains'
p4127
I10
tp4128
a(S'BeginsWith'
p4129
I11
tp4130
a(S'EndsWith'
p4131
I12
tp4132
a(S'Listed'
p4133
I13
tp4134
assbsS'TNoiseValuesGenerator'
p4135
(i__main__
ClassDefinition
p4136
(dp4137
g4
I1
sg5
I0
sg6
g4135
sg7
S'TChangeExampleGenerator'
p4138
sg9
I00
sg10
(lp4139
sg12
(lp4140
(S'TIntFloatList'
p4141
S'replaceProbabilities'
p4142
g4142
S"probabilities for replacing attributes' values"
p4143
I0
I0
I00
Ntp4144
a(S'TRandomGenerator'
p4145
S'randomGenerator'
p4146
g4146
S'random generator'
p4147
I0
I0
I00
Ntp4148
ag92
ag96
asg26
(dp4149
sbsS'TFilter_sameValue'
p4150
(i__main__
ClassDefinition
p4151
(dp4152
g4
I1
sg5
I0
sg6
g4150
sg7
S'TFilter'
p4153
sg9
I00
sg10
(lp4154
sg12
(lp4155
(S'int'
p4156
S'position'
p4157
g4157
S'position of the observed attribute'
p4158
I0
I0
I01
Ntp4159
a(S'TValue'
p4160
S'value'
p4161
g4161
S'value that the selected examples should have'
p4162
I0
I0
I01
Ntp4163
ag222
ag226
asg26
(dp4164
sbsS'TEquiNDiscretization'
p4165
(i__main__
ClassDefinition
p4166
(dp4167
g4
I1
sg5
I0
sg6
g4165
sg7
S'TDiscretization'
p4168
sg9
I00
sg10
(lp4169
sg12
(lp4170
(S'int'
p4171
S'numberOfIntervals'
p4172
g4172
S'number of intervals'
p4173
I0
I0
I01
Ntp4174
a(S'bool'
p4175
S'recursiveDivision'
p4176
g4176
S'find cut-off points by recursive division (default = true)'
p4177
I0
I0
I01
Ntp4178
asg26
(dp4179
sbsS'TDomainBasicAttrStat'
p4180
(i__main__
ClassDefinition
p4181
(dp4182
g4
I1
sg5
I0
sg6
g4180
sg7
g2322
sg9
I00
sg10
(lp4183
sg12
(lp4184
sg26
(dp4185
sbsS'TBayesClassifier'
p4186
(i__main__
ClassDefinition
p4187
(dp4188
g4
I1
sg5
I0
sg6
g4186
sg7
S'TClassifierFD'
p4189
sg9
I00
sg10
(lp4190
sg12
(lp4191
(S'TDistribution'
p4192
S'distribution'
p4193
g4193
S'class distributions (P(C))'
p4194
I0
I0
I00
Ntp4195
a(S'TDomainContingency'
p4196
S'conditionalDistributions'
p4197
g4197
S'conditional distributions, P(C|A)'
p4198
I0
I0
I00
Ntp4199
a(S'TProbabilityEstimator'
p4200
S'estimator'
p4201
g4201
S'a probability estimator for P(C)'
p4202
I0
I0
I00
Ntp4203
a(S'TConditionalProbabilityEstimatorList'
p4204
S'conditionalEstimators'
p4205
g4205
S'a probability estimator for P(C|A)'
p4206
I0
I0
I00
Ntp4207
a(S'bool'
p4208
S'normalizePredictions'
p4209
g4209
S'if true, classifier will normalize predictions'
p4210
I0
I0
I01
Ntp4211
a(S'float'
p4212
S'threshold'
p4213
g4213
S'threshold probability for class 1 (for binary classes only)'
p4214
I0
I0
I01
Ntp4215
ag792
ag796
ag800
asg26
(dp4216
sbsS'TCostWrapperClassifier'
p4217
(i__main__
ClassDefinition
p4218
(dp4219
g4
I1
sg5
I0
sg6
g4217
sg7
S'TClassifier'
p4220
sg9
I00
sg10
(lp4221
sg12
(lp4222
(S'TClassifier'
p4223
S'classifier'
p4224
g4224
S'basic classifier'
p4225
I0
I0
I00
Ntp4226
a(S'TCostMatrix'
p4227
S'costMatrix'
p4228
g4228
S'cost matrix'
p4229
I0
I0
I00
Ntp4230
ag796
ag800
asg26
(dp4231
sbsS'TPreprocessor_ignore'
p4232
(i__main__
ClassDefinition
p4233
(dp4234
g4
I1
sg5
I0
sg6
g4232
sg7
S'TPreprocessor'
p4235
sg9
I00
sg10
(lp4236
sg12
(lp4237
(S'TVarList'
p4238
S'attributes'
p4239
g4239
S'tells which attributes to remove'
p4240
I0
I0
I00
Ntp4241
asg26
(dp4242
sbsS'TExamplesDistance_Euclidean'
p4243
(i__main__
ClassDefinition
p4244
(dp4245
g4
I1
sg5
I0
sg6
g4243
sg7
S'TExamplesDistance_Normalized'
p4246
sg9
I00
sg10
(lp4247
sg12
(lp4248
(S'TDomainDistributions'
p4249
S'distributions'
p4250
g4250
S'distributions (of discrete attributes only)'
p4251
I0
I0
I00
Ntp4252
a(S'TAttributedFloatList'
p4253
S'bothSpecialDist'
p4254
g4254
S'distances between discrete attributes if both values are unknown'
p4255
I0
I0
I00
Ntp4256
ag107
ag111
ag115
ag119
ag123
ag127
ag131
asg26
(dp4257
sbsS'TMeasureAttribute_Python'
p4258
(i__main__
ClassDefinition
p4259
(dp4260
g4
I1
sg5
I0
sg6
g4258
sg7
S'TMeasureAttribute'
p4261
sg9
I00
sg10
(lp4262
sg12
(lp4263
g413
ag417
ag421
ag425
asg26
(dp4264
sbsS'TPreprocessor_take'
p4265
(i__main__
ClassDefinition
p4266
(dp4267
g4
I1
sg5
I0
sg6
g4265
sg7
S'TPreprocessor'
p4268
sg9
I00
sg10
(lp4269
sg12
(lp4270
(S'TVariableFilterMap'
p4271
S'values'
p4272
g4272
S'variable-filter pairs'
p4273
I0
I0
I00
Ntp4274
a(S'bool'
p4275
S'conjunction'
p4276
g4276
S'decides whether to take conjunction or disjunction of values'
p4277
I0
I0
I01
Ntp4278
asg26
(dp4279
sbsS'TDistributionAssessor_m'
p4280
(i__main__
ClassDefinition
p4281
(dp4282
g4
I1
sg5
I0
sg6
g4280
sg7
S'TDistributionAssessor'
p4283
sg9
I00
sg10
(lp4284
sg12
(lp4285
(S'float'
p4286
g885
g885
S'm for m-estimate'
p4287
I0
I0
I01
Ntp4288
asg26
(dp4289
sbsS'TEVDistGetter'
p4290
(i__main__
ClassDefinition
p4291
(dp4292
g4
I1
sg5
I0
sg6
g4290
sg7
S'TOrange'
p4293
sg9
I01
sg10
(lp4294
sg12
(lp4295
sg26
(dp4296
sbsS'TStopDistributionClustering_n'
p4297
(i__main__
ClassDefinition
p4298
(dp4299
g4
I1
sg5
I0
sg6
g4297
sg7
S'TStopDistributionClustering'
p4300
sg9
I00
sg10
(lp4301
sg12
(lp4302
(S'int'
p4303
g2655
g2655
S'number of clusters'
p4304
I0
I0
I01
Ntp4305
asg26
(dp4306
sbsS'TTreeExampleSplitter_UnknownsAsSelector'
p4307
(i__main__
ClassDefinition
p4308
(dp4309
g4
I1
sg5
I0
sg6
g4307
sg7
S'TTreeExampleSplitter'
p4310
sg9
I00
sg10
(lp4311
sg12
(lp4312
sg26
(dp4313
sbsS'TClassifier_Python'
p4314
(i__main__
ClassDefinition
p4315
(dp4316
g4
I1
sg5
I0
sg6
g4314
sg7
S'TClassifier'
p4317
sg9
I00
sg10
(lp4318
sg12
(lp4319
g796
ag800
asg26
(dp4320
sbsS'TFilter_isDefined'
p4321
(i__main__
ClassDefinition
p4322
(dp4323
g4
I1
sg5
I0
sg6
g4321
sg7
S'TFilter'
p4324
sg9
I00
sg10
(lp4325
sg12
(lp4326
(S'TAttributedBoolList'
p4327
S'check'
p4328
g4328
S'tells which attributes to check; checks all if the list is empty'
p4329
I0
I0
I00
Ntp4330
ag222
ag226
asg26
(dp4331
sbsS'TProbabilityEstimatorConstructor_m'
p4332
(i__main__
ClassDefinition
p4333
(dp4334
g4
I1
sg5
I0
sg6
g4332
sg7
S'TProbabilityEstimatorConstructor'
p4335
sg9
I00
sg10
(lp4336
sg12
(lp4337
(S'float'
p4338
g885
g885
S'parameter m for m-estimation'
p4339
I0
I0
I01
Ntp4340
a(S'bool'
p4341
S'renormalize'
p4342
g4342
S'computes the estimate on the original (not the normalized) distribution'
p4343
I0
I0
I01
Ntp4344
asg26
(dp4345
sbsS'TStopDistributionClustering_noBigChange'
p4346
(i__main__
ClassDefinition
p4347
(dp4348
g4
I1
sg5
I0
sg6
g4346
sg7
S'TStopDistributionClustering'
p4349
sg9
I00
sg10
(lp4350
sg12
(lp4351
sg26
(dp4352
sbsS'TRuleLearner'
p4353
(i__main__
ClassDefinition
p4354
(dp4355
g4
I1
sg5
I0
sg6
g4353
sg7
S'TLearner'
p4356
sg9
I00
sg10
(lp4357
sg12
(lp4358
(S'TRuleDataStoppingCriteria'
p4359
S'dataStopping'
p4360
g4360
g1167
I0
I0
I00
Ntp4361
a(S'TRuleStoppingCriteria'
p4362
S'ruleStopping'
p4363
g4363
g1167
I0
I0
I00
Ntp4364
a(S'TRuleCovererAndRemover'
p4365
S'coverAndRemove'
p4366
g4366
g1167
I0
I0
I00
Ntp4367
a(S'TRuleFinder'
p4368
S'ruleFinder'
p4369
g4369
g1167
I0
I0
I00
Ntp4370
a(S'TRuleClassifierConstructor'
p4371
S'classifierConstructor'
p4372
g4372
S'classifier'
p4373
I0
I0
I00
Ntp4374
a(S'TProgressCallback'
p4375
S'progressCallback'
p4376
g4376
S'progress callback function'
p4377
I0
I0
I00
Ntp4378
a(S'bool'
p4379
S'storeExamples'
p4380
g4380
g1167
I0
I0
I01
Ntp4381
a(S'int'
p4382
S'targetClass'
p4383
g4383
g1167
I0
I0
I01
Ntp4384
a(S'TRuleList'
p4385
S'baseRules'
p4386
g4386
g1167
I0
I0
I00
Ntp4387
ag44
asg26
(dp4388
sbsS'TLinearLearner'
p4389
(i__main__
ClassDefinition
p4390
(dp4391
g4
I1
sg5
I0
sg6
g4389
sg7
S'TLearner'
p4392
sg9
I00
sg10
(lp4393
sg12
(lp4394
(S'int'
p4395
S'solver_type'
p4396
g4396
S' Solver type (loss function)'
p4397
I0
I0
I01
S'LinearLearner_LossFunction'
p4398
tp4399
a(S'float'
p4400
S'eps'
p4401
g4401
S'Stopping criteria'
p4402
I0
I0
I01
Ntp4403
a(S'float'
p4404
g1825
g1825
S'Regularization parameter'
p4405
I0
I0
I01
Ntp4406
ag44
asg26
(dp4407
S'LossFunction'
p4408
(lp4409
(S'L2_LR'
p4410
I0
tp4411
a(S'L2Loss_SVM_Dual'
p4412
I1
tp4413
a(S'L2Loss_SVM'
p4414
I2
tp4415
a(S'L1Loss_SVM_Dual'
p4416
I3
tp4417
assbsS'TImputer'
p4418
(i__main__
ClassDefinition
p4419
(dp4420
g4
I1
sg5
I0
sg6
g4418
sg7
S'TOrange'
p4421
sg9
I01
sg10
(lp4422
sg12
(lp4423
sg26
(dp4424
sbsS'TTransformValue_Python'
p4425
(i__main__
ClassDefinition
p4426
(dp4427
g4
I1
sg5
I0
sg6
g4425
sg7
S'TTransformValue'
p4428
sg9
I00
sg10
(lp4429
sg12
(lp4430
g279
asg26
(dp4431
sbsS'TStopIMClusteringByAssessor_noProfit'
p4432
(i__main__
ClassDefinition
p4433
(dp4434
g4
I1
sg5
I0
sg6
g4432
sg7
S'TStopIMClusteringByAssessor'
p4435
sg9
I00
sg10
(lp4436
sg12
(lp4437
(S'float'
p4438
S'minProfitProportion'
p4439
g4439
S'minimal allowable profit proportion'
p4440
I0
I0
I01
Ntp4441
asg26
(dp4442
sbsS'TRuleBeamFilter_Width'
p4443
(i__main__
ClassDefinition
p4444
(dp4445
g4
I1
sg5
I0
sg6
g4443
sg7
S'TRuleBeamFilter'
p4446
sg9
I00
sg10
(lp4447
sg12
(lp4448
(S'int'
p4449
S'width'
p4450
g4450
g1167
I0
I0
I01
Ntp4451
asg26
(dp4452
sbsS'TRandomClassifier'
p4453
(i__main__
ClassDefinition
p4454
(dp4455
g4
I1
sg5
I0
sg6
g4453
sg7
S'TClassifier'
p4456
sg9
I00
sg10
(lp4457
sg12
(lp4458
(S'TDistribution'
p4459
S'probabilities'
p4460
g4460
S'probabilities of predictions'
p4461
I0
I0
I00
Ntp4462
ag796
ag800
asg26
(dp4463
sbsS'TFindNearest'
p4464
(i__main__
ClassDefinition
p4465
(dp4466
g4
I1
sg5
I0
sg6
g4464
sg7
S'TOrange'
p4467
sg9
I01
sg10
(lp4468
sg12
(lp4469
g377
ag381
asg26
(dp4470
sbsS'TRuleBeamInitializer_Default'
p4471
(i__main__
ClassDefinition
p4472
(dp4473
g4
I1
sg5
I0
sg6
g4471
sg7
S'TRuleBeamInitializer'
p4474
sg9
I00
sg10
(lp4475
sg12
(lp4476
sg26
(dp4477
sbsS'TClassifierFromVar'
p4478
(i__main__
ClassDefinition
p4479
(dp4480
g4
I1
sg5
I0
sg6
g4478
sg7
S'TClassifier'
p4481
sg9
I00
sg10
(lp4482
sg12
(lp4483
(S'TVariable'
p4484
S'whichVar'
p4485
(g4485
S'variable'
p4486
tp4487
S' variable'
p4488
I0
I0
I00
Ntp4489
a(S'TTransformValue'
p4490
S'transformer'
p4491
g4491
S'transformer'
p4492
I0
I0
I00
Ntp4493
a(S'TDistribution'
p4494
S'distributionForUnknown'
p4495
g4495
S'distribution for unknown value'
p4496
I0
I0
I00
Ntp4497
a(S'bool'
p4498
S'transformUnknowns'
p4499
g4499
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p4500
I0
I0
I01
Ntp4501
ag796
ag800
asg26
(dp4502
sbsS'TTreeExampleSplitter_UnknownsToBranch'
p4503
(i__main__
ClassDefinition
p4504
(dp4505
g4
I1
sg5
I0
sg6
g4503
sg7
S'TTreeExampleSplitter'
p4506
sg9
I00
sg10
(lp4507
sg12
(lp4508
sg26
(dp4509
sbsS'TTreeSplitConstructor_OneAgainstOthers'
p4510
(i__main__
ClassDefinition
p4511
(dp4512
g4
I1
sg5
I0
sg6
g4510
sg7
S'TTreeSplitConstructor_Measure'
p4513
sg9
I00
sg10
(lp4514
sg12
(lp4515
g2139
ag2143
ag1551
asg26
(dp4516
sbsS'TClassifier'
p4517
(i__main__
ClassDefinition
p4518
(dp4519
g4
I1
sg5
I0
sg6
g4517
sg7
S'TOrange'
p4520
sg9
I00
sg10
(lp4521
sg12
(lp4522
g796
ag800
asg26
(dp4523
sbsS'TIG'
p4524
(i__main__
ClassDefinition
p4525
(dp4526
g4
I1
sg5
I0
sg6
g4524
sg7
S'TOrange'
p4527
sg9
I00
sg10
(lp4528
sg12
(lp4529
sg26
(dp4530
sbsS'TTreeClassifier'
p4531
(i__main__
ClassDefinition
p4532
(dp4533
g4
I1
sg5
I0
sg6
g4531
sg7
S'TClassifierFD'
p4534
sg9
I00
sg10
(lp4535
sg12
(lp4536
(S'TTreeNode'
p4537
S'tree'
p4538
g4538
S'decision tree'
p4539
I0
I0
I00
Ntp4540
a(S'TTreeDescender'
p4541
S'descender'
p4542
g4542
S'object that descends down the tree'
p4543
I0
I0
I00
Ntp4544
ag792
ag796
ag800
asg26
(dp4545
sbsS'TMeasureAttribute_logOddsRatio'
p4546
(i__main__
ClassDefinition
p4547
(dp4548
g4
I1
sg5
I0
sg6
g4546
sg7
S'TMeasureAttributeFromProbabilities'
p4549
sg9
I00
sg10
(lp4550
sg12
(lp4551
g399
ag403
ag408
ag413
ag417
ag421
ag425
asg26
(dp4552
sbsS'TTreeExampleSplitter_Python'
p4553
(i__main__
ClassDefinition
p4554
(dp4555
g4
I1
sg5
I0
sg6
g4553
sg7
S'TTreeExampleSplitter'
p4556
sg9
I00
sg10
(lp4557
sg12
(lp4558
sg26
(dp4559
sbsS'TFilter_random'
p4560
(i__main__
ClassDefinition
p4561
(dp4562
g4
I1
sg5
I0
sg6
g4560
sg7
S'TFilter'
p4563
sg9
I00
sg10
(lp4564
sg12
(lp4565
(S'float'
p4566
S'prob'
p4567
g4567
S'probability of selecting an example'
p4568
I0
I0
I01
Ntp4569
a(S'TRandomGenerator'
p4570
S'randomGenerator'
p4571
g4571
S'random generator'
p4572
I0
I0
I00
Ntp4573
ag222
ag226
asg26
(dp4574
sbsS'TC45ExampleGenerator'
p4575
(i__main__
ClassDefinition
p4576
(dp4577
g4
I1
sg5
I0
sg6
g4575
sg7
S'TFileExampleGenerator'
p4578
sg9
I00
sg10
(lp4579
sg12
(lp4580
(S'TBoolList'
p4581
S'skip'
p4582
g4582
S'a boolean list, one element per attribute, denoting which attributes to skip'
p4583
I0
I0
I00
Ntp4584
ag675
ag679
ag683
ag92
ag96
asg26
(dp4585
sbsS'TProbabilityEstimatorConstructor_loess'
p4586
(i__main__
ClassDefinition
p4587
(dp4588
g4
I1
sg5
I0
sg6
g4586
sg7
S'TProbabilityEstimatorConstructor'
p4589
sg9
I00
sg10
(lp4590
sg12
(lp4591
(S'float'
p4592
S'windowProportion'
p4593
g4593
S'The proportion of points in a window for LR'
p4594
I0
I0
I01
Ntp4595
a(S'int'
p4596
S'nPoints'
p4597
g4597
S'The number of points on curve (negative means the given number of points is inserted in each interval)'
p4598
I0
I0
I01
Ntp4599
a(S'int'
p4600
S'distributionMethod'
p4601
g4601
S" Meaning of the 'nPoints'"
p4602
I0
I0
I01
S'ProbabilityEstimatorConstructor_loess_DistributionMethod'
p4603
tp4604
asg26
(dp4605
S'DistributionMethod'
p4606
(lp4607
(S'Minimal'
p4608
S'DISTRIBUTE_MINIMAL'
p4609
tp4610
a(S'Factor'
p4611
S'DISTRIBUTE_FACTOR'
p4612
tp4613
a(S'Fixed'
p4614
S'DISTRIBUTE_FIXED'
p4615
tp4616
a(S'Uniform'
p4617
S'DISTRIBUTE_UNIFORM'
p4618
tp4619
a(S'Maximal'
p4620
S'DISTRIBUTE_MAXIMAL'
p4621
tp4622
assbsS'TLogRegFitter'
p4623
(i__main__
ClassDefinition
p4624
(dp4625
g4
I1
sg5
I0
sg6
g4623
sg7
S'TOrange'
p4626
sg9
I01
sg10
(lp4627
sg12
(lp4628
sg26
(dp4629
S'ErrorCode'
p4630
(lp4631
(S'OK'
p4632
I0
tp4633
a(S'Infinity'
p4634
I1
tp4635
a(S'Divergence'
p4636
I2
tp4637
a(S'Constant'
p4638
I3
tp4639
a(S'Singularity'
p4640
I4
tp4641
assbsS'TStopIMClusteringByAssessor_noBigChange'
p4642
(i__main__
ClassDefinition
p4643
(dp4644
g4
I1
sg5
I0
sg6
g4642
sg7
S'TStopIMClusteringByAssessor'
p4645
sg9
I00
sg10
(lp4646
sg12
(lp4647
sg26
(dp4648
sbsS'TImputerConstructor_random'
p4649
(i__main__
ClassDefinition
p4650
(dp4651
g4
I1
sg5
I0
sg6
g4649
sg7
S'TImputerConstructor'
p4652
sg9
I00
sg10
(lp4653
sg12
(lp4654
(S'bool'
p4655
S'deterministic'
p4656
g4656
S"tells whether to initialize random by example's CRC (default: false)"
p4657
I0
I0
I01
Ntp4658
ag1344
asg26
(dp4659
sbsS'TRandomLearner'
p4660
(i__main__
ClassDefinition
p4661
(dp4662
g4
I1
sg5
I0
sg6
g4660
sg7
S'TLearner'
p4663
sg9
I00
sg10
(lp4664
sg12
(lp4665
(S'TDistribution'
p4666
S'probabilities'
p4667
g4667
S'probabilities of predictions'
p4668
I0
I0
I00
Ntp4669
ag44
asg26
(dp4670
sbsS'TImputer_asValue'
p4671
(i__main__
ClassDefinition
p4672
(dp4673
g4
I1
sg5
I0
sg6
g4671
sg7
S'TImputer'
p4674
sg9
I00
sg10
(lp4675
sg12
(lp4676
(S'TDomain'
p4677
S'domain'
p4678
g4678
S'domain to which the values are converted'
p4679
I0
I0
I00
Ntp4680
a(S'TExample'
p4681
S'defaults'
p4682
g4682
S'values to impute instead of missing ones - for continuous attributes only!'
p4683
I0
I0
I00
Ntp4684
asg26
(dp4685
sbsS'TLogRegFitter_Cholesky'
p4686
(i__main__
ClassDefinition
p4687
(dp4688
g4
I1
sg5
I0
sg6
g4686
sg7
S'TLogRegFitter'
p4689
sg9
I00
sg10
(lp4690
sg12
(lp4691
sg26
(dp4692
sbsS'TImputerConstructor_minimal'
p4693
(i__main__
ClassDefinition
p4694
(dp4695
g4
I1
sg5
I0
sg6
g4693
sg7
S'TImputerConstructor'
p4696
sg9
I00
sg10
(lp4697
sg12
(lp4698
g1344
asg26
(dp4699
sbsS'TMeasureAttribute_cost'
p4700
(i__main__
ClassDefinition
p4701
(dp4702
g4
I1
sg5
I0
sg6
g4700
sg7
S'TMeasureAttributeFromProbabilities'
p4703
sg9
I00
sg10
(lp4704
sg12
(lp4705
(S'TCostMatrix'
p4706
S'cost'
p4707
g4707
S'cost matrix'
p4708
I0
I0
I00
Ntp4709
ag399
ag403
ag408
ag413
ag417
ag421
ag425
asg26
(dp4710
sbsS'TClustersFromIM'
p4711
(i__main__
ClassDefinition
p4712
(dp4713
g4
I1
sg5
I0
sg6
g4711
sg7
S'TOrange'
p4714
sg9
I01
sg10
(lp4715
sg12
(lp4716
sg26
(dp4717
sbsS'TRuleCovererAndRemover_Default'
p4718
(i__main__
ClassDefinition
p4719
(dp4720
g4
I1
sg5
I0
sg6
g4718
sg7
S'TRuleCovererAndRemover'
p4721
sg9
I00
sg10
(lp4722
sg12
(lp4723
sg26
(dp4724
sbsS'TClustersFromIMByAssessor'
p4725
(i__main__
ClassDefinition
p4726
(dp4727
g4
I1
sg5
I0
sg6
g4725
sg7
S'TClustersFromIM'
p4728
sg9
I00
sg10
(lp4729
sg12
(lp4730
(S'TColumnAssessor'
p4731
S'columnAssessor'
p4732
g4732
S'column quality assessor'
p4733
I0
I0
I00
Ntp4734
a(S'TStopIMClusteringByAssessor'
p4735
S'stopCriterion'
p4736
g4736
S'stop criterion'
p4737
I0
I0
I00
Ntp4738
asg26
(dp4739
sbsS'TDomainContingency'
p4740
(i__main__
ClassDefinition
p4741
(dp4742
g4
I1
sg5
I0
sg6
g4740
sg7
g2322
sg9
I00
sg10
(lp4743
sg12
(lp4744
(S'TDistribution'
p4745
S'classes'
p4746
g4746
S'distribution of class values'
p4747
I0
I0
I00
Ntp4748
a(S'bool'
p4749
S'classIsOuter'
p4750
g4750
S'tells whether the class is the outer variable'
p4751
I0
I0
I01
Ntp4752
asg26
(dp4753
sbsS'TMakeRandomIndices2'
p4754
(i__main__
ClassDefinition
p4755
(dp4756
g4
I1
sg5
I0
sg6
g4754
sg7
S'TMakeRandomIndices'
p4757
sg9
I00
sg10
(lp4758
sg12
(lp4759
(S'float'
p4760
S'p0'
p4761
g4761
S"a proportion or a number of 0's"
p4762
I0
I0
I01
Ntp4763
ag245
ag249
ag253
asg26
(dp4764
sbsS'TValueList'
p4765
(i__main__
ClassDefinition
p4766
(dp4767
g4
I1
sg5
I0
sg6
g4765
sg7
g2322
sg9
I00
sg10
(lp4768
sg12
(lp4769
(S'TVariable'
p4770
S'variable'
p4771
g4771
S'the variable to which the list applies'
p4772
I0
I0
I00
Ntp4773
asg26
(dp4774
sbsS'TTreeExampleSplitter_UnknownsToCommon'
p4775
(i__main__
ClassDefinition
p4776
(dp4777
g4
I1
sg5
I0
sg6
g4775
sg7
S'TTreeExampleSplitter'
p4778
sg9
I00
sg10
(lp4779
sg12
(lp4780
sg26
(dp4781
sbsS'TDomainTransformerConstructor'
p4782
(i__main__
ClassDefinition
p4783
(dp4784
g4
I1
sg5
I0
sg6
g4782
sg7
S'TOrange'
p4785
sg9
I01
sg10
(lp4786
sg12
(lp4787
(S'bool'
p4788
S'preservesOrder'
p4789
g4789
S'a flag telling that original attributes have corresponding attribute in the same order'
p4790
I01
I0
I01
Ntp4791
a(S'bool'
p4792
S'preservesAttributes'
p4793
g4793
S'a flag telling whether each original has a corresponding new attribute'
p4794
I01
I0
I01
Ntp4795
asg26
(dp4796
sbsS'TIGConstructor'
p4797
(i__main__
ClassDefinition
p4798
(dp4799
g4
I1
sg5
I0
sg6
g4797
sg7
S'TOrange'
p4800
sg9
I01
sg10
(lp4801
sg12
(lp4802
sg26
(dp4803
sbsS'TTreeDescender_UnknownToNode'
p4804
(i__main__
ClassDefinition
p4805
(dp4806
g4
I1
sg5
I0
sg6
g4804
sg7
g1991
sg9
I0
sg10
(lp4807
sg12
(lp4808
sg26
(dp4809
sbsS'TMakeRandomIndices'
p4810
(i__main__
ClassDefinition
p4811
(dp4812
g4
I1
sg5
I0
sg6
g4810
sg7
S'TOrange'
p4813
sg9
I00
sg10
(lp4814
sg12
(lp4815
g245
ag249
ag253
asg26
(dp4816
S'Stratification'
p4817
(lp4818
(S'StratifiedIfPossible'
p4819
S'-1'
p4820
tp4821
a(S'NotStratified'
p4822
I0
tp4823
a(S'Stratified'
p4824
I1
tp4825
assbsS'TFilter_Python'
p4826
(i__main__
ClassDefinition
p4827
(dp4828
g4
I1
sg5
I0
sg6
g4826
sg7
S'TFilter'
p4829
sg9
I00
sg10
(lp4830
sg12
(lp4831
g222
ag226
asg26
(dp4832
sbsS'TExamplesDistanceConstructor_Maximal'
p4833
(i__main__
ClassDefinition
p4834
(dp4835
g4
I1
sg5
I0
sg6
g4833
sg7
S'TExamplesDistanceConstructor_Normalized'
p4836
sg9
I00
sg10
(lp4837
sg12
(lp4838
g1037
ag1041
ag507
asg26
(dp4839
sbsS'TExamplesDistanceConstructor_Python'
p4840
(i__main__
ClassDefinition
p4841
(dp4842
g4
I1
sg5
I0
sg6
g4840
sg7
S'TExamplesDistanceConstructor'
p4843
sg9
I00
sg10
(lp4844
sg12
(lp4845
g507
asg26
(dp4846
sbsS'TPythonVariable'
p4847
(i__main__
ClassDefinition
p4848
(dp4849
g4
I1
sg5
I0
sg6
g4847
sg7
S'TVariable'
p4850
sg9
I00
sg10
(lp4851
sg12
(lp4852
(S'bool'
p4853
S'usePickle'
p4854
g4854
S'tells whether to use pickle for saving to/loading from files'
p4855
I0
I0
I01
Ntp4856
a(S'bool'
p4857
S'useSomeValue'
p4858
g4858
S'tells whether the Variable will operate on Value or SomeValue (default)'
p4859
I0
I0
I01
Ntp4860
ag583
ag588
ag592
ag596
ag600
ag604
ag608
ag612
asg26
(dp4861
sbsS'TGaussianNoiseGenerator'
p4862
(i__main__
ClassDefinition
p4863
(dp4864
g4
I1
sg5
I0
sg6
g4862
sg7
S'TChangeExampleGenerator'
p4865
sg9
I00
sg10
(lp4866
sg12
(lp4867
(S'TIntFloatList'
p4868
S'deviations'
p4869
g4869
S"deviations for attributes' values"
p4870
I0
I0
I00
Ntp4871
a(S'TRandomGenerator'
p4872
S'randomGenerator'
p4873
g4873
S'random generator'
p4874
I0
I0
I00
Ntp4875
ag92
ag96
asg26
(dp4876
sbsS'TClustersFromDistributionsByAssessor'
p4877
(i__main__
ClassDefinition
p4878
(dp4879
g4
I1
sg5
I0
sg6
g4877
sg7
S'TClustersFromDistributions'
p4880
sg9
I00
sg10
(lp4881
sg12
(lp4882
(S'TDistributionAssessor'
p4883
S'distributionAssessor'
p4884
g4884
S'column quality assessor'
p4885
I0
I0
I00
Ntp4886
a(S'TStopDistributionClustering'
p4887
S'stopCriterion'
p4888
g4888
S'stop criterion'
p4889
I0
I0
I00
Ntp4890
a(S'float'
p4891
S'minProfitProportion'
p4892
g4892
S'minimal merge profit'
p4893
I0
I0
I01
Ntp4894
asg26
(dp4895
sbsS'TExamplesDistance_Hamming'
p4896
(i__main__
ClassDefinition
p4897
(dp4898
g4
I1
sg5
I0
sg6
g4896
sg7
S'TExamplesDistance'
p4899
sg9
I00
sg10
(lp4900
sg12
(lp4901
(S'bool'
p4902
S'ignoreClass'
p4903
g4903
S'if true (default), class value is ignored when computing distances'
p4904
I0
I0
I01
Ntp4905
a(S'bool'
p4906
S'ignoreUnknowns'
p4907
g4907
S'if true (default: false) unknown values are ignored in computation'
p4908
I0
I0
I01
Ntp4909
asg26
(dp4910
sbsS'TColumnAssessor_Kramer'
p4911
(i__main__
ClassDefinition
p4912
(dp4913
g4
I1
sg5
I0
sg6
g4911
sg7
S'TColumnAssessor'
p4914
sg9
I00
sg10
(lp4915
sg12
(lp4916
sg26
(dp4917
sbsS'TEVDistGetter_Python'
p4918
(i__main__
ClassDefinition
p4919
(dp4920
g4
I1
sg5
I0
sg6
g4918
sg7
S'TEVDistGetter'
p4921
sg9
I00
sg10
(lp4922
sg12
(lp4923
sg26
(dp4924
sbsS'TDiscretization'
p4925
(i__main__
ClassDefinition
p4926
(dp4927
g4
I1
sg5
I0
sg6
g4925
sg7
S'TOrange'
p4928
sg9
I01
sg10
(lp4929
sg12
(lp4930
sg26
(dp4931
sbsS'TIMByRows'
p4932
(i__main__
ClassDefinition
p4933
(dp4934
g4
I1
sg5
I0
sg6
g4932
sg7
S'TOrange'
p4935
sg9
I00
sg10
(lp4936
sg12
(lp4937
(S'int'
p4938
S'varType'
p4939
g4939
S' class variable type'
p4940
I0
I0
I01
S'Variable_Type'
p4941
tp4942
asg26
(dp4943
sbsS'TAssessIMQuality'
p4944
(i__main__
ClassDefinition
p4945
(dp4946
g4
I1
sg5
I0
sg6
g4944
sg7
S'TOrange'
p4947
sg9
I00
sg10
(lp4948
sg12
(lp4949
(S'TColumnAssessor'
p4950
S'columnAssessor'
p4951
g4951
S'column quality assessor'
p4952
I0
I0
I00
Ntp4953
asg26
(dp4954
sbsS'TRule'
p4955
(i__main__
ClassDefinition
p4956
(dp4957
g4
I1
sg5
I0
sg6
g4955
sg7
S'TOrange'
p4958
sg9
I00
sg10
(lp4959
sg12
(lp4960
(S'TFilter'
p4961
S'filter'
p4962
g4962
S'stored filter for this rule'
p4963
I0
I0
I00
Ntp4964
a(S'TFilter'
p4965
S'valuesFilter'
p4966
g4966
S'Filter_values representation of main filter (sometimes needed)'
p4967
I0
I0
I00
Ntp4968
a(S'TClassifier'
p4969
S'classifier'
p4970
g4970
S'classifies an example'
p4971
I0
I0
I00
Ntp4972
a(S'TLearner'
p4973
S'learner'
p4974
g4974
S'learns a classifier from data'
p4975
I0
I0
I00
Ntp4976
a(S'TRule'
p4977
S'parentRule'
p4978
g4978
g1167
I0
I0
I00
Ntp4979
a(S'TDistribution'
p4980
S'baseDist'
p4981
g4981
S'initial distribution'
p4982
I0
I0
I00
Ntp4983
a(S'TDistribution'
p4984
S'classDistribution'
p4985
g4985
S'distribution of classes covered by the rule'
p4986
I0
I0
I00
Ntp4987
a(S'TExampleTable'
p4988
S'examples'
p4989
g4989
S'covered examples'
p4990
I0
I0
I00
Ntp4991
a(S'int'
p4992
S'weightID'
p4993
g4993
S'weight for the stored examples'
p4994
I0
I0
I01
Ntp4995
a(S'float'
p4996
S'quality'
p4997
g4997
S'some measure of rule quality'
p4998
I0
I0
I01
Ntp4999
a(S'int'
p5000
S'complexity'
p5001
g5001
g1167
I0
I0
I01
Ntp5002
a(S'float'
p5003
S'chi'
p5004
g5004
g1167
I0
I0
I01
Ntp5005
a(S'int'
p5006
S'requiredConditions'
p5007
g5007
S'conditions that are mandatory in rule - rule attribute significance avoids these'
p5008
I0
I0
I01
Ntp5009
asg26
(dp5010
sbsS'TThresholdCA'
p5011
(i__main__
ClassDefinition
p5012
(dp5013
g4
I1
sg5
I0
sg6
g5011
sg7
S'TOrange'
p5014
sg9
I00
sg10
(lp5015
sg12
(lp5016
sg26
(dp5017
sbsS'TPreprocessor_addClassNoise'
p5018
(i__main__
ClassDefinition
p5019
(dp5020
g4
I1
sg5
I0
sg6
g5018
sg7
S'TPreprocessor'
p5021
sg9
I00
sg10
(lp5022
sg12
(lp5023
(S'float'
p5024
S'proportion'
p5025
g5025
S'proportion of changed class values'
p5026
I0
I0
I01
Ntp5027
a(S'TRandomGenerator'
p5028
S'randomGenerator'
p5029
g5029
S'random number generator'
p5030
I0
I0
I00
Ntp5031
asg26
(dp5032
sbsS'TFilter'
p5033
(i__main__
ClassDefinition
p5034
(dp5035
g4
I1
sg5
I0
sg6
g5033
sg7
S'TOrange'
p5036
sg9
I01
sg10
(lp5037
sg12
(lp5038
g222
ag226
asg26
(dp5039
sbsS'TRuleBeamCandidateSelector_TakeAll'
p5040
(i__main__
ClassDefinition
p5041
(dp5042
g4
I1
sg5
I0
sg6
g5040
sg7
S'TRuleBeamCandidateSelector'
p5043
sg9
I00
sg10
(lp5044
sg12
(lp5045
sg26
(dp5046
sbsS'TPreprocessor_addMissing'
p5047
(i__main__
ClassDefinition
p5048
(dp5049
g4
I1
sg5
I0
sg6
g5047
sg7
S'TPreprocessor'
p5050
sg9
I00
sg10
(lp5051
sg12
(lp5052
(S'TVariableFloatMap'
p5053
S'proportions'
p5054
g5054
S'proportion of removed values for individual values'
p5055
I0
I0
I00
Ntp5056
a(S'float'
p5057
S'defaultProportion'
p5058
g5058
S'default proportion of removed values (for attributes not specified above)'
p5059
I0
I0
I01
Ntp5060
a(S'int'
p5061
S'specialType'
p5062
g5062
S'special value type (1=DC, 2=DK)'
p5063
I0
I0
I01
Ntp5064
a(S'TRandomGenerator'
p5065
S'randomGenerator'
p5066
g5066
S'random number generator'
p5067
I0
I0
I00
Ntp5068
asg26
(dp5069
sbsS'TThresholdDiscretizer'
p5070
(i__main__
ClassDefinition
p5071
(dp5072
g4
I1
sg5
I0
sg6
g5070
sg7
S'TDiscretizer'
p5073
sg9
I00
sg10
(lp5074
sg12
(lp5075
(S'float'
p5076
S'threshold'
p5077
g5077
S'threshold'
p5078
I0
I0
I01
Ntp5079
ag279
asg26
(dp5080
sbsS'TMakeRandomIndicesN'
p5081
(i__main__
ClassDefinition
p5082
(dp5083
g4
I1
sg5
I0
sg6
g5081
sg7
S'TMakeRandomIndices'
p5084
sg9
I00
sg10
(lp5085
sg12
(lp5086
(S'TFloatList'
p5087
g1640
g1640
S'probabilities of indices (last is 1-sum(p))'
p5088
I0
I0
I00
Ntp5089
ag245
ag249
ag253
asg26
(dp5090
sbsS'TValueFilter_stringList'
p5091
(i__main__
ClassDefinition
p5092
(dp5093
g4
I1
sg5
I0
sg6
g5091
sg7
S'TValueFilter'
p5094
sg9
I00
sg10
(lp5095
sg12
(lp5096
(S'TStringList'
p5097
S'values'
p5098
g5098
S'accepted values'
p5099
I0
I0
I00
Ntp5100
a(S'bool'
p5101
S'caseSensitive'
p5102
g5102
S'if true (default), the comparison is case sensitive'
p5103
I0
I0
I01
Ntp5104
ag2524
ag2528
asg26
(dp5105
sbsS'TDomain'
p5106
(i__main__
ClassDefinition
p5107
(dp5108
g4
I1
sg5
I0
sg6
g5106
sg7
S'TOrange'
p5109
sg9
I00
sg10
(lp5110
sg12
(lp5111
(S'TVariable'
p5112
S'classVar'
p5113
g5113
S'class variable'
p5114
I01
I0
I00
Ntp5115
a(S'TVarList'
p5116
S'attributes'
p5117
g5117
S'list of attributes, excluding the class'
p5118
I01
I0
I00
Ntp5119
a(S'TVarList'
p5120
S'variables'
p5121
g5121
S'list of attributes, including the class at the end of the list'
p5122
I01
I0
I00
Ntp5123
a(S'int'
p5124
S'version'
p5125
g5125
S"unique version identifier; it's changed each time a domain is changed"
p5126
I01
I0
I01
Ntp5127
asg26
(dp5128
sbsS'TTreePruner_SameMajority'
p5129
(i__main__
ClassDefinition
p5130
(dp5131
g4
I1
sg5
I0
sg6
g5129
sg7
S'TTreePruner'
p5132
sg9
I00
sg10
(lp5133
sg12
(lp5134
sg26
(dp5135
sbsS'TDomainDiscretization'
p5136
(i__main__
ClassDefinition
p5137
(dp5138
g4
I1
sg5
I0
sg6
g5136
sg7
S'TOrange'
p5139
sg9
I00
sg10
(lp5140
sg12
(lp5141
(S'TDiscretization'
p5142
S'discretization'
p5143
g5143
S'discretization'
p5144
I0
I0
I00
Ntp5145
asg26
(dp5146
sbsS'TTreeDescender_Python'
p5147
(i__main__
ClassDefinition
p5148
(dp5149
g4
I1
sg5
I0
sg6
g5147
sg7
S'TTreeDescender'
p5150
sg9
I00
sg10
(lp5151
sg12
(lp5152
sg26
(dp5153
sbsS'TKernelFunc'
p5154
(i__main__
ClassDefinition
p5155
(dp5156
g4
I1
sg5
I0
sg6
g5154
sg7
S'TOrange'
p5157
sg9
I01
sg10
(lp5158
sg12
(lp5159
sg26
(dp5160
sbsS'TRuleClassifierConstructor_Python'
p5161
(i__main__
ClassDefinition
p5162
(dp5163
g4
I1
sg5
I0
sg6
g5161
sg7
S'TRuleClassifierConstructor'
p5164
sg9
I00
sg10
(lp5165
sg12
(lp5166
sg26
(dp5167
sbsS'THierarchicalCluster'
p5168
(i__main__
ClassDefinition
p5169
(dp5170
g4
I1
sg5
I0
sg6
g5168
sg7
S'TOrange'
p5171
sg9
I00
sg10
(lp5172
sg12
(lp5173
(S'THierarchicalClusterList'
p5174
S'branches'
p5175
g5175
S'subclusters'
p5176
I0
I0
I00
Ntp5177
a(S'float'
p5178
S'height'
p5179
g5179
S'height'
p5180
I0
I0
I01
Ntp5181
a(S'TIntList'
p5182
S'mapping'
p5183
g5183
S'indices to the list of all elements in the clustering'
p5184
I0
I0
I00
Ntp5185
a(S'int'
p5186
S'first'
p5187
g5187
S"the index into 'elements' to the first element of the cluster"
p5188
I0
I0
I01
Ntp5189
a(S'int'
p5190
S'last'
p5191
g5191
S"the index into 'elements' to the one after the last element of the cluster"
p5192
I0
I0
I01
Ntp5193
asg26
(dp5194
sbsS'TBasketFeeder'
p5195
(i__main__
ClassDefinition
p5196
(dp5197
g4
I1
sg5
I0
sg6
g5195
sg7
S'TOrange'
p5198
sg9
I00
sg10
(lp5199
sg12
(lp5200
(S'bool'
p5201
S'dontStore'
p5202
g5202
S'disables items storing'
p5203
I0
I0
I01
Ntp5204
a(S'bool'
p5205
S'dontCheckStored'
p5206
g5206
S'disables items lookup in the global cache'
p5207
I0
I0
I01
Ntp5208
a(S'TDomain'
p5209
S'domain'
p5210
g5210
S'domain where the meta attributes are stored'
p5211
I0
I0
I00
Ntp5212
a(S'TDomain'
p5213
S'sourceDomain'
p5214
g5214
S'domain with items that can be reused'
p5215
I0
I0
I00
Ntp5216
asg26
(dp5217
sbsS'TSubsetsGenerator_minMaxSize_iterator'
p5218
(i__main__
ClassDefinition
p5219
(dp5220
g4
I1
sg5
I0
sg6
g5218
sg7
S'TSubsetsGenerator_iterator'
p5221
sg9
I00
sg10
(lp5222
sg12
(lp5223
(S'int'
p5224
g3918
g3918
g1167
I01
I0
I01
Ntp5225
a(S'int'
p5226
S'max'
p5227
g5227
S'maximal subset size'
p5228
I0
I0
I01
Ntp5229
a(S'bool'
p5230
S'moreToCome'
p5231
g5231
g1167
I01
I0
I01
Ntp5232
ag158
asg26
(dp5233
sbsS'TRuleEvaluator_mEVC'
p5234
(i__main__
ClassDefinition
p5235
(dp5236
g4
I1
sg5
I0
sg6
g5234
sg7
S'TRuleEvaluator'
p5237
sg9
I00
sg10
(lp5238
sg12
(lp5239
(S'float'
p5240
g885
g885
S'Parameter m for m-estimate after EVC correction'
p5241
I0
I0
I01
Ntp5242
a(S'TEVDistGetter'
p5243
S'evDistGetter'
p5244
g5244
S'get EVC distribution for chi correction'
p5245
I0
I0
I00
Ntp5246
a(S'TVariable'
p5247
S'probVar'
p5248
g5248
S'probability coverage variable (meta usually)'
p5249
I0
I0
I00
Ntp5250
a(S'TRuleValidator'
p5251
S'validator'
p5252
g5252
S'rule validator for best rule'
p5253
I0
I0
I00
Ntp5254
a(S'int'
p5255
S'min_improved'
p5256
g5256
S'minimal number of improved examples'
p5257
I0
I0
I01
Ntp5258
a(S'float'
p5259
S'min_improved_perc'
p5260
g5260
S'minimal percentage of improved examples'
p5261
I0
I0
I01
Ntp5262
a(S'TRule'
p5263
S'bestRule'
p5264
g5264
S'best rule found and evaluated given conditions (min_improved, validator)'
p5265
I0
I0
I00
Ntp5266
a(S'float'
p5267
S'ruleAlpha'
p5268
g5268
S"minimal 'true' rule significance"
p5269
I0
I0
I01
Ntp5270
a(S'float'
p5271
S'attributeAlpha'
p5272
g5272
S'minimal attribute significance'
p5273
I0
I0
I01
Ntp5274
a(S'bool'
p5275
S'returnExpectedProb'
p5276
g5276
S'if true, evaluator returns expected class probability, if false, current class probability'
p5277
I0
I0
I01
Ntp5278
a(S'int'
p5279
S'optimismReduction'
p5280
g5280
S'to select optimstic (0), pessimistic (1) or EVC (2) evaluation'
p5281
I0
I0
I01
Ntp5282
asg26
(dp5283
sbsS'TRuleStoppingCriteria'
p5284
(i__main__
ClassDefinition
p5285
(dp5286
g4
I1
sg5
I0
sg6
g5284
sg7
S'TOrange'
p5287
sg9
I01
sg10
(lp5288
sg12
(lp5289
sg26
(dp5290
sbsS'TFixedDiscretization'
p5291
(i__main__
ClassDefinition
p5292
(dp5293
g4
I1
sg5
I0
sg6
g5291
sg7
S'TDiscretization'
p5294
sg9
I00
sg10
(lp5295
sg12
(lp5296
(S'TFloatList'
p5297
S'points'
p5298
g5298
S'cut-off points'
p5299
I0
I0
I00
Ntp5300
asg26
(dp5301
sbsS'TExampleClusters'
p5302
(i__main__
ClassDefinition
p5303
(dp5304
g4
I1
sg5
I0
sg6
g5302
sg7
S'TGeneralExampleClustering'
p5305
sg9
I00
sg10
(lp5306
sg12
(lp5307
(S'TExampleCluster'
p5308
S'root'
p5309
g5309
S'root of cluster hierarchy'
p5310
I0
I0
I00
Ntp5311
a(S'float'
p5312
S'quality'
p5313
g5313
S"'quality' of clustering"
p5314
I0
I0
I01
Ntp5315
asg26
(dp5316
sbsS'TRuleDataStoppingCriteria'
p5317
(i__main__
ClassDefinition
p5318
(dp5319
g4
I1
sg5
I0
sg6
g5317
sg7
S'TOrange'
p5320
sg9
I01
sg10
(lp5321
sg12
(lp5322
sg26
(dp5323
sbsS'TPreprocessor_filter'
p5324
(i__main__
ClassDefinition
p5325
(dp5326
g4
I1
sg5
I0
sg6
g5324
sg7
S'TPreprocessor'
p5327
sg9
I00
sg10
(lp5328
sg12
(lp5329
(S'TFilter'
p5330
S'filter'
p5331
g5331
S'filter'
p5332
I0
I0
I00
Ntp5333
asg26
(dp5334
sbsS'TLookupLearner'
p5335
(i__main__
ClassDefinition
p5336
(dp5337
g4
I1
sg5
I0
sg6
g5335
sg7
S'TLearner'
p5338
sg9
I00
sg10
(lp5339
sg12
(lp5340
(S'TLearner'
p5341
S'learnerForUnknown'
p5342
g5342
S'a learner for classifying cases not found in the table'
p5343
I0
I0
I00
Ntp5344
a(S'bool'
p5345
S'allowFastLookups'
p5346
g5346
S'if true, it constructs LookupClassifiers for <=3 attributes'
p5347
I0
I0
I01
Ntp5348
a(S'int'
p5349
S'unknownsHandling'
p5350
g5350
S'0 omit examples with unknowns, 1 distribute them, 2 keep them in table'
p5351
I0
I0
I01
Ntp5352
ag44
asg26
(dp5353
sbsS'TImputeClassifier'
p5354
(i__main__
ClassDefinition
p5355
(dp5356
g4
I1
sg5
I0
sg6
g5354
sg7
S'TClassifier'
p5357
sg9
I00
sg10
(lp5358
sg12
(lp5359
(S'TClassifierFromVar'
p5360
S'classifierFromVar'
p5361
g5361
S'ClassifierFromVar that is used to retrieve defined values'
p5362
I0
I0
I00
Ntp5363
a(S'TClassifier'
p5364
S'imputer'
p5365
g5365
S'classifier that is used to determine the missing values '
p5366
I0
I0
I00
Ntp5367
ag796
ag800
asg26
(dp5368
sbsS'TMeasureAttribute_chiSquare'
p5369
(i__main__
ClassDefinition
p5370
(dp5371
g4
I1
sg5
I0
sg6
g5369
sg7
S'TMeasureAttributeFromProbabilities'
p5372
sg9
I00
sg10
(lp5373
sg12
(lp5374
(S'bool'
p5375
S'computeProbabilities'
p5376
g5376
g1167
I0
I0
I01
Ntp5377
ag399
ag403
ag408
ag413
ag417
ag421
ag425
asg26
(dp5378
sbsS'TDistribution'
p5379
(i__main__
ClassDefinition
p5380
(dp5381
g4
I1
sg5
I0
sg6
g5379
sg7
S'TSomeValue'
p5382
sg9
I01
sg10
(lp5383
sg12
(lp5384
g1958
ag1962
ag1966
ag1970
ag1974
ag1978
ag1982
ag1986
asg26
(dp5385
sbsS'TTreePruner_m'
p5386
(i__main__
ClassDefinition
p5387
(dp5388
g4
I1
sg5
I0
sg6
g5386
sg7
S'TTreePruner'
p5389
sg9
I00
sg10
(lp5390
sg12
(lp5391
(S'float'
p5392
g885
g885
S'm for m-estimate'
p5393
I0
I0
I01
Ntp5394
asg26
(dp5395
sbsS'TBiModalDiscretization'
p5396
(i__main__
ClassDefinition
p5397
(dp5398
g4
I1
sg5
I0
sg6
g5396
sg7
S'TDiscretization'
p5399
sg9
I00
sg10
(lp5400
sg12
(lp5401
(S'bool'
p5402
S'splitInTwo'
p5403
g5403
S'if true (default), flanks are merged into a single interval'
p5404
I0
I0
I01
Ntp5405
asg26
(dp5406
sbsS'TRuleBeamRefiner_Python'
p5407
(i__main__
ClassDefinition
p5408
(dp5409
g4
I1
sg5
I0
sg6
g5407
sg7
S'TRuleBeamRefiner'
p5410
sg9
I00
sg10
(lp5411
sg12
(lp5412
sg26
(dp5413
sbsS'TClassifierFromVarFD'
p5414
(i__main__
ClassDefinition
p5415
(dp5416
g4
I1
sg5
I0
sg6
g5414
sg7
S'TClassifierFD'
p5417
sg9
I00
sg10
(lp5418
sg12
(lp5419
(S'int'
p5420
S'position'
p5421
g5421
S'position of the attribute in domain'
p5422
I0
I0
I01
Ntp5423
a(S'TTransformValue'
p5424
S'transformer'
p5425
g5425
S'transformer'
p5426
I0
I0
I00
Ntp5427
a(S'TDistribution'
p5428
S'distributionForUnknown'
p5429
g5429
S'distribution for unknown value'
p5430
I0
I0
I00
Ntp5431
a(S'bool'
p5432
S'transformUnknowns'
p5433
g5433
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p5434
I0
I0
I01
Ntp5435
ag792
ag796
ag800
asg26
(dp5436
sbsS'TImputer_model'
p5437
(i__main__
ClassDefinition
p5438
(dp5439
g4
I1
sg5
I0
sg6
g5437
sg7
S'TImputer'
p5440
sg9
I00
sg10
(lp5441
sg12
(lp5442
(S'TClassifierList'
p5443
S'models'
p5444
g5444
S'classifiers'
p5445
I0
I0
I00
Ntp5446
asg26
(dp5447
sbsS'TFeatureByDistributions'
p5448
(i__main__
ClassDefinition
p5449
(dp5450
g4
I1
sg5
I0
sg6
g5448
sg7
S'TFeatureInducer'
p5451
sg9
I00
sg10
(lp5452
sg12
(lp5453
(S'TClustersFromDistributions'
p5454
S'clustersFromDistributions'
p5455
g5455
S'clustering algorithm'
p5456
I0
I0
I00
Ntp5457
a(S'int'
p5458
S'completion'
p5459
g5459
S' decides how to determine the class for points not covered by any cluster'
p5460
I0
I0
I01
S'FeatureByDistributions_Completion'
p5461
tp5462
asg26
(dp5463
S'Completion'
p5464
(lp5465
(S'NoCompletion'
p5466
S'completion_no'
p5467
tp5468
a(S'CompletionByDefault'
p5469
S'completion_default'
p5470
tp5471
a(S'CompletionByBayes'
p5472
S'completion_bayes'
p5473
tp5474
assbsS'TPreprocessor_takeMissing'
p5475
(i__main__
ClassDefinition
p5476
(dp5477
g4
I1
sg5
I0
sg6
g5475
sg7
S'TPreprocessor'
p5478
sg9
I00
sg10
(lp5479
sg12
(lp5480
sg26
(dp5481
sbsS'TTreeDescender_UnknownToBranch'
p5482
(i__main__
ClassDefinition
p5483
(dp5484
g4
I1
sg5
I0
sg6
g5482
sg7
g1991
sg9
I0
sg10
(lp5485
sg12
(lp5486
sg26
(dp5487
sbsS'TTreeSplitConstructor_Attribute'
p5488
(i__main__
ClassDefinition
p5489
(dp5490
g4
I1
sg5
I0
sg6
g5488
sg7
S'TTreeSplitConstructor_Measure'
p5491
sg9
I00
sg10
(lp5492
sg12
(lp5493
g2139
ag2143
ag1551
asg26
(dp5494
sbsS'TCostMatrix'
p5495
(i__main__
ClassDefinition
p5496
(dp5497
g4
I1
sg5
I0
sg6
g5495
sg7
S'TOrange'
p5498
sg9
I00
sg10
(lp5499
sg12
(lp5500
(S'TVariable'
p5501
S'classVar'
p5502
g5502
S'attribute to which the matrix applies'
p5503
I0
I0
I00
Ntp5504
a(S'int'
p5505
S'dimension'
p5506
g5506
S'dimension (should equal classVar.noOfValues())'
p5507
I01
I0
I01
Ntp5508
asg26
(dp5509
sbsS'TTreeExampleSplitter_UnknownsToAll'
p5510
(i__main__
ClassDefinition
p5511
(dp5512
g4
I1
sg5
I0
sg6
g5510
sg7
S'TTreeExampleSplitter'
p5513
sg9
I00
sg10
(lp5514
sg12
(lp5515
sg26
(dp5516
sbsS'TC45TreeNode'
p5517
(i__main__
ClassDefinition
p5518
(dp5519
g4
I1
sg5
I0
sg6
g5517
sg7
S'TOrange'
p5520
sg9
I00
sg10
(lp5521
sg12
(lp5522
(S'int'
p5523
S'nodeType'
p5524
g5524
S' 0 = leaf,  1 = branch,  2 = cut,  3 = subset'
p5525
I0
I0
I01
S'C45TreeNode_NodeType'
p5526
tp5527
a(S'TValue'
p5528
S'leaf'
p5529
g5529
S'most frequent class at this node'
p5530
I0
I0
I01
Ntp5531
a(S'float'
p5532
S'items'
p5533
g5533
S'no of items at this node'
p5534
I0
I0
I01
Ntp5535
a(S'TDiscDistribution'
p5536
S'classDist'
p5537
g5537
S'class distribution of items'
p5538
I0
I0
I00
Ntp5539
a(S'TVariable'
p5540
S'tested'
p5541
g5541
S'attribute referenced in test'
p5542
I0
I0
I00
Ntp5543
a(S'float'
p5544
S'cut'
p5545
g5545
S'threshold for continuous attribute'
p5546
I0
I0
I01
Ntp5547
a(S'float'
p5548
S'lower'
p5549
g5549
S'lower limit of soft threshold'
p5550
I0
I0
I01
Ntp5551
a(S'float'
p5552
S'upper'
p5553
g5553
S'upper limit of soft threshold'
p5554
I0
I0
I01
Ntp5555
a(S'TIntList'
p5556
S'mapping'
p5557
g5557
S'mapping for discrete value'
p5558
I0
I0
I00
Ntp5559
a(S'TC45TreeNodeList'
p5560
S'branch'
p5561
g5561
S'branch[x] = (sub)tree for outcome x */'
p5562
I0
I0
I00
Ntp5563
asg26
(dp5564
S'NodeType'
p5565
(lp5566
(S'Leaf'
p5567
S'0'
p5568
tp5569
a(S'Branch'
p5570
I1
tp5571
a(S'Cut'
p5572
I2
tp5573
a(S'Subset'
p5574
I3
tp5575
assbsS'TIMConstructor'
p5576
(i__main__
ClassDefinition
p5577
(dp5578
g4
I1
sg5
I0
sg6
g5576
sg7
S'TOrange'
p5579
sg9
I01
sg10
(lp5580
sg12
(lp5581
g2367
asg26
(dp5582
sbsS'TConditionalProbabilityEstimatorConstructor_loess'
p5583
(i__main__
ClassDefinition
p5584
(dp5585
g4
I1
sg5
I0
sg6
g5583
sg7
S'TConditionalProbabilityEstimatorConstructor'
p5586
sg9
I00
sg10
(lp5587
sg12
(lp5588
(S'float'
p5589
S'windowProportion'
p5590
g5590
S'The proportion of points in a window for LR'
p5591
I0
I0
I01
Ntp5592
a(S'int'
p5593
S'nPoints'
p5594
g5594
S'The number of points on curve'
p5595
I0
I0
I01
Ntp5596
a(S'int'
p5597
S'distributionMethod'
p5598
g5598
S" Meaning of the 'nPoints'"
p5599
I0
I0
I01
S'ConditionalProbabilityEstimatorConstructor_loess_DistributionMethod'
p5600
tp5601
asg26
(dp5602
S'DistributionMethod'
p5603
(lp5604
(S'Minimal'
p5605
S'DISTRIBUTE_MINIMAL'
p5606
tp5607
a(S'Factor'
p5608
S'DISTRIBUTE_FACTOR'
p5609
tp5610
a(S'Fixed'
p5611
S'DISTRIBUTE_FIXED'
p5612
tp5613
a(S'Uniform'
p5614
S'DISTRIBUTE_UNIFORM'
p5615
tp5616
a(S'Maximal'
p5617
S'DISTRIBUTE_MAXIMAL'
p5618
tp5619
assbsS'TTreeSplitConstructor_Threshold'
p5620
(i__main__
ClassDefinition
p5621
(dp5622
g4
I1
sg5
I0
sg6
g5620
sg7
S'TTreeSplitConstructor_Measure'
p5623
sg9
I00
sg10
(lp5624
sg12
(lp5625
g2139
ag2143
ag1551
asg26
(dp5626
sbsS'TDistanceMap'
p5627
(i__main__
ClassDefinition
p5628
(dp5629
g4
I1
sg5
I0
sg6
g5627
sg7
S'TOrange'
p5630
sg9
I00
sg10
(lp5631
sg12
(lp5632
(S'int'
p5633
S'dim'
p5634
g5634
S'bitmap dimension (in cells)'
p5635
I01
I0
I01
Ntp5636
a(S'int'
p5637
S'matrixType'
p5638
g5638
S'0 lower, 1 upper, 2 symmetric'
p5639
I0
I0
I01
Ntp5640
a(S'TIntList'
p5641
S'elementIndices'
p5642
g5642
S'indices to elements (one for row + one at the end)'
p5643
I01
I0
I00
Ntp5644
asg26
(dp5645
sbsS'TExampleForMissing'
p5646
(i__main__
ClassDefinition
p5647
(dp5648
g4
I1
sg5
I0
sg6
g5646
sg7
S'TExample'
p5649
sg9
I00
sg10
(lp5650
sg12
(lp5651
(S'TEFMDataDescription'
p5652
S'dataDescription'
p5653
g5653
S'data description'
p5654
I0
I0
I00
Ntp5655
ag2484
ag2487
asg26
(dp5656
sbsS'TCostLearner'
p5657
(i__main__
ClassDefinition
p5658
(dp5659
g4
I1
sg5
I0
sg6
g5657
sg7
S'TMajorityLearner'
p5660
sg9
I00
sg10
(lp5661
sg12
(lp5662
(S'TCostMatrix'
p5663
S'cost'
p5664
g5664
S'cost matrix'
p5665
I0
I0
I00
Ntp5666
ag1782
ag1786
ag44
asg26
(dp5667
sbsS'TPreprocessor_drop'
p5668
(i__main__
ClassDefinition
p5669
(dp5670
g4
I1
sg5
I0
sg6
g5668
sg7
S'TPreprocessor'
p5671
sg9
I00
sg10
(lp5672
sg12
(lp5673
(S'TVariableFilterMap'
p5674
S'values'
p5675
g5675
S'variable-filter pairs'
p5676
I0
I0
I00
Ntp5677
a(S'bool'
p5678
S'conjunction'
p5679
g5679
S'decides whether to take conjunction or disjunction of values'
p5680
I0
I0
I01
Ntp5681
asg26
(dp5682
sbsS'TPreprocessor_addNoise'
p5683
(i__main__
ClassDefinition
p5684
(dp5685
g4
I1
sg5
I0
sg6
g5683
sg7
S'TPreprocessor'
p5686
sg9
I00
sg10
(lp5687
sg12
(lp5688
(S'TVariableFloatMap'
p5689
S'proportions'
p5690
g5690
S'proportion of changed values for individual attributes'
p5691
I0
I0
I00
Ntp5692
a(S'float'
p5693
S'defaultProportion'
p5694
g5694
S'default proportion of changed values (for attributes not specified above)'
p5695
I0
I0
I01
Ntp5696
a(S'TRandomGenerator'
p5697
S'randomGenerator'
p5698
g5698
S'random number generator'
p5699
I0
I0
I00
Ntp5700
asg26
(dp5701
sbsS'TColumnAssessor_mf'
p5702
(i__main__
ClassDefinition
p5703
(dp5704
g4
I1
sg5
I0
sg6
g5702
sg7
S'TColumnAssessor'
p5705
sg9
I00
sg10
(lp5706
sg12
(lp5707
(S'float'
p5708
g885
g885
S'm for m-estimate'
p5709
I0
I0
I01
Ntp5710
asg26
(dp5711
sbsS'TSubsetsGenerator'
p5712
(i__main__
ClassDefinition
p5713
(dp5714
g4
I1
sg5
I0
sg6
g5712
sg7
S'TOrange'
p5715
sg9
I01
sg10
(lp5716
sg12
(lp5717
g2113
asg26
(dp5718
sbsS'TPreprocessor_addCensorWeight'
p5719
(i__main__
ClassDefinition
p5720
(dp5721
g4
I1
sg5
I0
sg6
g5719
sg7
S'TPreprocessor'
p5722
sg9
I00
sg10
(lp5723
sg12
(lp5724
(S'TVariable'
p5725
S'outcomeVar'
p5726
g5726
S'outcome variable'
p5727
I0
I0
I00
Ntp5728
a(S'TVariable'
p5729
S'timeVar'
p5730
g5730
S'time variable'
p5731
I0
I0
I00
Ntp5732
a(S'TValue'
p5733
S'eventValue'
p5734
g5734
S'event (fail) value'
p5735
I0
I0
I01
Ntp5736
a(S'int'
p5737
S'method'
p5738
g5738
S' weighting method'
p5739
I0
I0
I01
S'Preprocessor_addCensorWeight_Method'
p5740
tp5741
a(S'float'
p5742
S'maxTime'
p5743
g5743
S'maximal time'
p5744
I0
I0
I01
Ntp5745
a(S'bool'
p5746
S'addComplementary'
p5747
g5747
S'if true (default is false), complementary examples are added for censored examples'
p5748
I0
I0
I01
Ntp5749
asg26
(dp5750
S'Method'
p5751
(lp5752
(S'Linear'
p5753
S'TPreprocessor_addCensorWeight::linear'
p5754
tp5755
a(S'KM'
p5756
S'TPreprocessor_addCensorWeight::km'
p5757
tp5758
a(S'Bayes'
p5759
S'TPreprocessor_addCensorWeight::bayes'
p5760
tp5761
assbsS'TGaussianDistribution'
p5762
(i__main__
ClassDefinition
p5763
(dp5764
g4
I1
sg5
I0
sg6
g5762
sg7
S'TDistribution'
p5765
sg9
I00
sg10
(lp5766
sg12
(lp5767
(S'float'
p5768
S'mean'
p5769
g5769
S'mu'
p5770
I0
I0
I01
Ntp5771
a(S'float'
p5772
S'sigma'
p5773
g5773
S'sigma'
p5774
I0
I0
I01
Ntp5775
ag1958
ag1962
ag1966
ag1970
ag1974
ag1978
ag1982
ag1986
asg26
(dp5776
sbsS'TProbabilityEstimator'
p5777
(i__main__
ClassDefinition
p5778
(dp5779
g4
I1
sg5
I0
sg6
g5777
sg7
S'TOrange'
p5780
sg9
I01
sg10
(lp5781
sg12
(lp5782
g653
ag657
asg26
(dp5783
sbsS'TPreprocessor'
p5784
(i__main__
ClassDefinition
p5785
(dp5786
g4
I1
sg5
I0
sg6
g5784
sg7
S'TOrange'
p5787
sg9
I01
sg10
(lp5788
sg12
(lp5789
sg26
(dp5790
sbsS'TExampleGenerator'
p5791
(i__main__
ClassDefinition
p5792
(dp5793
g4
I1
sg5
I0
sg6
g5791
sg7
S'TOrange'
p5794
sg9
I01
sg10
(lp5795
sg12
(lp5796
g92
ag96
asg26
(dp5797
sbsS'TGeneralExampleClustering'
p5798
(i__main__
ClassDefinition
p5799
(dp5800
g4
I1
sg5
I0
sg6
g5798
sg7
S'TOrange'
p5801
sg9
I01
sg10
(lp5802
sg12
(lp5803
sg26
(dp5804
sbs.