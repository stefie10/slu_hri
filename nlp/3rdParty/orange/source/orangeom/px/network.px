/* This file was generated by pyxtract 
   Do not edit.*/

extern IMPORT_DLL TOrangeType PyOrGraphAsList_Type;


/* -------------- Network --------------*/

PyMethodDef Network_methods[] = {
     {"expandMeta", (binaryfunc)Network_expandMeta, METH_VARARGS, "(index) -> None"},
     {"fromDistanceMatrix", (binaryfunc)Network_fromDistanceMatrix, METH_VARARGS, "(matrix, lower, upper, kNN, andor) -> noConnectedNodes"},
     {"fromSymMatrix", (binaryfunc)Network_fromSymMatrix, METH_VARARGS, "(matrix, lower, upper, kNN, andor) -> noConnectedNodes"},
     {"getVisible", (binaryfunc)Network_getVisible, METH_NOARGS, "None -> None"},
     {"groupVerticesInHierarchy", (binaryfunc)Network_groupVerticesInHierarchy, METH_VARARGS, "(List of vertices) -> None"},
     {"hideVertices", (binaryfunc)Network_hideVertices, METH_VARARGS, "(List of vertices) -> None"},
     {"printHierarchy", (binaryfunc)Network_printHierarchy, METH_NOARGS, "None -> None"},
     {"printNodeByVertex", (binaryfunc)Network_printNodeByVertex, METH_VARARGS, "(vertex) -> None"},
     {"readNetwork", (binaryfunc)Network_readNetwork, METH_VARARGS, "(fn) -> Network"},
     {"showAll", (binaryfunc)Network_showAll, METH_NOARGS, "None -> None"},
     {"showVertices", (binaryfunc)Network_showVertices, METH_VARARGS, "(List of vertices) -> None"},
     {NULL, NULL}
};

PyGetSetDef Network_getset[]=  {
  {"coors", (getter)Network_get_coors, NULL},
  {NULL}};



PyTypeObject PyOrNetwork_Type_inh = {
  PyObject_HEAD_INIT((_typeobject *)&PyType_Type)
  0,
  "orangeom.Network",
  sizeof(TPyOrange), 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE | Py_TPFLAGS_HAVE_RICHCOMPARE, /* tp_flags */
  "(nVertices, directed[, nEdgeTypes])",             /* tp_doc */
  0, 0, 0, 0, 0, 0,
  Network_methods,                                   /* tp_methods */
  0,
  Network_getset,                                    /* tp_getset */
  (_typeobject *)&PyOrGraphAsList_Type,              /* tp_base */
  0, 0, 0, 0, 0,
  PyType_GenericAlloc,                               /* tp_alloc */
  (newfunc)Network_new,                              /* tp_new */
  _PyObject_GC_Del,                                  /* tp_free */
  0, 0, 0, 0, 0, 0,
};

int cc_func_Network(PyObject *obj, void *ptr) { if (!PyOrNetwork_Check(obj)) return 0;      *(GCPtr<TNetwork> *)(ptr) = PyOrange_AsNetwork(obj); return 1; }
int ccn_func_Network(PyObject *obj, void *ptr) { if (obj == Py_None) { *(GCPtr<TNetwork> *)(ptr) = GCPtr<TNetwork>(); return 1; }      if (!PyOrNetwork_Check(obj)) return 0;      *(GCPtr<TNetwork> *)(ptr) = PyOrange_AsNetwork(obj); return 1; }


ORANGEOM_API TOrangeType PyOrNetwork_Type (PyOrNetwork_Type_inh, typeid(TNetwork), 0, cc_Network, ccn_Network, NULL, false, NULL, NULL);



